var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.723,1,1.407]],["body/components/AppComponent.html",[0,0.925,1,2.007,2,1.767,3,0.122,4,0.107,5,1.242,6,1.242,7,1.242,8,1.242,9,0.107,10,2.196,11,1.105,12,2.827,13,2.963,14,1.875,15,1.767,16,4.657,17,1.767,18,3.866,19,0.423,20,0.581,21,2.239,22,4.657,23,4.657,24,1.643,25,1.099,26,4.448,27,3.065,28,0.765,29,1.955,30,3.021,31,2.968,32,3.961,33,1.583,34,3.866,35,0.728,36,0.02,37,1.204,38,0.545,39,0.509,40,2.561,41,1.099,42,1.802,43,2.561,44,1.541,45,1.751,46,2.561,47,1.995,48,0.652,49,3.597,50,2.561,51,0.453,52,0.363,53,2.196,54,1.776,55,1.17,56,1.418,57,2.464,58,2.561,59,1.632,60,2.196,61,0.138,62,0.32,63,1.17,64,2.561,65,3.315,66,2.561,67,4.657,68,2.561,69,1.622,70,5.569,71,3.866,72,3.315,73,2.196,74,3.866,75,2.561,76,2.561,77,2.561,78,2.561,79,2.952,80,0.991,81,2.561,82,1.955,83,4.448,84,2.371,85,1.579,86,1.776,87,1.321,88,2.561,89,2.561,90,2.561,91,2.561,92,2.196,93,3.866,94,2.13,95,1.411,96,2.561,97,0.94,98,1.955,99,2.561,100,2.561,101,2.561,102,2.196,103,3.866,104,4.448,105,3.315,106,1.178,107,2.196,108,2.561,109,1.513,110,2.561,111,2.13,112,2.13,113,2.681,114,1.995,115,2.403,116,1.321,117,1.321,118,3.065,119,2.677,120,1.955,121,1.776,122,1.513,123,1.776,124,3.304,125,1.955,126,2.952,127,2.196,128,1.411,129,4.657,130,2.561,131,2.13,132,2.561,133,2.561,134,2.561,135,2.561,136,2.196,137,1.955,138,1.955,139,2.196,140,2.464,141,1.321,142,1.995,143,3.068,144,1.955,145,3.866,146,1.411,147,5.855,148,4.657,149,2.561,150,2.13,151,2.565,152,1.411,153,2.196,154,2.196,155,2.561,156,2.196,157,2.561,158,2.561,159,3.55,160,3.229,161,2.681,162,2.561,163,2.196,164,2.561,165,2.561,166,3.866,167,1.995,168,2.677,169,2.677,170,1.776,171,1.632,172,2.561,173,1.955,174,1.411,175,1.776,176,4.657,177,2.196,178,1.776,179,2.561,180,2.561,181,0.805,182,1.875,183,1.875,184,0.94,185,2.516,186,1.242,187,0.991,188,1.875,189,1.242,190,0.991,191,1.902,192,1.242,193,0.94,194,0.991,195,0.765,196,1.242,197,1.105,198,1.242,199,0.94,200,1.242,201,0.94,202,1.105,203,1.242,204,0.991,205,1.242,206,0.991,207,1.242,208,0.991,209,0.765,210,1.242,211,1.046,212,0.94,213,1.242,214,0.94,215,1.17,216,1.242,217,0.01,218,0.01]],["title/modules/AppModule.html",[219,1.034,220,2.522]],["body/modules/AppModule.html",[1,2.873,3,0.217,4,0.189,9,0.189,13,1.957,36,0.02,51,0.63,52,0.643,53,3.889,55,2.073,61,0.245,62,0.567,84,2.073,97,1.664,181,1.426,217,0.015,218,0.015,219,1.289,220,5.123,221,1.664,222,2.073,223,3.264,224,3.264,225,3.068,226,1.852,227,3.889,228,3.889,229,3.889,230,3.889,231,3.889,232,4.475,233,4.475,234,2.971,235,2.34,236,4.535,237,2.485,238,2.485,239,5.758,240,4.937,241,3.463,242,2.68,243,4.535,244,5.758,245,4.535,246,5.758,247,5.758,248,2.68,249,3.463,250,4.535,251,4.937,252,4.535,253,4.535,254,4.535]],["title/modules/AppRoutingModule.html",[219,1.034,232,2.319]],["body/modules/AppRoutingModule.html",[3,0.233,4,0.203,9,0.203,36,0.02,51,0.571,52,0.691,61,0.263,62,0.61,69,1.698,217,0.016,218,0.016,221,1.789,226,1.991,232,3.841,237,2.105,238,2.601,255,4.876,256,3.381,257,4.178,258,3.602,259,2.365,260,4.178,261,4.876,262,4.146,263,6.831,264,4.876,265,3.108,266,4.876,267,4.876,268,4.181,269,4.876,270,4.876,271,3.723,272,4.181,273,4.876,274,4.876,275,4.876,276,4.876,277,4.181,278,4.876,279,4.876,280,4.876]],["title/guards/AuthGuard.html",[260,2.522,281,2.778]],["body/guards/AuthGuard.html",[3,0.235,4,0.206,9,0.206,14,2.388,19,0.538,25,1.723,28,1.963,33,1.639,35,1.4,36,0.02,37,1.143,38,0.576,39,0.978,41,1.4,47,3.128,51,0.529,52,0.698,61,0.266,62,0.616,65,4.223,69,1.715,97,1.807,106,1.142,217,0.016,218,0.016,259,2.388,260,4.204,272,5.877,282,3.761,283,4.223,284,4.925,285,6.063,286,5.234,287,6.568,288,5.234,289,4.925,290,4.925,291,2.345,292,2.345,293,2.541,294,2.251,295,6.854,296,4.925,297,4.925,298,3.761,299,3.761,300,1.905]],["title/interceptors/AuthInterceptorService.html",[233,2.319,301,3.119]],["body/interceptors/AuthInterceptorService.html",[3,0.132,4,0.115,9,0.115,14,1.339,19,0.302,20,0.615,21,2.821,25,1.163,26,2.368,28,0.826,29,2.109,30,3.107,33,1.554,35,1.385,36,0.02,37,1.131,38,0.63,39,0.968,41,1.163,44,1.353,45,1.532,47,3.107,48,0.466,49,3.735,51,0.525,52,0.391,61,0.149,62,0.345,63,1.262,69,1.425,80,2.225,82,3.72,85,1.128,97,1.501,102,2.368,106,0.52,127,2.368,128,2.253,131,1.521,217,0.011,218,0.011,233,2.607,248,1.632,249,4.598,292,1.582,293,1.425,294,1.262,300,2.476,302,2.762,303,3.558,304,2.368,305,5.386,306,6.022,307,4.872,308,4.09,309,2.762,310,4.09,311,6.232,312,4.533,313,6.232,314,2.762,315,4.872,316,2.967,317,4.09,318,2.762,319,2.762,320,4.177,321,4.09,322,2.762,323,2.368,324,1.339,325,4.09,326,2.762,327,4.09,328,4.872,329,1.76,330,2.368,331,4.872,332,1.915,333,2.368,334,2.762,335,2.762,336,2.762,337,6.537,338,2.762,339,2.368,340,2.762,341,4.09,342,2.762,343,2.368,344,2.607,345,4.09,346,2.762,347,2.368,348,2.762,349,2.762,350,4.09,351,2.762,352,2.762,353,2.762,354,4.09,355,2.368,356,2.368,357,2.368,358,1.521,359,4.09,360,2.762,361,2.762,362,4.872,363,4.167,364,4.759,365,2.762,366,2.368,367,2.762,368,2.368,369,5.386,370,2.368,371,2.762,372,2.762,373,2.368,374,2.762,375,2.368,376,2.762,377,4.872,378,2.762,379,4.09,380,2.762,381,2.762,382,2.762,383,2.762,384,2.762,385,2.762,386,2.762,387,4.872,388,4.09,389,4.09,390,2.762,391,2.762,392,3.378,393,2.762,394,2.762,395,2.368,396,2.762,397,2.762,398,2.836,399,5.386,400,2.762,401,2.762,402,1.915,403,4.09,404,4.09,405,4.872,406,4.09,407,2.762,408,2.762,409,2.762,410,3.507,411,2.762,412,2.368,413,2.368,414,1.76,415,5.386,416,2.762,417,3.507,418,2.762,419,2.762,420,2.762,421,4.09,422,2.762,423,2.762,424,3.507,425,2.762,426,2.762,427,2.762,428,2.762,429,2.762,430,2.762,431,2.762,432,2.762,433,2.762,434,4.09,435,4.09,436,2.762,437,2.762,438,2.762,439,2.762,440,2.762,441,2.368,442,2.762,443,2.762,444,2.368,445,2.762,446,2.762,447,2.762,448,2.762,449,2.368]],["title/modules/AuthModule.html",[219,1.034,450,2.522]],["body/modules/AuthModule.html",[3,0.227,4,0.198,9,0.198,36,0.02,51,0.629,52,0.672,61,0.256,62,0.593,84,2.168,181,1.492,199,2.605,204,2.747,217,0.015,218,0.015,219,1.349,221,1.741,222,2.168,223,3.333,224,2.448,225,2.301,226,1.937,234,3.057,235,2.448,237,2.557,238,2.557,242,2.803,268,4.069,324,2.301,450,5.181,451,4.069,452,4.069,453,4.069,454,4.526,455,3.664,456,4.745,457,3.5,458,4.069,459,4.069,460,4.524,461,2.301,462,3.29]],["title/modules/AuthRoutingModule.html",[219,1.034,454,2.319]],["body/modules/AuthRoutingModule.html",[0,1.222,3,0.241,4,0.211,9,0.211,36,0.02,51,0.618,52,0.715,61,0.272,62,0.631,69,1.758,199,2.258,204,2.381,217,0.016,218,0.016,221,1.851,225,2.447,226,2.06,237,2.178,238,2.656,256,3.499,257,4.267,258,3.657,259,2.447,262,3.923,398,4.267,454,3.922,458,4.327,459,4.327,463,5.046,464,4.232,465,3.499,466,5.046,467,5.046,468,4.327,469,4.327,470,4.327,471,4.327,472,3.853,473,3.853]],["title/injectables/AuthService.html",[30,1.877,292,1.407]],["body/injectables/AuthService.html",[3,0.144,4,0.125,9,0.125,14,1.457,19,0.328,20,0.654,21,2.882,24,1.515,25,1.237,28,0.898,30,2.245,33,1.909,35,1.691,36,0.02,37,1.382,38,0.726,39,1.182,41,1.863,42,1.979,44,1.969,45,1.871,47,1.55,48,1.182,51,0.541,52,0.426,61,0.162,62,0.376,63,1.373,69,1.953,80,2.475,106,0.819,217,0.011,218,0.011,248,1.775,262,1.775,291,1.683,292,1.683,293,1.55,298,3.322,299,3.322,300,2.4,303,4.203,312,2.083,316,2.639,320,4.385,323,2.576,324,1.457,344,2.773,355,2.576,356,2.576,357,2.576,358,1.655,363,1.915,398,2.083,441,4.808,444,2.576,474,1.915,475,2.576,476,5.114,477,3.054,478,5.114,479,5.114,480,5.114,481,5.114,482,4.35,483,5.607,484,4.35,485,4.35,486,5.607,487,4.35,488,5.607,489,2.083,490,3.888,491,3.004,492,4.35,493,3.004,494,3.004,495,4.35,496,3.004,497,4.35,498,4.281,499,3.004,500,3.004,501,3.004,502,4.35,503,4.126,504,3.004,505,3.004,506,4.35,507,3.004,508,4.35,509,3.004,510,4.35,511,3.004,512,3.004,513,4.35,514,3.004,515,3.004,516,1.915,517,3.004,518,4.35,519,3.004,520,3.004,521,4.35,522,2.576,523,2.576,524,2.576,525,2.576,526,2.576,527,2.576,528,2.576,529,3.73,530,3.004,531,3.004,532,3.004,533,3.004,534,4.35,535,3.017,536,3.004,537,3.004,538,3.004,539,3.004,540,3.004,541,3.004,542,3.004,543,3.004,544,4.35,545,3.004,546,3.004,547,3.004,548,3.004,549,3.004]],["title/components/BandFormComponent.html",[0,0.723,190,1.407]],["body/components/BandFormComponent.html",[0,0.751,1,0.717,2,1.372,3,0.228,4,0.077,5,0.899,6,0.899,7,0.899,8,0.899,9,0.077,11,0.8,12,2.645,13,2.722,15,1.372,17,1.372,19,0.203,20,0.451,21,2.206,25,0.853,28,0.897,33,1.789,35,0.527,36,0.02,37,1.464,38,0.63,39,0.751,41,1.075,42,1.848,44,1.439,45,1.367,47,1.952,48,0.806,51,0.417,52,0.263,55,0.847,56,0.68,61,0.1,62,0.232,80,2.641,85,0.757,86,2.081,87,1.952,94,1.654,95,1.021,97,1.101,98,2.292,106,0.565,109,1.095,111,2.084,112,2.631,114,2.464,115,2.892,116,1.952,117,1.952,119,1.549,122,1.773,123,1.285,124,2.988,131,1.654,141,3.069,142,2.464,143,2.084,146,1.021,150,2.816,151,2.084,160,2.243,167,1.549,168,2.243,169,2.243,174,1.021,181,0.583,182,1.456,183,1.456,184,0.68,185,2.108,186,0.899,187,0.717,188,1.456,189,0.899,190,1.682,191,2.894,192,0.899,193,0.68,194,0.717,195,0.554,196,0.899,197,0.8,198,0.899,199,0.68,200,0.899,201,0.68,202,0.8,203,0.899,204,0.717,205,0.899,206,0.717,207,0.899,208,0.717,209,0.554,210,2.808,211,0.757,212,0.68,213,0.899,214,0.68,215,0.847,216,0.899,217,0.008,218,0.008,291,1.161,300,2.082,358,1.021,461,0.899,477,2.835,550,4.256,551,3.945,552,4.256,553,1.415,554,3.243,555,2.574,556,3.782,557,3.782,558,3.782,559,4.776,560,4.096,561,3.782,562,4.348,563,3.32,564,3.728,565,2.081,566,3.647,567,3.647,568,2.46,569,2.46,570,2.46,571,4.096,572,1.59,573,2.395,574,2.771,575,2.888,576,2.569,577,2.574,578,1.854,579,1.854,580,1.854,581,1.854,582,2.395,583,4.015,584,1.296,585,4.02,586,2.081,587,2.292,588,1.854,589,3.243,590,3.732,591,1.59,592,1.854,593,2.292,594,3.002,595,1.854,596,1.854,597,1.854,598,1.854,599,1.854,600,1.854,601,1.854,602,1.415,603,1.854,604,1.415,605,1.854,606,1.415,607,1.854,608,1.854,609,1.854,610,1.182,611,3.573,612,1.285,613,1.182,614,1.095,615,1.182,616,1.182,617,1.415,618,1.182,619,3.002,620,2.574,621,1.285,622,1.854,623,1.854,624,1.854,625,1.854,626,1.285,627,1.854,628,1.854,629,1.854,630,1.854,631,1.854,632,1.854,633,1.854,634,4.348,635,3.002,636,1.854,637,1.415,638,1.854,639,1.854,640,1.854,641,1.854,642,1.854,643,1.854,644,1.854,645,1.59,646,1.854,647,1.854,648,1.854,649,1.59,650,1.854,651,1.854,652,3.002,653,2.292,654,1.654,655,3.903,656,1.913,657,1.913,658,1.854,659,2.574,660,3.045,661,3.002,662,3.002,663,2.292,664,2.081,665,2.108,666,2.292,667,3.002,668,2.574,669,2.574,670,3.045,671,1.654,672,1.654,673,1.654,674,1.021,675,1.59,676,1.415,677,1.415,678,2.771,679,2.574,680,1.415,681,2.569,682,1.285,683,1.182,684,3.243,685,1.415,686,1.854,687,2.888,688,2.888,689,2.888,690,2.235,691,1.095,692,1.773,693,1.415,694,1.095,695,1.372,696,1.654,697,1.59,698,1.59,699,1.59,700,1.854,701,1.59,702,1.854,703,1.415,704,1.285,705,1.285]],["title/interfaces/BandFormData.html",[573,2.004,706,0.58]],["body/interfaces/BandFormData.html",[3,0.246,4,0.215,9,0.215,19,0.562,20,0.936,24,1.88,36,0.02,37,1.194,38,0.728,39,1.236,48,1.236,51,0.543,61,0.336,106,0.968,195,1.537,209,1.537,217,0.016,218,0.016,291,1.989,535,3.565,566,3.925,567,3.925,573,3.428,582,3.832,584,2.219,590,3.565,614,3.037,706,0.992,707,1.791,708,3.925,709,4.823,710,2.283,711,4.267,712,4.408,713,4.408]],["title/interfaces/BandHQ.html",[706,0.58,711,2.319]],["body/interfaces/BandHQ.html",[3,0.253,4,0.22,9,0.22,19,0.578,20,0.952,36,0.019,38,0.822,39,1.395,48,1.261,61,0.285,217,0.016,218,0.016,568,3.208,569,3.208,570,3.208,571,6.02,665,3.284,706,0.842,707,1.84,711,4.033,714,4.531]],["title/components/BandInfoComponent.html",[0,0.723,193,1.335]],["body/components/BandInfoComponent.html",[0,0.569,1,0.488,2,0.993,3,0.313,4,0.053,5,0.611,6,0.611,7,0.611,8,0.611,9,0.053,11,0.544,12,2.384,13,2.423,15,0.993,17,0.993,19,0.138,20,0.327,21,2.52,24,1.286,25,0.618,27,2.013,28,0.65,30,2.323,31,1.826,32,2.602,33,1.549,35,0.814,36,0.02,37,0.976,38,0.605,39,0.894,41,1.195,42,2.064,44,1.272,45,1.209,47,1.121,48,0.9,51,0.465,52,0.179,54,0.874,55,0.576,56,0.462,61,0.068,62,0.158,69,1.568,72,3.296,80,1.841,85,0.515,87,1.121,94,3.317,95,1.877,97,1.051,106,0.409,109,0.745,111,3.216,112,3.317,113,2.665,114,0.65,115,1.121,116,0.65,117,0.65,118,2.483,119,2.568,120,0.962,121,0.874,124,3.148,125,1.659,126,1.659,128,1.197,131,1.197,137,3.209,138,3.946,140,2.87,141,3.509,142,2.897,143,3.158,144,3.438,146,2.847,150,2.621,151,1.877,152,0.694,156,1.081,159,1.385,160,3.012,161,0.874,167,1.758,168,2.323,169,2.323,170,0.874,171,1.826,173,2.188,174,1.877,175,1.987,178,0.874,181,0.396,182,1.054,183,1.054,184,0.462,185,1.652,186,0.611,187,0.488,188,1.054,189,0.611,190,0.841,191,2.799,192,0.611,193,1.25,194,0.841,195,1.346,196,0.611,197,0.544,198,0.611,199,0.462,200,0.611,201,0.462,202,0.544,203,0.611,204,0.488,205,0.611,206,0.488,207,0.611,208,0.488,209,1.545,210,0.611,211,0.515,212,0.462,213,0.611,214,0.462,215,0.576,216,0.611,217,0.006,218,0.006,259,0.611,291,0.841,294,0.993,303,0.745,312,0.874,358,1.197,363,1.826,364,2.935,366,2.921,392,0.874,477,2.695,535,2.363,550,3.721,551,3.506,552,0.803,568,1.557,569,1.557,570,1.557,573,1.197,575,2.188,576,2.013,582,2.481,584,0.938,590,2.363,614,0.745,615,0.803,616,0.803,617,0.962,621,3.122,653,1.659,656,2.172,657,2.172,659,1.863,670,3.033,671,1.197,672,0.694,673,0.694,674,1.877,676,1.659,677,2.188,678,0.803,681,2.013,683,0.803,691,2.271,692,1.693,694,2.941,695,1.756,696,1.578,703,0.962,704,1.987,705,0.874,709,0.874,710,1.25,715,4.048,716,1.081,717,1.826,718,2.188,719,2.865,720,2.173,721,2.865,722,2.865,723,2.865,724,4.701,725,3.407,726,2.173,727,2.602,728,2.173,729,3.407,730,1.26,731,3.407,732,4.503,733,2.457,734,2.013,735,2.173,736,2.173,737,1.26,738,2.173,739,1.26,740,1.26,741,1.26,742,1.26,743,2.173,744,1.26,745,2.865,746,1.26,747,1.26,748,1.26,749,1.26,750,1.26,751,1.26,752,1.26,753,1.081,754,2.457,755,0.874,756,0.611,757,0.745,758,0.803,759,0.962,760,0.874,761,1.081,762,1.081,763,1.26,764,1.26,765,1.26,766,1.26,767,1.081,768,1.26,769,1.26,770,2.173,771,4.915,772,1.26,773,1.26,774,1.26,775,1.26,776,1.081,777,1.081,778,2.921,779,1.863,780,1.659,781,1.863,782,1.863,783,1.863,784,2.173,785,1.863,786,1.863,787,1.081,788,1.26,789,1.26,790,1.26,791,1.26,792,2.173,793,1.26,794,0.962,795,1.197,796,1.26,797,1.26,798,2.173,799,2.173,800,1.863,801,2.173,802,2.173,803,2.173,804,2.173,805,4.203,806,2.173,807,2.173,808,2.173,809,2.173,810,2.173,811,2.173,812,2.173,813,2.173,814,2.173,815,2.173,816,1.863,817,2.173,818,1.385,819,2.173,820,1.121,821,2.173,822,1.863,823,1.197,824,2.173,825,1.659,826,2.173,827,1.507,828,2.173,829,1.507,830,2.173,831,2.173,832,1.385,833,2.173,834,2.173,835,2.173,836,1.987,837,2.363,838,4.08,839,1.26,840,1.081,841,0.803,842,1.26,843,2.173,844,3.296,845,0.874,846,0.874,847,1.863,848,2.173,849,1.863,850,1.26,851,1.26,852,2.173,853,1.081,854,1.081,855,1.507,856,2.173,857,1.26,858,1.26,859,1.26,860,1.081,861,1.26,862,1.863,863,1.26,864,0.874,865,0.874,866,0.962,867,0.962,868,1.26,869,1.26,870,1.26,871,1.26,872,1.26,873,0.962,874,2.173,875,0.803,876,1.081,877,1.081,878,0.962,879,1.26,880,1.26,881,0.962,882,1.081,883,0.962,884,1.081,885,1.081,886,1.081,887,1.081,888,1.26,889,3.407,890,1.26,891,1.26,892,1.26]],["title/interfaces/BandMembersSurvey.html",[706,0.58,893,2.004]],["body/interfaces/BandMembersSurvey.html",[3,0.208,4,0.182,9,0.182,19,0.476,20,0.844,24,1.178,36,0.02,38,0.86,39,1.467,48,1.293,51,0.38,61,0.335,106,0.821,195,1.303,209,1.303,217,0.015,218,0.015,291,2.402,568,2.997,569,2.997,570,2.997,584,1.881,665,3.369,706,0.99,707,1.518,710,2.06,795,2.401,820,3.384,893,3.093,894,2.249,895,3.023,896,3.875,897,4.547,898,4.547,899,3.875,900,3.875,901,3.875,902,3.875,903,2.249,904,3.328,905,3.328,906,2.778]],["title/components/BandMembersSurveyComponent.html",[0,0.723,194,1.407]],["body/components/BandMembersSurveyComponent.html",[0,0.54,1,0.455,2,0.936,3,0.056,4,0.049,5,0.571,6,0.571,7,0.571,8,0.571,9,0.049,11,0.508,12,2.333,13,2.366,15,0.936,17,0.936,19,0.129,20,0.308,21,1.404,24,0.554,25,0.582,27,1.921,28,0.612,33,1.693,35,0.773,36,0.02,37,0.939,38,0.539,39,0.732,41,1.149,42,2.068,44,0.9,45,0.855,48,0.549,51,0.421,52,0.167,55,0.538,56,0.432,61,0.064,62,0.147,69,1.283,80,2.563,82,1.564,85,0.481,86,1.42,87,1.403,94,2.537,95,2.03,98,1.564,106,0.946,109,1.921,111,2.945,112,2.945,114,1.901,115,2.591,116,1.678,117,1.678,118,1.21,119,2.243,122,2.389,124,3.2,128,0.648,131,2.394,140,2.073,141,3.498,142,3,143,2.537,146,2.537,150,2.66,151,1.791,152,1.128,159,2.578,160,2.758,167,2.086,168,2.491,169,2.491,171,1.306,174,2.66,175,0.816,178,0.816,181,0.37,182,0.993,183,0.993,184,0.432,185,1.577,186,0.571,187,0.455,188,0.993,189,0.571,190,0.455,191,2.477,192,0.571,193,0.432,194,1.258,195,2.155,196,0.571,197,0.508,198,0.571,199,0.432,200,0.571,201,0.432,202,0.508,203,0.571,204,0.455,205,0.571,206,0.455,207,0.571,208,0.455,209,1.376,210,2.863,211,0.481,212,0.432,213,0.571,214,0.432,215,0.538,216,0.571,217,0.015,218,0.005,294,0.936,300,2.009,358,0.648,461,0.571,477,2.658,550,4.028,551,3.733,563,2.483,565,1.42,568,1.986,569,1.986,570,1.986,572,1.009,574,2.073,575,2.076,576,1.921,583,2.555,584,0.884,585,2.349,586,2.255,587,1.564,593,4.082,602,0.899,604,0.899,606,0.899,610,0.75,611,3.408,612,0.816,613,0.75,615,0.75,616,0.75,617,0.899,618,0.75,637,0.899,649,2.332,653,1.564,654,1.128,656,1.306,657,1.306,660,2.935,663,3.088,664,3.193,665,2.233,666,3.088,670,3.311,671,2.03,672,1.498,673,1.498,674,1.128,675,1.756,680,0.899,681,2.568,682,0.816,683,0.75,684,3.16,687,2.814,688,2.814,689,2.076,690,1.607,691,0.696,692,2.177,693,3.088,694,1.21,695,1.243,696,0.648,703,2.076,704,3.348,710,1.193,717,1.733,734,2.568,756,0.993,757,0.696,758,0.75,759,0.899,760,4.382,780,0.899,794,0.899,795,1.791,800,1.756,816,1.756,818,2.073,820,2.243,823,0.648,827,1.42,829,1.886,832,1.306,836,4.095,837,1.886,841,1.306,845,1.42,846,1.42,855,0.816,862,1.009,864,1.886,865,1.42,866,0.899,873,0.899,875,0.75,878,1.564,881,0.899,886,1.009,893,1.128,894,1.057,896,2.177,897,2.555,898,2.555,899,2.177,900,2.177,901,2.177,902,2.177,903,2.376,906,1.306,907,1.009,908,2.719,909,2.049,910,3.252,911,2.719,912,2.719,913,3.252,914,3.252,915,2.049,916,2.049,917,1.177,918,1.177,919,1.177,920,1.177,921,1.177,922,2.049,923,1.177,924,2.049,925,1.177,926,2.049,927,1.177,928,1.177,929,1.177,930,1.756,931,2.049,932,1.177,933,1.756,934,1.756,935,1.756,936,1.756,937,1.756,938,1.756,939,1.756,940,1.756,941,1.756,942,1.756,943,1.756,944,1.756,945,1.177,946,1.177,947,1.177,948,1.177,949,1.177,950,1.177,951,1.177,952,1.177,953,1.009,954,1.177,955,1.009,956,1.177,957,1.009,958,1.177,959,1.009,960,1.177,961,1.009,962,1.177,963,1.009,964,1.177,965,1.791,966,2.255,967,1.177,968,1.177,969,1.177,970,1.177,971,1.177,972,1.177,973,1.177,974,1.177,975,1.177,976,1.177,977,1.177,978,1.177,979,1.177,980,1.177,981,1.177,982,2.719,983,1.177,984,1.177,985,1.177,986,1.177,987,2.049,988,1.177,989,1.177,990,2.049,991,1.498,992,2.049,993,1.177,994,1.177,995,1.177,996,1.177,997,1.177,998,1.177,999,3.201,1000,2.719,1001,1.177,1002,1.177,1003,2.719,1004,1.177,1005,1.177,1006,1.177,1007,0.899,1008,2.049,1009,2.788,1010,2.788,1011,2.255,1012,2.049,1013,2.049,1014,2.049,1015,2.049,1016,1.564,1017,1.564,1018,3.948,1019,2.049,1020,1.564,1021,1.177,1022,2.049,1023,2.049,1024,2.049,1025,2.049,1026,2.719,1027,2.049,1028,1.756,1029,2.049,1030,1.756,1031,2.814,1032,1.009,1033,3.252,1034,1.177,1035,2.719,1036,2.719,1037,1.177,1038,1.177,1039,1.177,1040,1.177,1041,1.177,1042,1.177,1043,1.177,1044,1.177,1045,1.177,1046,2.049,1047,1.177,1048,2.049,1049,1.009,1050,1.177,1051,1.177,1052,1.177,1053,1.177,1054,1.177,1055,1.009,1056,1.177,1057,1.177,1058,1.177,1059,1.177,1060,1.177,1061,1.177,1062,1.177,1063,1.177,1064,1.177,1065,1.177,1066,1.177,1067,2.049,1068,1.009]],["title/interfaces/BandUserMatch.html",[706,0.58,965,2.004]],["body/interfaces/BandUserMatch.html",[3,0.259,4,0.226,9,0.226,19,0.592,20,0.965,36,0.019,38,0.801,48,1.266,61,0.292,106,1.019,217,0.017,218,0.017,584,3.054,706,0.863,707,1.885,894,2.792,906,4.51,965,3.536,991,3.898,1069,4.64]],["title/interfaces/CanDeactivateComponent.html",[706,0.58,1070,2.522]],["body/interfaces/CanDeactivateComponent.html",[0,1,3,0.241,4,0.21,9,0.21,14,2.442,19,0.55,20,0.924,36,0.02,38,0.589,51,0.579,52,0.714,61,0.332,62,0.63,97,1.848,217,0.016,218,0.016,259,2.442,286,4.693,288,5.065,291,2.378,292,2.378,293,2.598,294,2.301,300,1.948,316,3.422,329,3.21,343,5.27,464,3.21,465,3.492,472,5.57,706,0.803,707,1.754,1070,4.6,1071,3.845,1072,4.318,1073,4.318,1074,4.318,1075,5.27]],["title/guards/CanDeactivateGuard.html",[281,2.778,464,2.319]],["body/guards/CanDeactivateGuard.html",[0,1.184,3,0.229,4,0.2,9,0.2,14,2.323,19,0.524,25,1.694,33,1.295,35,1.362,36,0.02,37,1.112,38,0.561,39,0.952,41,1.362,51,0.566,52,0.679,61,0.322,62,0.599,97,1.758,217,0.015,218,0.015,259,2.323,282,3.658,286,5.183,288,5.511,291,2.51,292,2.306,293,2.472,294,2.189,300,1.853,316,3.502,329,3.054,464,3.799,465,4.133,472,5.435,654,2.639,706,0.764,1070,4.707,1071,3.658,1072,5.563,1073,5.563,1074,5.563,1075,5.11,1076,4.791,1077,4.791]],["title/directives/ChangeBorderOnClickDirective.html",[184,1.335,212,1.335]],["body/directives/ChangeBorderOnClickDirective.html",[3,0.198,4,0.173,9,0.173,11,1.786,12,2.217,19,0.452,20,0.816,21,2.614,25,1.543,28,1.237,33,1.954,35,1.177,36,0.02,37,0.961,38,0.709,39,0.822,41,1.722,42,2.343,44,2.004,45,1.905,48,0.916,51,0.361,52,0.586,61,0.223,62,0.517,63,1.892,184,1.992,211,1.69,212,1.992,217,0.014,218,0.014,690,3.579,695,3.329,1078,5.562,1079,3.549,1080,5.428,1081,6.057,1082,6.43,1083,6.43,1084,6.43,1085,4.655,1086,6.057,1087,6.057,1088,4.655,1089,5.428,1090,5.428,1091,5.428,1092,3.549,1093,5.874,1094,4.139,1095,4.139,1096,4.139,1097,5.428,1098,5.428,1099,5.428,1100,4.2,1101,5.428,1102,5.428,1103,5.428,1104,4.655,1105,4.139,1106,3.549,1107,6.057,1108,4.139,1109,5.428]],["title/interfaces/ChangePassword.html",[706,0.58,1110,2.522]],["body/interfaces/ChangePassword.html",[3,0.26,4,0.227,9,0.227,19,0.594,20,0.968,24,1.915,36,0.019,38,0.802,48,1.267,61,0.294,217,0.017,218,0.017,706,0.867,707,1.893,1110,4.462,1111,4.661,1112,7.086,1113,7.086]],["title/components/ConfirmationDialogComponent.html",[0,0.723,56,1.335]],["body/components/ConfirmationDialogComponent.html",[0,1.023,1,1.176,2,2.006,3,0.145,4,0.127,5,1.475,6,1.475,7,1.475,8,1.475,9,0.127,11,1.312,12,2.91,13,3.031,15,2.006,17,2.006,19,0.332,20,0.66,25,1.248,28,1.539,31,3.594,33,1.81,35,0.864,36,0.02,37,1.309,38,0.752,39,0.604,41,1.248,42,2.181,48,1.174,51,0.383,52,0.431,55,1.39,56,2.069,57,3.811,59,4.335,61,0.237,62,0.549,79,4.566,85,1.242,87,2.909,95,2.418,106,0.826,114,1.569,115,2.265,116,1.569,117,1.569,118,1.797,119,2.909,124,2.265,141,2.657,142,2.909,152,2.418,159,1.938,160,1.569,161,2.109,163,2.608,167,1.569,168,1.569,169,1.569,181,0.956,182,2.128,183,2.128,184,1.116,185,2.734,186,1.475,187,1.176,188,2.128,189,1.475,190,1.176,191,2.103,192,1.475,193,1.116,194,1.176,195,0.909,196,1.475,197,2.838,198,1.475,199,1.116,200,1.475,201,1.116,202,1.312,203,1.475,204,1.176,205,1.475,206,1.176,207,1.475,208,1.176,209,0.909,210,1.475,211,1.242,212,1.116,213,1.475,214,1.116,215,1.39,216,1.475,217,0.011,218,0.011,477,2.777,574,3.811,610,1.938,613,1.938,618,2.798,654,1.675,671,2.837,672,1.675,673,1.675,674,3.538,695,2.006,696,1.675,875,2.798,1100,2.109,1114,5.193,1115,2.322,1116,4.416,1117,3.763,1118,5.638,1119,5.638,1120,4.904,1121,4.835,1122,4.835,1123,3.041,1124,4.389,1125,3.041,1126,3.041,1127,3.041,1128,3.041,1129,3.041,1130,3.041,1131,3.041,1132,2.608,1133,2.608,1134,2.608,1135,2.608,1136,2.608,1137,2.608,1138,2.608,1139,2.608,1140,2.608,1141,2.608,1142,2.608,1143,4.389]],["title/classes/ConfirmationDialogModel.html",[57,2.319,62,0.455]],["body/classes/ConfirmationDialogModel.html",[0,1.081,3,0.198,4,0.173,9,0.173,12,1.696,13,1.792,15,1.898,17,1.898,19,0.454,20,0.818,28,1.814,31,2.647,33,1.806,35,1.18,36,0.02,37,0.964,38,0.782,39,0.825,42,2.105,44,1.8,45,1.711,48,1.273,51,0.475,52,0.588,55,1.898,56,1.524,57,3.867,59,4.371,61,0.294,62,0.68,79,3.171,87,2.143,197,2.619,217,0.014,218,0.014,477,3.025,574,3.468,610,2.647,613,2.647,618,2.647,654,2.997,674,3.682,1114,5.236,1115,3.171,1116,3.561,1117,3.561,1118,5.88,1119,5.88,1120,5.236,1121,3.561,1122,3.561,1132,3.561,1133,3.561,1134,3.561,1135,3.561,1136,3.561,1137,3.561,1138,3.561,1139,3.561,1140,3.561,1141,3.561,1144,3.171,1145,4.153,1146,4.153,1147,4.153,1148,4.153,1149,4.153,1150,4.153]],["title/classes/CustomValidators.html",[62,0.455,1151,2.522]],["body/classes/CustomValidators.html",[3,0.172,4,0.206,9,0.15,19,0.394,24,0.973,25,1.405,30,3.286,33,1.642,35,1.605,36,0.02,37,1.311,38,0.661,39,1.121,41,1.727,45,1.132,48,1.11,49,4.759,51,0.556,54,2.497,61,0.194,62,0.45,69,2.218,97,2.071,217,0.013,218,0.013,300,2.752,303,2.127,316,2.551,329,2.295,330,3.088,333,3.088,363,2.295,392,2.497,461,1.746,516,2.295,585,2.295,611,4.06,1144,2.749,1151,3.428,1152,5.461,1153,3.088,1154,7.173,1155,4.944,1156,4.944,1157,6.077,1158,4.944,1159,4.944,1160,5.646,1161,3.601,1162,3.601,1163,6.739,1164,4.944,1165,4.311,1166,3.601,1167,3.601,1168,4.944,1169,3.601,1170,5.646,1171,6.077,1172,3.601,1173,5.646,1174,4.944,1175,3.601,1176,3.601,1177,3.601,1178,3.601,1179,3.601,1180,3.601,1181,3.601,1182,3.601,1183,3.601,1184,4.944,1185,3.601,1186,3.601,1187,4.944,1188,3.601,1189,3.601,1190,3.601,1191,4.944,1192,3.601,1193,4.944,1194,3.601,1195,4.944,1196,3.601,1197,3.601,1198,3.601,1199,3.601,1200,4.944,1201,3.601]],["title/interfaces/Invitation.html",[706,0.58,999,2.319]],["body/interfaces/Invitation.html",[3,0.26,4,0.227,9,0.227,19,0.594,20,0.968,36,0.019,38,0.802,48,1.267,61,0.294,217,0.017,218,0.017,706,0.867,707,1.893,999,4.102,1202,4.661,1203,7.086,1204,7.086,1205,7.086]],["title/components/LoginComponent.html",[0,0.723,199,1.335]],["body/components/LoginComponent.html",[0,0.562,1,0.48,2,0.979,3,0.059,4,0.052,5,2.165,6,0.601,7,0.601,8,0.601,9,0.052,11,0.535,12,2.372,13,2.41,15,0.979,17,0.979,19,0.136,20,0.322,21,2.711,24,1.728,25,0.609,27,1.991,28,0.371,29,0.947,30,2.149,33,1.62,35,0.352,36,0.02,37,0.782,38,0.553,39,0.246,41,0.958,42,1.827,44,1.562,45,1.485,47,2.304,48,0.703,49,1.486,51,0.363,52,0.176,54,0.86,56,0.455,61,0.067,62,0.155,63,0.567,69,0.986,73,1.063,80,1.827,83,3.571,85,1.554,92,1.837,94,3.141,95,0.683,97,0.786,104,1.837,105,2.889,106,0.717,109,2.638,111,3.2,112,3.2,113,2.888,114,1.964,115,2.649,116,1.964,117,1.739,118,2.461,119,2.55,121,2.639,122,0.733,123,1.962,124,3.514,128,2.722,141,3.499,142,2.304,143,3.141,146,1.18,150,2.722,151,2.601,152,3.302,153,1.837,154,3.263,159,0.79,160,2.304,167,1.739,168,2.149,169,2.149,170,0.86,171,2.426,173,0.947,174,2.601,177,1.063,181,0.39,182,1.039,183,1.039,184,0.455,185,1.634,186,0.601,187,0.48,188,1.039,189,0.601,190,0.48,191,1.155,192,0.601,193,0.455,194,0.48,195,0.371,196,0.601,197,0.535,198,0.601,199,1.236,200,0.601,201,0.455,202,0.535,203,0.601,204,0.48,205,0.601,206,0.48,207,0.601,208,0.48,209,0.371,210,2.907,211,0.506,212,0.455,213,0.601,214,0.455,215,0.567,216,0.601,217,0.006,218,0.006,262,0.733,291,0.829,294,0.979,298,0.947,300,0.829,303,0.733,312,0.86,347,1.837,358,1.856,363,2.426,364,2.906,370,1.837,375,1.837,392,0.86,398,4.848,412,1.837,413,4.546,461,0.601,471,3.263,477,2.448,498,4.263,522,1.063,523,1.063,524,1.063,525,1.063,526,1.063,527,1.063,528,1.063,529,1.063,565,1.486,583,2.639,585,2.426,586,2.337,611,1.804,612,1.486,626,1.486,655,2.573,660,2.847,664,0.86,670,2.426,671,3.141,672,1.856,673,2.828,677,2.906,679,3.263,681,3.369,682,2.639,683,2.655,685,0.947,690,2.248,691,1.266,692,2.79,694,1.266,695,2.041,696,2.096,709,0.86,717,1.804,718,2.161,724,3.571,727,2.573,753,1.063,762,3.263,767,1.837,776,2.426,777,1.837,837,0.86,840,1.063,841,1.804,845,0.86,846,1.486,853,1.837,854,1.063,855,1.962,860,1.063,864,1.486,865,0.86,866,1.636,867,2.161,873,1.636,875,2.847,882,1.063,883,2.161,887,1.837,1011,1.486,1020,0.947,1028,1.837,1032,1.063,1049,1.063,1055,1.063,1100,0.86,1120,4.263,1151,0.86,1165,0.947,1206,1.063,1207,2.83,1208,2.143,1209,2.83,1210,2.83,1211,2.83,1212,2.83,1213,2.83,1214,2.83,1215,3.806,1216,3.806,1217,3.37,1218,2.143,1219,1.24,1220,1.24,1221,1.24,1222,1.24,1223,1.24,1224,2.83,1225,2.143,1226,1.24,1227,1.24,1228,2.143,1229,2.143,1230,2.143,1231,2.143,1232,2.143,1233,2.143,1234,1.24,1235,2.143,1236,1.24,1237,1.24,1238,1.24,1239,2.143,1240,2.143,1241,1.24,1242,1.24,1243,1.24,1244,1.24,1245,1.24,1246,1.24,1247,1.24,1248,1.24,1249,1.063,1250,1.24,1251,1.24,1252,1.24,1253,1.24,1254,2.83,1255,2.83,1256,1.24,1257,2.83,1258,1.24,1259,1.24,1260,1.24,1261,1.24,1262,2.83,1263,1.24,1264,2.143,1265,2.143,1266,1.24,1267,1.063,1268,1.24,1269,2.143,1270,2.143,1271,1.24,1272,1.24,1273,1.24,1274,1.24,1275,2.143,1276,2.143,1277,1.24,1278,1.24,1279,2.83,1280,1.24,1281,1.24,1282,1.24,1283,1.24,1284,1.24,1285,2.143,1286,1.24,1287,1.24,1288,1.24,1289,2.143,1290,2.143,1291,2.143,1292,1.24,1293,2.143,1294,2.143,1295,2.143,1296,2.143,1297,2.143,1298,2.143,1299,2.143,1300,4.048,1301,2.573,1302,2.143,1303,2.143,1304,2.143,1305,2.143,1306,2.143,1307,2.143,1308,2.143,1309,1.24,1310,2.143,1311,1.636,1312,1.837,1313,2.83,1314,1.24,1315,2.143,1316,1.24,1317,3.806,1318,1.837,1319,3.806,1320,2.143,1321,4.466,1322,2.83,1323,2.83,1324,2.83,1325,1.24,1326,1.24,1327,1.24,1328,2.143,1329,1.24,1330,2.143,1331,2.143,1332,1.24,1333,1.24,1334,1.24,1335,1.24,1336,1.24,1337,1.24,1338,1.24,1339,1.063,1340,1.063,1341,1.24,1342,2.143,1343,1.24,1344,1.24,1345,4.165,1346,4.165,1347,2.143,1348,1.24,1349,1.24,1350,2.143,1351,1.24,1352,1.24,1353,1.063,1354,2.143,1355,2.83,1356,1.24,1357,3.806,1358,2.143,1359,1.24,1360,1.24,1361,1.24,1362,1.24,1363,1.24,1364,1.24,1365,1.24,1366,2.83,1367,1.24,1368,1.24,1369,1.24,1370,1.24,1371,1.24,1372,1.24]],["title/components/MainPageComponent.html",[0,0.723,201,1.335]],["body/components/MainPageComponent.html",[0,1.218,1,1.643,2,2.522,3,0.203,4,0.177,5,2.059,6,2.059,7,2.059,8,2.059,9,0.177,11,1.833,12,3.045,13,3.192,15,2.522,17,2.522,19,0.464,25,1.569,27,3.836,28,1.833,33,1.492,36,0.019,37,1.424,41,1.207,42,2.135,51,0.371,52,0.602,56,1.558,61,0.229,62,0.531,85,1.734,106,1.039,181,1.335,182,2.676,183,2.676,184,1.558,185,3.149,186,2.059,187,1.643,188,2.676,189,2.059,190,1.643,191,2.504,192,2.059,193,1.558,194,1.643,195,1.269,196,2.059,197,1.833,198,2.059,199,1.558,200,2.059,201,2.382,202,3.134,203,2.059,204,1.643,205,2.059,206,1.643,207,2.059,208,1.643,209,1.269,210,2.059,211,1.734,212,1.558,213,2.059,214,1.558,215,1.94,216,2.059,217,0.014,218,0.014,265,4.397,294,2.522,414,4.139,717,3.909,1373,4.252,1374,3.641,1375,6.133,1376,5.52,1377,4.246,1378,4.246]],["title/modules/MainPageModule.html",[219,1.034,1379,2.522]],["body/modules/MainPageModule.html",[3,0.239,4,0.209,9,0.209,36,0.02,51,0.601,52,0.709,61,0.27,62,0.626,84,2.287,181,1.574,201,2.64,202,2.643,217,0.016,218,0.016,219,1.423,221,1.836,222,2.287,223,3.413,224,2.582,225,2.427,226,2.044,234,3.159,235,2.582,237,2.643,238,2.643,242,2.957,265,3.903,324,2.427,414,3.19,457,3.618,1373,3.471,1379,5.1,1380,4.292,1381,4.292,1382,4.292,1383,4.586,1384,5.005,1385,4.292]],["title/modules/MainPageRoutingModule.html",[219,1.034,1383,2.319]],["body/modules/MainPageRoutingModule.html",[0,1.056,3,0.254,4,0.222,9,0.222,36,0.02,51,0.593,52,0.754,61,0.287,62,0.665,69,1.852,201,2.331,202,2.295,217,0.016,218,0.016,221,1.951,226,2.172,237,2.295,238,2.741,256,3.688,257,4.405,258,3.741,259,2.579,262,3.142,265,4.049,414,3.39,473,4.061,1373,3.688,1383,4.049,1385,4.56,1386,4.061]],["title/modules/MaterialModule.html",[219,1.034,455,1.877]],["body/modules/MaterialModule.html",[3,0.202,4,0.176,9,0.176,36,0.02,51,0.645,52,0.599,55,1.93,56,2.528,59,2.693,60,3.622,84,1.93,181,1.328,197,1.823,212,2.681,214,2.681,217,0.014,218,0.014,219,1.564,221,1.55,222,1.93,223,3.156,224,2.18,225,2.048,226,2.498,234,2.838,235,2.18,237,1.823,238,2.374,251,3.622,324,2.048,455,3.771,457,3.25,660,2.693,695,1.93,1078,3.226,1249,3.622,1387,3.622,1388,3.622,1389,3.622,1390,4.224,1391,5.501,1392,5.501,1393,4.224,1394,5.501,1395,4.224,1396,4.224,1397,3.622,1398,4.224,1399,4.224,1400,4.224,1401,4.224,1402,5.501,1403,4.224,1404,4.224,1405,5.501,1406,4.224,1407,4.224,1408,4.224,1409,4.224,1410,4.224,1411,4.224,1412,4.224,1413,4.224,1414,4.224,1415,4.224,1416,3.226,1417,4.224,1418,4.224,1419,4.224,1420,4.224,1421,4.224,1422,4.224,1423,4.224,1424,4.224,1425,4.224,1426,4.224,1427,4.224]],["title/interfaces/MusicalBand.html",[582,2.004,706,0.58]],["body/interfaces/MusicalBand.html",[3,0.228,4,0.199,9,0.199,19,0.522,20,0.894,24,1.29,36,0.02,37,1.574,38,0.844,39,1.347,48,1.256,51,0.519,61,0.321,106,0.899,195,2.026,209,1.427,217,0.015,218,0.015,291,2.505,535,4.491,566,5.176,567,5.176,573,2.629,582,3.568,584,2.926,590,4.701,614,2.82,706,0.948,707,1.662,708,3.644,709,3.309,710,2.487,711,4.446,712,5.813,713,4.092]],["title/modules/MusicalBandsModule.html",[219,1.034,1428,2.522]],["body/modules/MusicalBandsModule.html",[3,0.215,4,0.188,9,0.188,36,0.02,51,0.635,52,0.637,61,0.243,62,0.562,84,2.054,181,1.413,190,2.709,191,2.572,193,2.57,194,2.709,195,1.711,217,0.015,218,0.015,219,1.277,221,1.649,222,2.054,223,3.25,224,2.319,225,2.179,226,1.835,234,2.954,235,2.319,237,2.471,238,2.471,242,2.655,277,3.853,324,2.179,455,3.613,457,3.382,460,4.371,461,2.179,462,3.116,550,2.865,552,2.865,678,2.865,715,3.116,755,3.116,760,3.116,761,3.853,1428,5.187,1429,3.853,1430,3.853,1431,3.853,1432,4.138,1433,4.494,1434,3.431,1435,4.494,1436,4.494,1437,4.494]],["title/injectables/MusicalBandsService.html",[292,1.407,576,2.149]],["body/injectables/MusicalBandsService.html",[3,0.161,4,0.141,9,0.141,14,1.634,19,0.368,20,0.71,24,1.956,25,1.342,28,1.007,33,1.855,35,1.919,36,0.02,37,1.568,38,0.803,39,1.341,41,1.881,44,1.115,45,1.059,48,1.262,51,0.562,52,0.477,61,0.182,62,0.421,63,1.54,106,0.634,191,2.539,195,1.007,217,0.012,218,0.012,248,1.991,292,1.826,293,1.738,300,2.56,316,3.541,344,3.009,402,3.779,474,2.148,477,3.049,489,2.336,490,4.095,516,2.148,576,2.789,582,3.645,584,2.352,614,1.991,615,4.432,616,4.432,836,2.336,894,2.436,903,1.738,965,3.645,966,3.779,1020,3.605,1438,2.889,1439,4.048,1440,4.721,1441,4.721,1442,4.721,1443,4.721,1444,4.721,1445,4.721,1446,4.721,1447,4.721,1448,3.369,1449,4.721,1450,3.369,1451,4.721,1452,3.369,1453,4.721,1454,3.369,1455,4.721,1456,3.369,1457,4.721,1458,3.369,1459,4.721,1460,3.369,1461,4.721,1462,3.369,1463,3.369,1464,3.369,1465,3.369,1466,3.369,1467,3.369,1468,3.369]],["title/modules/ProfilesModule.html",[219,1.034,1432,2.149]],["body/modules/ProfilesModule.html",[3,0.229,4,0.2,9,0.2,36,0.02,51,0.609,52,0.679,61,0.259,62,0.599,84,2.189,106,0.902,181,1.506,206,2.894,217,0.015,218,0.015,219,1.362,221,1.758,222,2.189,223,3.347,224,2.472,225,2.323,226,2.649,234,3.075,235,2.472,237,2.572,238,2.572,242,2.831,271,3.658,324,2.323,455,3.673,457,3.521,462,3.322,1432,4.4,1469,4.108,1470,4.108,1471,4.108,1472,4.108,1473,4.205,1474,4.791,1475,3.658,1476,4.791]],["title/interfaces/RegisterUser.html",[503,2.522,706,0.58]],["body/interfaces/RegisterUser.html",[3,0.255,4,0.222,9,0.222,19,0.583,20,0.957,24,1.903,36,0.019,38,0.824,48,1.279,61,0.288,217,0.017,218,0.017,498,5.376,503,4.41,706,0.85,707,1.856,823,3.878,1477,4.57,1478,7.04]],["title/interfaces/SurveyFormData.html",[706,0.58,795,2.004]],["body/interfaces/SurveyFormData.html",[3,0.24,4,0.21,9,0.21,19,0.549,20,0.923,24,1.866,36,0.02,38,0.718,48,1.284,51,0.439,61,0.358,106,0.946,195,1.502,209,1.502,217,0.016,218,0.016,291,1.944,568,2.297,569,2.297,570,2.297,584,2.979,665,2.977,706,1.056,707,1.75,710,2.252,795,3.381,820,2.593,893,2.768,894,2.593,895,3.485,896,2.969,897,3.485,898,3.485,899,2.969,900,2.969,901,2.969,902,2.969,903,2.593,904,3.837,905,3.837,906,3.203]],["title/interfaces/SurveyResult.html",[706,0.58,903,1.877]],["body/interfaces/SurveyResult.html",[3,0.237,4,0.207,9,0.207,19,0.542,20,0.915,24,1.339,36,0.02,38,0.771,48,1.283,51,0.432,61,0.356,106,0.933,195,1.481,209,1.481,217,0.016,218,0.016,291,1.917,568,2.264,569,2.264,570,2.264,584,2.138,665,2.951,706,1.05,707,1.726,710,2.52,795,2.729,820,2.556,893,2.729,894,2.556,895,3.436,896,2.927,897,3.436,898,3.436,899,2.927,900,2.927,901,2.927,902,2.927,903,3.14,904,5.245,905,5.245,906,4.378]],["title/interfaces/User.html",[106,0.685,706,0.58]],["body/interfaces/User.html",[3,0.246,4,0.215,9,0.215,19,0.562,20,0.936,24,1.88,36,0.02,38,0.834,39,1.236,48,1.273,51,0.449,61,0.278,106,1.26,209,2.129,217,0.016,218,0.016,706,0.82,707,1.791,710,2.552,823,3.832,991,3.832,1007,5.311,1479,4.408]],["title/interfaces/UserAddress.html",[706,0.58,1480,2.522]],["body/interfaces/UserAddress.html",[3,0.257,4,0.224,9,0.224,19,0.588,20,0.962,36,0.019,38,0.799,39,1.27,48,1.265,61,0.29,217,0.017,218,0.017,568,3.227,569,3.227,570,3.227,665,2.607,706,0.857,707,1.873,756,2.607,991,2.962,1480,4.433,1481,4.61]],["title/interfaces/UserProfile.html",[706,0.58,710,1.335]],["body/interfaces/UserProfile.html",[3,0.195,4,0.17,9,0.17,19,0.446,20,0.808,24,1.728,36,0.02,38,0.872,39,1.489,48,1.297,51,0.469,61,0.22,106,1.012,191,1.665,217,0.014,218,0.014,291,2.639,584,2.759,665,2.916,706,0.65,707,1.42,710,1.972,756,1.977,818,4.074,820,3.298,823,3.521,832,4.235,896,3.777,899,3.777,900,3.777,901,3.777,902,3.777,965,2.246,966,2.827,991,2.246,1480,4.432,1482,3.496,1483,6.392,1484,6.392,1485,5.481,1486,5.481,1487,5.481]],["title/components/UserProfileComponent.html",[0,0.723,206,1.407]],["body/components/UserProfileComponent.html",[0,0.718,1,0.671,2,1.3,3,0.291,4,0.072,5,0.841,6,0.841,7,0.841,8,0.841,9,0.072,11,0.749,12,2.604,13,2.674,15,1.3,17,1.3,19,0.19,24,1.247,25,0.808,28,0.519,31,1.813,32,3.192,33,1.13,35,0.493,36,0.02,37,1.268,38,0.333,39,0.345,41,0.808,42,1.617,44,0.574,45,0.546,48,0.48,51,0.432,52,0.246,55,0.793,56,0.637,61,0.094,62,0.217,63,0.793,69,1.823,80,1.1,85,0.708,87,1.467,94,1.991,95,1.991,97,1.044,106,1.261,111,3.466,112,3.466,113,1.972,114,1.865,115,2.38,116,1.467,117,1.467,118,2.928,119,2.7,120,1.325,121,2.899,122,1.68,123,1.972,124,3.455,125,2.172,126,1.325,128,0.956,137,2.172,138,1.325,140,1.106,141,3.246,142,2.918,143,2.883,144,1.325,146,0.956,150,2.303,151,1.991,152,1.567,160,3.29,161,1.203,167,1.865,168,2.819,169,2.819,170,1.972,171,2.665,174,2.542,175,1.972,178,1.203,181,0.546,182,1.379,183,1.379,184,0.637,185,2.027,186,0.841,187,0.671,188,1.379,189,0.841,190,1.1,191,2.137,192,0.841,193,0.637,194,0.671,195,0.519,196,0.841,197,0.749,198,0.841,199,0.637,200,0.841,201,0.637,202,0.749,203,0.841,204,0.671,205,0.841,206,1.617,207,0.841,208,1.1,209,2.209,210,0.841,211,0.708,212,0.637,213,0.841,214,0.637,215,0.793,216,0.841,217,0.007,218,0.007,332,1.972,358,0.956,395,1.488,449,1.488,477,2.024,551,1.025,552,1.106,568,1.3,569,1.3,570,1.3,573,1.567,621,3.199,626,3.788,645,2.439,654,1.567,656,1.813,657,1.813,671,2.303,672,1.567,673,1.991,674,2.303,676,2.76,678,1.106,681,2.135,689,1.325,690,1.68,691,1.025,692,2.135,694,2.726,695,1.652,696,1.567,704,1.203,705,1.203,710,1.044,754,3.099,755,1.972,756,1.379,771,2.439,778,3.584,779,2.439,780,2.172,781,2.439,782,2.439,783,1.488,785,2.439,786,2.439,787,1.488,794,2.76,818,1.813,820,1.467,822,2.439,823,2.303,825,2.172,827,1.972,829,1.972,832,1.813,837,1.203,838,5.394,841,1.813,844,2.439,845,1.972,846,2.506,847,1.488,849,1.488,855,1.203,867,1.325,875,1.106,876,1.488,877,1.488,878,1.325,881,1.325,883,2.172,884,3.956,885,1.488,991,1.567,1007,2.172,1016,2.172,1017,2.172,1031,3.192,1068,1.488,1085,2.439,1142,1.488,1311,2.172,1312,2.439,1318,1.488,1339,1.488,1340,1.488,1353,1.488,1439,3.584,1475,3.523,1488,3.523,1489,1.488,1490,3.614,1491,2.844,1492,3.584,1493,1.735,1494,1.735,1495,1.735,1496,1.735,1497,1.735,1498,1.203,1499,1.735,1500,1.735,1501,1.735,1502,1.735,1503,1.735,1504,1.735,1505,1.735,1506,1.735,1507,1.735,1508,1.735,1509,1.735,1510,1.735,1511,1.735,1512,1.735,1513,2.844,1514,2.844,1515,1.735,1516,1.735,1517,1.735,1518,1.735,1519,2.844,1520,1.735,1521,1.735,1522,1.735,1523,1.735,1524,1.735,1525,2.844,1526,2.844,1527,2.844,1528,2.439,1529,2.844,1530,2.844,1531,2.844,1532,2.844,1533,2.844,1534,2.844,1535,2.844,1536,2.844,1537,2.844,1538,2.844,1539,2.844,1540,2.844,1541,2.844,1542,2.844,1543,1.735,1544,2.844,1545,1.735,1546,5.234,1547,1.735,1548,1.735,1549,1.735,1550,1.735,1551,1.735,1552,1.735,1553,1.735,1554,1.735,1555,2.844,1556,1.735,1557,1.735,1558,1.735,1559,2.844,1560,1.735,1561,1.735,1562,1.735,1563,1.735,1564,1.735,1565,1.735,1566,1.735,1567,1.735,1568,1.735,1569,1.735,1570,2.844,1571,1.735,1572,1.735]],["title/components/UserProfileFormComponent.html",[0,0.723,208,1.407]],["body/components/UserProfileFormComponent.html",[0,0.729,1,0.686,2,1.323,3,0.085,4,0.074,5,0.86,6,0.86,7,0.86,8,0.86,9,0.074,11,0.766,12,2.618,13,2.69,15,1.323,17,1.323,19,0.194,20,0.436,21,1.584,24,0.783,25,0.823,28,0.866,33,1.818,35,0.504,36,0.02,37,1.422,38,0.546,39,0.352,41,0.823,42,1.639,44,1.214,45,1.154,48,0.715,51,0.437,52,0.251,55,0.811,56,0.651,61,0.096,62,0.222,80,2.769,85,0.724,86,2.008,87,1.893,94,0.977,97,0.651,106,1.174,109,1.048,111,1.595,112,1.595,114,1.893,115,2.408,116,1.494,117,1.494,119,1.494,122,1.711,124,2.584,131,1.595,136,2.483,140,2.7,141,2.726,142,1.893,143,2.022,146,0.977,150,2.022,151,1.595,160,1.494,167,1.494,168,1.494,169,1.494,174,0.977,181,0.558,182,1.404,183,1.404,184,0.651,185,2.054,186,0.86,187,0.686,188,1.404,189,0.86,190,0.686,191,1.498,192,0.86,193,0.651,194,0.686,195,0.53,196,0.86,197,0.766,198,0.86,199,0.651,200,0.86,201,0.651,202,0.766,203,0.86,204,0.686,205,0.86,206,0.686,207,0.86,208,1.639,209,2.222,210,2.765,211,0.724,212,0.651,213,0.86,214,0.651,215,0.811,216,0.86,217,0.008,218,0.008,300,2.411,332,2.937,461,0.86,477,2.702,553,1.354,554,3.147,555,2.483,560,4.002,563,3.234,564,3.632,565,2.008,568,2.415,569,2.415,570,2.415,574,2.7,577,1.521,583,3.954,585,4.417,586,3.821,587,2.211,591,1.521,593,2.211,602,1.354,604,1.354,606,1.354,610,1.131,611,4.033,612,1.23,613,1.131,618,1.131,620,2.483,621,2.937,626,1.23,637,1.354,654,1.595,655,3.824,656,1.846,657,1.846,660,2.975,663,2.211,665,2.429,666,2.211,668,2.483,669,2.483,670,2.339,671,1.595,672,1.595,673,1.595,674,0.977,680,1.354,681,1.711,682,1.23,683,1.131,685,1.354,687,2.211,688,2.211,690,1.711,691,1.048,692,1.048,693,1.354,694,1.048,695,1.323,696,0.977,697,1.521,698,1.521,699,1.521,701,1.521,705,1.23,710,1.346,733,3.147,734,2.503,756,1.404,757,1.048,758,1.131,759,1.354,818,3.368,820,2.726,823,1.595,825,2.211,827,2.008,829,2.545,832,1.846,841,1.131,896,2.758,899,2.758,900,2.758,901,2.758,902,2.758,930,2.483,933,2.483,934,2.483,935,2.483,936,2.483,937,2.483,938,2.483,939,2.483,940,2.483,941,2.483,942,2.483,943,2.483,944,2.483,953,1.521,955,1.521,957,1.521,959,1.521,961,1.521,963,1.521,1009,2.483,1010,3.632,1011,2.008,1016,2.211,1017,2.211,1018,4.725,1030,1.521,1031,2.211,1300,3.632,1301,2.211,1485,4.002,1486,4.002,1487,4.002,1488,5.171,1498,4.696,1528,3.632,1573,3.67,1574,3.67,1575,1.774,1576,1.774,1577,2.896,1578,1.774,1579,1.774,1580,1.774,1581,1.774,1582,2.896,1583,2.896,1584,1.774,1585,1.774,1586,1.774,1587,1.774,1588,1.774,1589,1.774,1590,1.774,1591,1.774,1592,1.774,1593,1.774,1594,1.774,1595,1.774,1596,1.774,1597,1.774,1598,1.774,1599,1.774,1600,1.774,1601,1.774,1602,1.774,1603,1.774,1604,1.774,1605,1.774,1606,1.774,1607,1.774,1608,1.774,1609,1.774,1610,1.774,1611,1.774,1612,1.774,1613,1.774,1614,1.774,1615,1.774,1616,1.774,1617,1.774,1618,1.774,1619,1.774,1620,1.774,1621,1.774,1622,1.774,1623,1.774,1624,1.774,1625,1.774,1626,1.774,1627,1.774,1628,1.774,1629,1.774,1630,1.774,1631,1.774,1632,2.896,1633,1.774,1634,1.774,1635,1.774,1636,1.774,1637,1.774,1638,4.236,1639,2.896]],["title/injectables/UserProfilesService.html",[292,1.407,734,2.149]],["body/injectables/UserProfilesService.html",[3,0.17,4,0.148,9,0.148,14,1.721,19,0.388,20,0.736,24,1.632,25,1.391,28,1.061,33,1.849,35,1.908,36,0.02,37,1.558,38,0.801,39,1.333,41,1.862,44,1.174,45,1.116,48,1.185,51,0.586,52,0.503,61,0.192,62,0.444,63,1.622,106,0.668,195,1.061,209,1.894,217,0.013,218,0.013,248,2.097,292,1.894,293,1.831,300,2.597,316,3.529,344,3.12,402,3.885,474,2.262,477,3.05,489,2.461,490,4.188,516,2.262,710,2.463,734,2.892,756,1.721,757,4.101,758,4.425,836,3.885,893,3.327,894,2.525,903,1.831,965,3.327,966,2.461,991,1.955,999,3.571,1492,4.197,1640,3.043,1641,4.895,1642,4.895,1643,4.895,1644,4.895,1645,4.895,1646,4.895,1647,4.895,1648,3.549,1649,4.895,1650,3.549,1651,4.895,1652,3.549,1653,4.895,1654,3.549,1655,4.895,1656,3.549,1657,4.895,1658,3.549,1659,4.895,1660,3.549,1661,3.549,1662,3.043,1663,3.549,1664,3.549,1665,3.043,1666,3.549,1667,3.549,1668,3.549]],["title/modules/UsersModule.html",[219,1.034,1669,2.522]],["body/modules/UsersModule.html",[3,0.219,4,0.191,9,0.191,36,0.02,51,0.631,52,0.65,61,0.248,62,0.573,84,2.096,85,1.873,106,0.864,181,1.442,187,2.723,208,2.723,209,1.733,217,0.015,218,0.015,219,1.304,221,1.683,222,2.096,223,3.281,224,2.366,225,2.224,226,1.873,234,2.992,235,2.366,237,2.503,238,2.503,242,2.709,271,3.502,324,2.224,455,3.632,457,3.426,460,4.428,461,2.224,462,3.18,755,3.18,1432,4.159,1434,3.502,1473,4.159,1498,3.18,1669,5.2,1670,3.932,1671,3.932,1672,4.586,1673,4.586,1674,3.502,1675,4.586]],["title/modules/UsersRoutingModule.html",[219,1.034,1473,2.149]],["body/modules/UsersRoutingModule.html",[0,1.216,3,0.239,4,0.209,9,0.209,36,0.02,51,0.601,52,0.709,61,0.27,62,0.626,69,1.743,85,2.5,187,2.369,193,2.247,217,0.016,218,0.016,221,1.836,226,2.044,237,2.16,238,2.643,256,3.471,257,4.246,258,3.644,259,2.427,262,4.072,299,3.822,468,4.292,469,4.292,470,5.25,473,3.822,551,2.957,678,3.19,715,3.471,1386,3.822,1434,4.675,1473,3.618,1674,3.822,1676,5.005,1677,5.005,1678,5.005,1679,5.005]],["title/injectables/UsersService.html",[292,1.407,1680,2.778]],["body/injectables/UsersService.html",[3,0.18,4,0.157,9,0.157,14,1.829,19,0.412,20,0.767,21,2.496,24,1.379,25,1.45,28,1.127,33,1.844,35,1.84,36,0.02,37,1.503,38,0.812,39,1.286,41,1.84,44,1.248,45,1.186,48,1.245,51,0.565,52,0.534,61,0.204,62,0.472,63,1.724,69,1.777,80,1.974,106,0.71,152,2.078,217,0.013,218,0.013,248,2.228,292,1.974,293,1.946,300,2.504,316,3.339,344,3.252,402,4.01,474,2.404,477,3.001,489,2.615,490,4.296,516,2.404,756,1.829,757,4.099,1110,4.296,1662,3.234,1665,3.234,1680,3.896,1681,3.234,1682,6.195,1683,5.102,1684,5.102,1685,5.102,1686,5.102,1687,5.102,1688,3.772,1689,5.102,1690,3.772,1691,5.102,1692,6.195,1693,3.772,1694,5.102,1695,3.772,1696,5.102,1697,5.102,1698,6.195,1699,3.772,1700,3.772,1701,5.102,1702,3.772,1703,3.772,1704,6.195,1705,5.102,1706,5.102,1707,3.772,1708,3.772,1709,3.772,1710,3.772]],["title/directives/WaitCursorDirective.html",[184,1.335,214,1.335]],["body/directives/WaitCursorDirective.html",[3,0.186,4,0.162,9,0.162,11,1.677,12,2.125,19,0.425,20,0.783,21,2.904,25,1.479,27,3.704,28,1.161,33,1.858,35,1.104,36,0.02,37,0.902,38,0.455,39,0.772,41,1.668,42,2.603,44,1.722,45,1.637,51,0.339,52,0.55,61,0.21,62,0.486,63,1.775,69,1.813,80,2.013,97,1.425,128,2.14,139,3.331,184,1.91,211,1.586,214,1.91,215,2.379,217,0.014,218,0.014,294,2.379,417,4.463,424,5.376,664,3.609,717,3.741,718,4.482,727,4.788,864,3.609,865,4.348,1088,4.463,1092,3.331,1093,5.77,1100,2.694,1104,4.463,1106,3.331,1165,3.974,1267,4.463,1311,3.974,1416,5.333,1711,3.331,1712,5.87,1713,5.87,1714,6.27,1715,3.885,1716,5.205,1717,5.205,1718,3.885,1719,3.885,1720,3.885,1721,5.205,1722,5.205,1723,5.205,1724,5.205,1725,5.87,1726,5.205,1727,6.873,1728,5.205,1729,3.885,1730,3.885,1731,5.205,1732,3.885,1733,3.885,1734,3.885]],["title/coverage.html",[1735,4.269]],["body/coverage.html",[0,1.407,1,1.359,9,0.147,10,3.013,30,1.813,36,0.02,38,0.411,56,1.289,57,2.24,59,3.098,62,0.608,80,1.359,106,0.915,131,4.205,184,1.784,187,1.359,190,1.359,193,1.289,194,1.359,195,1.887,199,1.289,201,1.289,204,1.359,206,1.359,208,1.359,209,1.453,212,1.289,214,1.289,217,0.013,218,0.013,233,2.24,249,2.683,260,2.436,265,3.098,281,3.712,283,3.013,292,2.326,301,3.013,303,2.872,304,3.013,464,2.24,465,3.371,475,3.013,503,2.436,550,3.552,551,3.293,552,2.24,553,3.712,573,1.936,576,2.076,582,1.936,614,2.872,615,2.24,616,2.24,695,1.606,706,1.154,708,3.712,710,1.289,711,2.24,714,3.013,715,2.436,716,4.168,734,2.076,756,2.357,757,2.872,758,2.24,760,2.436,795,1.936,893,1.936,894,3.103,895,3.865,903,1.813,907,3.013,965,1.936,999,2.24,1069,3.013,1070,2.436,1071,3.712,1078,2.683,1079,3.013,1110,2.436,1111,3.013,1114,3.712,1115,3.712,1151,2.436,1152,3.013,1153,3.013,1202,3.013,1206,3.013,1373,2.436,1374,3.013,1416,2.683,1438,3.013,1475,2.683,1477,3.013,1479,3.013,1480,2.436,1481,3.013,1482,3.013,1488,3.712,1489,3.013,1498,2.436,1640,3.013,1674,2.683,1680,2.683,1681,3.013,1711,3.013,1735,3.013,1736,3.514,1737,3.514,1738,3.514,1739,3.514,1740,6.014,1741,4.861,1742,4.861,1743,4.861,1744,6.313,1745,6.014,1746,6.014,1747,3.514,1748,5.573,1749,3.514,1750,3.514,1751,3.514,1752,4.861,1753,4.861,1754,3.514,1755,3.514,1756,3.514,1757,3.013,1758,4.861,1759,4.168,1760,4.861,1761,3.013,1762,3.514,1763,3.514]],["title/dependencies.html",[222,2.001,1764,2.314]],["body/dependencies.html",[36,0.02,52,0.767,217,0.017,218,0.017,222,2.473,240,5.503,241,4.901,259,2.624,324,2.624,329,3.45,461,2.624,1765,5.412,1766,7.458,1767,5.412,1768,6.418,1769,5.412,1770,5.412,1771,5.412,1772,5.412,1773,5.412,1774,5.412,1775,5.412,1776,5.412]],["title/index.html",[19,0.331,1777,3.031,1778,3.031]],["body/index.html",[0,1.289,4,0.2,36,0.015,37,1.112,80,1.853,84,2.189,107,6.189,217,0.015,218,0.015,294,2.189,332,3.322,368,4.108,373,5.11,410,4.108,414,3.054,589,4.108,1301,3.658,1386,3.658,1397,5.563,1764,3.658,1779,4.791,1780,5.96,1781,4.791,1782,6.488,1783,4.108,1784,4.791,1785,4.791,1786,6.982,1787,4.791,1788,4.791,1789,4.791,1790,4.791,1791,4.791,1792,4.791,1793,4.791,1794,4.791,1795,4.791,1796,6.488,1797,6.488,1798,4.791,1799,6.788,1800,4.791,1801,4.791,1802,4.791,1803,4.791,1804,5.96,1805,5.96,1806,6.788,1807,4.791,1808,5.96,1809,5.96,1810,4.791,1811,7.118,1812,4.791,1813,4.791,1814,4.791,1815,5.96,1816,4.791,1817,4.791,1818,4.791,1819,4.791,1820,6.488,1821,4.791,1822,3.658,1823,4.791]],["title/modules.html",[221,1.827]],["body/modules.html",[36,0.016,217,0.016,218,0.016,220,3.68,221,1.947,232,3.383,241,5.629,339,6.028,450,3.68,454,3.383,455,2.738,1379,3.68,1383,3.383,1428,3.68,1432,3.135,1473,3.135,1669,3.68,1824,7.372,1825,7.372,1826,7.55,1827,7.03]],["title/overview.html",[1822,3.801]],["body/overview.html",[1,2.656,2,1.767,36,0.02,56,2.149,84,1.767,181,1.216,187,2.265,190,2.265,193,2.149,194,2.265,199,2.149,201,2.149,204,2.265,206,2.656,208,2.265,211,1.579,212,2.519,214,2.519,217,0.013,218,0.013,219,1.099,220,4.901,221,1.419,222,1.767,223,1.995,224,1.995,225,1.875,226,1.579,227,3.315,228,3.315,229,3.315,230,3.315,231,3.315,232,3.733,233,3.733,234,2.677,235,1.995,258,2.13,282,2.952,450,4.952,451,3.315,452,3.315,453,3.315,454,3.733,455,3.787,474,2.465,707,1.347,1011,4.06,1144,2.952,1379,4.66,1380,3.315,1381,3.315,1382,3.315,1383,3.733,1387,3.315,1388,3.315,1389,3.315,1428,5.031,1429,3.315,1430,3.315,1431,3.315,1432,4.256,1469,3.315,1470,3.315,1471,3.315,1472,3.315,1473,3.697,1669,5.031,1670,3.315,1671,3.315,1822,2.952,1828,5.188,1829,3.866,1830,3.866,1831,3.866]],["title/properties.html",[20,0.659,1764,2.314]],["body/properties.html",[20,0.89,36,0.018,217,0.018,218,0.018,1783,5.075,1832,5.919]],["title/routes.html",[258,2.742]],["body/routes.html",[36,0.018,217,0.018,218,0.018,258,3.284]],["title/miscellaneous/variables.html",[1833,2.599,1834,3.755]],["body/miscellaneous/variables.html",[19,0.608,36,0.02,38,0.763,44,2.157,45,2.05,47,2.868,97,2.039,217,0.017,218,0.017,1757,4.766,1759,6.12,1761,4.766,1833,4.766,1834,4.766,1835,5.558,1836,5.558,1837,6.52,1838,6.52]]],"invertedIndex":[["",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BandFormComponent.html":{},"interfaces/BandFormData.html":{},"interfaces/BandHQ.html":{},"components/BandInfoComponent.html":{},"interfaces/BandMembersSurvey.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/BandUserMatch.html":{},"interfaces/CanDeactivateComponent.html":{},"guards/CanDeactivateGuard.html":{},"directives/ChangeBorderOnClickDirective.html":{},"interfaces/ChangePassword.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"classes/CustomValidators.html":{},"interfaces/Invitation.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"modules/MainPageModule.html":{},"modules/MainPageRoutingModule.html":{},"modules/MaterialModule.html":{},"interfaces/MusicalBand.html":{},"modules/MusicalBandsModule.html":{},"injectables/MusicalBandsService.html":{},"modules/ProfilesModule.html":{},"interfaces/RegisterUser.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{},"interfaces/User.html":{},"interfaces/UserAddress.html":{},"interfaces/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"injectables/UserProfilesService.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{},"directives/WaitCursorDirective.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptorService.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1832,"title":{},"body":{"properties.html":{}}}],["0.01em",{"_index":1355,"title":{},"body":{"components/LoginComponent.html":{}}}],["0.04em",{"_index":1347,"title":{},"body":{"components/LoginComponent.html":{}}}],["0.11.4",{"_index":1776,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1760,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1752,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1742,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1743,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1753,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1749,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1747,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1741,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":1751,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1740,"title":{},"body":{"coverage.html":{}}}],["0/38",{"_index":1755,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1744,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1745,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1748,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1739,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1746,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1756,"title":{},"body":{"coverage.html":{}}}],["00:00:00",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["01",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["0px",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["1",{"_index":1009,"title":{},"body":{"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["1.5px",{"_index":1350,"title":{},"body":{"components/LoginComponent.html":{}}}],["10",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["100",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["1000",{"_index":667,"title":{},"body":{"components/BandFormComponent.html":{}}}],["100px",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["105",{"_index":843,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["10px",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["11",{"_index":1828,"title":{},"body":{"overview.html":{}}}],["1100px",{"_index":1567,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["120px",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["125.33px",{"_index":1547,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["12px",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/BandInfoComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{}}}],["14",{"_index":1830,"title":{},"body":{"overview.html":{}}}],["14.0.0",{"_index":1766,"title":{},"body":{"dependencies.html":{}}}],["14.0.4",{"_index":1768,"title":{},"body":{"dependencies.html":{}}}],["14.0.5",{"_index":1784,"title":{},"body":{"index.html":{}}}],["149",{"_index":1062,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["14px",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{}}}],["151",{"_index":1063,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["15px",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["168",{"_index":869,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["16px",{"_index":694,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["176px",{"_index":1363,"title":{},"body":{"components/LoginComponent.html":{}}}],["18px",{"_index":837,"title":{},"body":{"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{}}}],["191",{"_index":698,"title":{},"body":{"components/BandFormComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["192",{"_index":699,"title":{},"body":{"components/BandFormComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["195px",{"_index":1367,"title":{},"body":{"components/LoginComponent.html":{}}}],["1970",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["2",{"_index":1011,"title":{},"body":{"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileFormComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":1774,"title":{},"body":{"dependencies.html":{}}}],["2.5px",{"_index":1329,"title":{},"body":{"components/LoginComponent.html":{}}}],["20",{"_index":1639,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["200px",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["201",{"_index":1333,"title":{},"body":{"components/LoginComponent.html":{}}}],["205px",{"_index":1352,"title":{},"body":{"components/LoginComponent.html":{}}}],["209",{"_index":1051,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["20px",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["21",{"_index":1831,"title":{},"body":{"overview.html":{}}}],["215.78px",{"_index":686,"title":{},"body":{"components/BandFormComponent.html":{}}}],["215px",{"_index":1366,"title":{},"body":{"components/LoginComponent.html":{}}}],["219",{"_index":858,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["21px",{"_index":1357,"title":{},"body":{"components/LoginComponent.html":{}}}],["221",{"_index":1059,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["223",{"_index":870,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["224",{"_index":1328,"title":{},"body":{"components/LoginComponent.html":{}}}],["226",{"_index":1052,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["227",{"_index":872,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["228",{"_index":1060,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["22px",{"_index":677,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/LoginComponent.html":{}}}],["230",{"_index":1334,"title":{},"body":{"components/LoginComponent.html":{}}}],["230px",{"_index":1354,"title":{},"body":{"components/LoginComponent.html":{}}}],["235px",{"_index":1340,"title":{},"body":{"components/LoginComponent.html":{},"components/UserProfileComponent.html":{}}}],["236",{"_index":859,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["238",{"_index":1057,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["238px",{"_index":1369,"title":{},"body":{"components/LoginComponent.html":{}}}],["240",{"_index":873,"title":{},"body":{"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{}}}],["242",{"_index":1565,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["243",{"_index":862,"title":{},"body":{"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{}}}],["245",{"_index":1566,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["245px",{"_index":1353,"title":{},"body":{"components/LoginComponent.html":{},"components/UserProfileComponent.html":{}}}],["247",{"_index":1054,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["248",{"_index":852,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["24px",{"_index":841,"title":{},"body":{"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["25",{"_index":1308,"title":{},"body":{"components/LoginComponent.html":{}}}],["25px",{"_index":866,"title":{},"body":{"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{}}}],["260px",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["263px",{"_index":892,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["270px",{"_index":1569,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["280px",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/BandInfoComponent.html":{},"components/UserProfileComponent.html":{}}}],["284px",{"_index":888,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["28px",{"_index":675,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandMembersSurveyComponent.html":{}}}],["290px",{"_index":1043,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["2px",{"_index":696,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["3",{"_index":1013,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["30",{"_index":1302,"title":{},"body":{"components/LoginComponent.html":{}}}],["300px",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/BandInfoComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/UserProfileComponent.html":{}}}],["305px",{"_index":1344,"title":{},"body":{"components/LoginComponent.html":{}}}],["306px",{"_index":1571,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["30px",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{}}}],["310px",{"_index":1365,"title":{},"body":{"components/LoginComponent.html":{}}}],["311.2px",{"_index":1316,"title":{},"body":{"components/LoginComponent.html":{}}}],["315px",{"_index":1039,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["325px",{"_index":1040,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["32px",{"_index":1359,"title":{},"body":{"components/LoginComponent.html":{}}}],["330px",{"_index":887,"title":{},"body":{"components/BandInfoComponent.html":{},"components/LoginComponent.html":{}}}],["33px",{"_index":1364,"title":{},"body":{"components/LoginComponent.html":{}}}],["350px",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/BandInfoComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{}}}],["35px",{"_index":685,"title":{},"body":{"components/BandFormComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["360px",{"_index":1068,"title":{},"body":{"components/BandMembersSurveyComponent.html":{},"components/UserProfileComponent.html":{}}}],["370px",{"_index":1320,"title":{},"body":{"components/LoginComponent.html":{}}}],["375px",{"_index":1545,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["380px",{"_index":886,"title":{},"body":{"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{}}}],["384px",{"_index":1037,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["385px",{"_index":1343,"title":{},"body":{"components/LoginComponent.html":{}}}],["3px",{"_index":691,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["4",{"_index":1829,"title":{},"body":{"overview.html":{}}}],["400px",{"_index":705,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["401",{"_index":421,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["403",{"_index":374,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["405px",{"_index":1568,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["40px",{"_index":1032,"title":{},"body":{"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{}}}],["415px",{"_index":1338,"title":{},"body":{"components/LoginComponent.html":{}}}],["430px",{"_index":882,"title":{},"body":{"components/BandInfoComponent.html":{},"components/LoginComponent.html":{}}}],["439.3px",{"_index":1034,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["43px",{"_index":1570,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["440px",{"_index":1044,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["445px",{"_index":702,"title":{},"body":{"components/BandFormComponent.html":{}}}],["450px",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/UserProfileComponent.html":{}}}],["470px",{"_index":1042,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["480px",{"_index":1341,"title":{},"body":{"components/LoginComponent.html":{}}}],["4px",{"_index":853,"title":{},"body":{"components/BandInfoComponent.html":{},"components/LoginComponent.html":{}}}],["500",{"_index":850,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["500px",{"_index":881,"title":{},"body":{"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/UserProfileComponent.html":{}}}],["505px",{"_index":1339,"title":{},"body":{"components/LoginComponent.html":{},"components/UserProfileComponent.html":{}}}],["50px",{"_index":856,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["51px",{"_index":1559,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["525px",{"_index":701,"title":{},"body":{"components/BandFormComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["550",{"_index":877,"title":{},"body":{"components/BandInfoComponent.html":{},"components/UserProfileComponent.html":{}}}],["550px",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/UserProfileComponent.html":{}}}],["555px",{"_index":1038,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["570px",{"_index":700,"title":{},"body":{"components/BandFormComponent.html":{}}}],["5px",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["6",{"_index":1306,"title":{},"body":{"components/LoginComponent.html":{}}}],["6.6px",{"_index":1348,"title":{},"body":{"components/LoginComponent.html":{}}}],["6.8px",{"_index":1356,"title":{},"body":{"components/LoginComponent.html":{}}}],["60000",{"_index":547,"title":{},"body":{"injectables/AuthService.html":{}}}],["600px",{"_index":794,"title":{},"body":{"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/UserProfileComponent.html":{}}}],["650px",{"_index":784,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["660px",{"_index":1337,"title":{},"body":{"components/LoginComponent.html":{}}}],["6px",{"_index":889,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["7.5.0",{"_index":1772,"title":{},"body":{"dependencies.html":{}}}],["700px",{"_index":880,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["7px",{"_index":1324,"title":{},"body":{"components/LoginComponent.html":{}}}],["80",{"_index":680,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["800px",{"_index":839,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["85",{"_index":780,"title":{},"body":{"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/UserProfileComponent.html":{}}}],["850px",{"_index":879,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["8544",{"_index":651,"title":{},"body":{"components/BandFormComponent.html":{}}}],["8545",{"_index":658,"title":{},"body":{"components/BandFormComponent.html":{}}}],["8px",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/BandInfoComponent.html":{},"components/LoginComponent.html":{}}}],["9",{"_index":1183,"title":{},"body":{"classes/CustomValidators.html":{}}}],["90",{"_index":1041,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["90vw",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["9655",{"_index":1021,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["9]+)(?=.*[^a",{"_index":1180,"title":{},"body":{"classes/CustomValidators.html":{}}}],["_currentroute",{"_index":1072,"title":{},"body":{"interfaces/CanDeactivateComponent.html":{},"guards/CanDeactivateGuard.html":{}}}],["_currentstate",{"_index":1073,"title":{},"body":{"interfaces/CanDeactivateComponent.html":{},"guards/CanDeactivateGuard.html":{}}}],["_nextstate",{"_index":1074,"title":{},"body":{"interfaces/CanDeactivateComponent.html":{},"guards/CanDeactivateGuard.html":{}}}],["_route",{"_index":290,"title":{},"body":{"guards/AuthGuard.html":{}}}],["_state",{"_index":287,"title":{},"body":{"guards/AuthGuard.html":{}}}],["a:link",{"_index":1561,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["a:visited",{"_index":1562,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["abstractcontrol",{"_index":611,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandMembersSurveyComponent.html":{},"classes/CustomValidators.html":{},"components/LoginComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["acceptbutton",{"_index":1118,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{}}}],["acceptinvitationtojoinband",{"_index":1641,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["acceptinvitationtojoinband(invitation",{"_index":1647,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["accesate",{"_index":1425,"title":{},"body":{"modules/MaterialModule.html":{}}}],["access",{"_index":375,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"components/LoginComponent.html":{}}}],["accessors",{"_index":565,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["account",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptorService.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{}}}],["account/:username",{"_index":1678,"title":{},"body":{"modules/UsersRoutingModule.html":{}}}],["account/band/:bandid",{"_index":1679,"title":{},"body":{"modules/UsersRoutingModule.html":{}}}],["account_box",{"_index":1299,"title":{},"body":{"components/LoginComponent.html":{}}}],["accountinfocomponent",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["acest",{"_index":1391,"title":{},"body":{"modules/MaterialModule.html":{}}}],["actions",{"_index":693,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["activatedroute",{"_index":731,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["activatedroutesnapshot",{"_index":286,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/CanDeactivateComponent.html":{},"guards/CanDeactivateGuard.html":{}}}],["active",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["actual_component",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["add",{"_index":589,"title":{},"body":{"components/BandFormComponent.html":{},"index.html":{}}}],["addhq",{"_index":556,"title":{},"body":{"components/BandFormComponent.html":{}}}],["address",{"_index":832,"title":{},"body":{"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["address.ts",{"_index":1481,"title":{},"body":{"interfaces/UserAddress.html":{},"coverage.html":{}}}],["addressform",{"_index":1573,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["afara",{"_index":1508,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["again",{"_index":430,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["age",{"_index":818,"title":{},"body":{"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["ale",{"_index":1400,"title":{},"body":{"modules/MaterialModule.html":{}}}],["alert",{"_index":682,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["aliceblue",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/BandInfoComponent.html":{},"components/UserProfileComponent.html":{}}}],["align",{"_index":671,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["allowed",{"_index":664,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{},"directives/WaitCursorDirective.html":{}}}],["analytical",{"_index":933,"title":{},"body":{"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["angular",{"_index":1397,"title":{},"body":{"modules/MaterialModule.html":{},"index.html":{}}}],["angular/animations",{"_index":1765,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1767,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":324,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/MainPageModule.html":{},"modules/MaterialModule.html":{},"modules/MusicalBandsModule.html":{},"modules/ProfilesModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"injectables/MusicalBandsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["angular/compiler",{"_index":1769,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/CanDeactivateComponent.html":{},"guards/CanDeactivateGuard.html":{},"directives/ChangeBorderOnClickDirective.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"modules/MainPageModule.html":{},"modules/MainPageRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/MusicalBandsModule.html":{},"injectables/MusicalBandsService.html":{},"modules/ProfilesModule.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"injectables/UserProfilesService.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{},"directives/WaitCursorDirective.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":461,"title":{},"body":{"modules/AuthModule.html":{},"components/BandFormComponent.html":{},"components/BandMembersSurveyComponent.html":{},"classes/CustomValidators.html":{},"components/LoginComponent.html":{},"modules/MusicalBandsModule.html":{},"components/UserProfileFormComponent.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1770,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":1406,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/card",{"_index":1408,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/dialog",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"modules/MaterialModule.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["angular/material/form",{"_index":1249,"title":{},"body":{"components/LoginComponent.html":{},"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":1412,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/input",{"_index":1404,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/select",{"_index":1410,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tooltip",{"_index":1414,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":259,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"components/BandInfoComponent.html":{},"interfaces/CanDeactivateComponent.html":{},"guards/CanDeactivateGuard.html":{},"modules/MainPageRoutingModule.html":{},"modules/UsersRoutingModule.html":{},"dependencies.html":{}}}],["another",{"_index":409,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["answer",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["apasam",{"_index":1619,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["api",{"_index":350,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["aplicatiei",{"_index":1427,"title":{},"body":{"modules/MaterialModule.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["app.component",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app>#navbar>.navbar",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":1790,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":220,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":232,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appwaitcursor",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"directives/WaitCursorDirective.html":{}}}],["artifacts",{"_index":1800,"title":{},"body":{"index.html":{}}}],["asyncvalidatorfn",{"_index":1170,"title":{},"body":{"classes/CustomValidators.html":{}}}],["attributefilter",{"_index":1731,"title":{},"body":{"directives/WaitCursorDirective.html":{}}}],["attributeoldvalue",{"_index":1733,"title":{},"body":{"directives/WaitCursorDirective.html":{}}}],["auth",{"_index":268,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{}}}],["auth.guard",{"_index":261,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth.service",{"_index":334,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["auth/login",{"_index":299,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/UsersRoutingModule.html":{}}}],["authguard",{"_index":260,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authinterceptorservice",{"_index":233,"title":{"interceptors/AuthInterceptorService.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptorService.html":{},"coverage.html":{},"overview.html":{}}}],["authmodule",{"_index":450,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authorized",{"_index":297,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authroutingmodule",{"_index":454,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":30,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/BandInfoComponent.html":{},"classes/CustomValidators.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["authservice.checkifusernameexists(control.value).pipe",{"_index":1188,"title":{},"body":{"classes/CustomValidators.html":{}}}],["authurl",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["auto",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptorService.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"directives/WaitCursorDirective.html":{}}}],["automatically",{"_index":1791,"title":{},"body":{"index.html":{}}}],["available",{"_index":339,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"modules.html":{}}}],["avatar",{"_index":1552,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["azure",{"_index":1542,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["background",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{}}}],["band",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"modules/MusicalBandsModule.html":{},"injectables/MusicalBandsService.html":{},"interfaces/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["band.members",{"_index":772,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["band.ts",{"_index":708,"title":{},"body":{"interfaces/BandFormData.html":{},"interfaces/MusicalBand.html":{},"coverage.html":{}}}],["banddata",{"_index":557,"title":{},"body":{"components/BandFormComponent.html":{}}}],["bandform",{"_index":558,"title":{},"body":{"components/BandFormComponent.html":{}}}],["bandformcomponent",{"_index":190,"title":{"components/BandFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"modules/MusicalBandsModule.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["bandformdata",{"_index":573,"title":{"interfaces/BandFormData.html":{}},"body":{"components/BandFormComponent.html":{},"interfaces/BandFormData.html":{},"components/BandInfoComponent.html":{},"interfaces/MusicalBand.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["bandhq",{"_index":711,"title":{"interfaces/BandHQ.html":{}},"body":{"interfaces/BandFormData.html":{},"interfaces/BandHQ.html":{},"interfaces/MusicalBand.html":{},"coverage.html":{}}}],["bandid",{"_index":584,"title":{},"body":{"components/BandFormComponent.html":{},"interfaces/BandFormData.html":{},"components/BandInfoComponent.html":{},"interfaces/BandMembersSurvey.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/BandUserMatch.html":{},"interfaces/MusicalBand.html":{},"injectables/MusicalBandsService.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{},"interfaces/UserProfile.html":{}}}],["bandinfo",{"_index":638,"title":{},"body":{"components/BandFormComponent.html":{}}}],["bandinfo.hq",{"_index":640,"title":{},"body":{"components/BandFormComponent.html":{}}}],["bandinfo.name",{"_index":647,"title":{},"body":{"components/BandFormComponent.html":{}}}],["bandinfocomponent",{"_index":193,"title":{"components/BandInfoComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"modules/MusicalBandsModule.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"modules/UsersRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["bandmemberssurvey",{"_index":893,"title":{"interfaces/BandMembersSurvey.html":{}},"body":{"interfaces/BandMembersSurvey.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{},"injectables/UserProfilesService.html":{},"coverage.html":{}}}],["bandmemberssurveycomponent",{"_index":194,"title":{"components/BandMembersSurveyComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"modules/MusicalBandsModule.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["bandname",{"_index":1483,"title":{},"body":{"interfaces/UserProfile.html":{}}}],["bands",{"_index":1437,"title":{},"body":{"modules/MusicalBandsModule.html":{}}}],["bands.module').then(m",{"_index":278,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["bands.module.ts",{"_index":1433,"title":{},"body":{"modules/MusicalBandsModule.html":{}}}],["bands.service",{"_index":617,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{}}}],["bands.service.ts",{"_index":1438,"title":{},"body":{"injectables/MusicalBandsService.html":{},"coverage.html":{}}}],["bands.service.ts:13",{"_index":1446,"title":{},"body":{"injectables/MusicalBandsService.html":{}}}],["bands.service.ts:17",{"_index":1448,"title":{},"body":{"injectables/MusicalBandsService.html":{}}}],["bands.service.ts:21",{"_index":1452,"title":{},"body":{"injectables/MusicalBandsService.html":{}}}],["bands.service.ts:25",{"_index":1458,"title":{},"body":{"injectables/MusicalBandsService.html":{}}}],["bands.service.ts:30",{"_index":1456,"title":{},"body":{"injectables/MusicalBandsService.html":{}}}],["bands.service.ts:34",{"_index":1454,"title":{},"body":{"injectables/MusicalBandsService.html":{}}}],["bands.service.ts:38",{"_index":1460,"title":{},"body":{"injectables/MusicalBandsService.html":{}}}],["bands.service.ts:42",{"_index":1450,"title":{},"body":{"injectables/MusicalBandsService.html":{}}}],["bands/band",{"_index":551,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/UserProfileComponent.html":{},"modules/UsersRoutingModule.html":{},"coverage.html":{}}}],["bands/musical",{"_index":277,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MusicalBandsModule.html":{}}}],["bandsservice",{"_index":575,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{}}}],["bandtojoinid",{"_index":1203,"title":{},"body":{"interfaces/Invitation.html":{}}}],["bandtojoinname",{"_index":1204,"title":{},"body":{"interfaces/Invitation.html":{}}}],["bandusermatch",{"_index":965,"title":{"interfaces/BandUserMatch.html":{}},"body":{"components/BandMembersSurveyComponent.html":{},"interfaces/BandUserMatch.html":{},"injectables/MusicalBandsService.html":{},"interfaces/UserProfile.html":{},"injectables/UserProfilesService.html":{},"coverage.html":{}}}],["behaviorsubject",{"_index":320,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{}}}],["behaviorsubject(false",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(null",{"_index":321,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["best",{"_index":1019,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["block",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["blue",{"_index":863,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["bold",{"_index":876,"title":{},"body":{"components/BandInfoComponent.html":{},"components/UserProfileComponent.html":{}}}],["boolean",{"_index":291,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BandFormComponent.html":{},"interfaces/BandFormData.html":{},"components/BandInfoComponent.html":{},"interfaces/BandMembersSurvey.html":{},"interfaces/CanDeactivateComponent.html":{},"guards/CanDeactivateGuard.html":{},"components/LoginComponent.html":{},"interfaces/MusicalBand.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{},"interfaces/UserProfile.html":{}}}],["bootstrap",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MainPageModule.html":{},"modules/MaterialModule.html":{},"modules/MusicalBandsModule.html":{},"modules/ProfilesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["border",{"_index":695,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"directives/ChangeBorderOnClickDirective.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"coverage.html":{}}}],["bottom",{"_index":681,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["box",{"_index":884,"title":{},"body":{"components/BandInfoComponent.html":{},"components/UserProfileComponent.html":{}}}],["break",{"_index":775,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["browse",{"_index":1826,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1799,"title":{},"body":{"index.html":{}}}],["button",{"_index":692,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["button:disabled",{"_index":1055,"title":{},"body":{"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{}}}],["button:first",{"_index":1067,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["button:hover",{"_index":860,"title":{},"body":{"components/BandInfoComponent.html":{},"components/LoginComponent.html":{}}}],["buttonelement",{"_index":1712,"title":{},"body":{"directives/WaitCursorDirective.html":{}}}],["buttons",{"_index":688,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["buttontext",{"_index":559,"title":{},"body":{"components/BandFormComponent.html":{}}}],["calc(100",{"_index":1543,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["call",{"_index":345,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["calls",{"_index":437,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["canactivate",{"_index":272,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(_route",{"_index":285,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canbeedited",{"_index":1484,"title":{},"body":{"interfaces/UserProfile.html":{}}}],["cancel",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["cancelbutton",{"_index":1119,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{}}}],["cand",{"_index":1618,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["candeactivate",{"_index":472,"title":{},"body":{"modules/AuthRoutingModule.html":{},"interfaces/CanDeactivateComponent.html":{},"guards/CanDeactivateGuard.html":{}}}],["candeactivate(component",{"_index":1076,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["candeactivatecomponent",{"_index":1070,"title":{"interfaces/CanDeactivateComponent.html":{}},"body":{"interfaces/CanDeactivateComponent.html":{},"guards/CanDeactivateGuard.html":{},"coverage.html":{}}}],["candeactivateguard",{"_index":464,"title":{"guards/CanDeactivateGuard.html":{}},"body":{"modules/AuthRoutingModule.html":{},"interfaces/CanDeactivateComponent.html":{},"guards/CanDeactivateGuard.html":{},"coverage.html":{}}}],["canedit",{"_index":721,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["cansing",{"_index":896,"title":{},"body":{"interfaces/BandMembersSurvey.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{},"interfaces/UserProfile.html":{},"components/UserProfileFormComponent.html":{}}}],["capabilities",{"_index":1818,"title":{},"body":{"index.html":{}}}],["card",{"_index":838,"title":{},"body":{"components/BandInfoComponent.html":{},"components/UserProfileComponent.html":{}}}],["case",{"_index":405,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["catcherror",{"_index":330,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"classes/CustomValidators.html":{}}}],["catcherror((err",{"_index":1192,"title":{},"body":{"classes/CustomValidators.html":{}}}],["cause",{"_index":365,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["celelalte",{"_index":1399,"title":{},"body":{"modules/MaterialModule.html":{}}}],["center",{"_index":673,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["change",{"_index":1793,"title":{},"body":{"index.html":{}}}],["changeborderonclick",{"_index":1080,"title":{},"body":{"directives/ChangeBorderOnClickDirective.html":{}}}],["changeborderonclick]'},{'name",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["changeborderonclickdirective",{"_index":212,"title":{"directives/ChangeBorderOnClickDirective.html":{}},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"directives/ChangeBorderOnClickDirective.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"modules/MaterialModule.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["changeborderonmousedown",{"_index":1082,"title":{},"body":{"directives/ChangeBorderOnClickDirective.html":{}}}],["changeborderonmouseleave",{"_index":1083,"title":{},"body":{"directives/ChangeBorderOnClickDirective.html":{}}}],["changeborderonmouseup",{"_index":1084,"title":{},"body":{"directives/ChangeBorderOnClickDirective.html":{}}}],["changecursor",{"_index":1714,"title":{},"body":{"directives/WaitCursorDirective.html":{}}}],["changeeditform",{"_index":562,"title":{},"body":{"components/BandFormComponent.html":{}}}],["changepassword",{"_index":1110,"title":{"interfaces/ChangePassword.html":{}},"body":{"interfaces/ChangePassword.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["characters",{"_index":1300,"title":{},"body":{"components/LoginComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["charismatic",{"_index":934,"title":{},"body":{"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["check",{"_index":410,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"index.html":{}}}],["checkifusernameexists",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkifusernameexists(username",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserisloggedin",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{}}}],["child",{"_index":704,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/UserProfileComponent.html":{}}}],["children",{"_index":273,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["choice",{"_index":1814,"title":{},"body":{"index.html":{}}}],["city",{"_index":569,"title":{},"body":{"components/BandFormComponent.html":{},"interfaces/BandHQ.html":{},"components/BandInfoComponent.html":{},"interfaces/BandMembersSurvey.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{},"interfaces/UserAddress.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["class",{"_index":62,"title":{"classes/ConfirmationDialogModel.html":{},"classes/CustomValidators.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/CanDeactivateComponent.html":{},"guards/CanDeactivateGuard.html":{},"directives/ChangeBorderOnClickDirective.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"classes/CustomValidators.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"modules/MainPageModule.html":{},"modules/MainPageRoutingModule.html":{},"modules/MusicalBandsModule.html":{},"injectables/MusicalBandsService.html":{},"modules/ProfilesModule.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"injectables/UserProfilesService.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{},"directives/WaitCursorDirective.html":{},"coverage.html":{}}}],["classes",{"_index":1144,"title":{},"body":{"classes/ConfirmationDialogModel.html":{},"classes/CustomValidators.html":{},"overview.html":{}}}],["cli",{"_index":1782,"title":{},"body":{"index.html":{}}}],["clic",{"_index":1507,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["click",{"_index":1311,"title":{},"body":{"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"directives/WaitCursorDirective.html":{}}}],["click.directive",{"_index":1415,"title":{},"body":{"modules/MaterialModule.html":{}}}],["click.directive.ts",{"_index":1079,"title":{},"body":{"directives/ChangeBorderOnClickDirective.html":{},"coverage.html":{}}}],["click.directive.ts:10",{"_index":1095,"title":{},"body":{"directives/ChangeBorderOnClickDirective.html":{}}}],["click.directive.ts:11",{"_index":1096,"title":{},"body":{"directives/ChangeBorderOnClickDirective.html":{}}}],["click.directive.ts:13",{"_index":1097,"title":{},"body":{"directives/ChangeBorderOnClickDirective.html":{}}}],["click.directive.ts:17",{"_index":1099,"title":{},"body":{"directives/ChangeBorderOnClickDirective.html":{}}}],["click.directive.ts:21",{"_index":1098,"title":{},"body":{"directives/ChangeBorderOnClickDirective.html":{}}}],["click.directive.ts:6",{"_index":1094,"title":{},"body":{"directives/ChangeBorderOnClickDirective.html":{}}}],["click.directive.ts:8",{"_index":1105,"title":{},"body":{"directives/ChangeBorderOnClickDirective.html":{}}}],["close",{"_index":1030,"title":{},"body":{"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["closedialog",{"_index":563,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["cluster_appmodule",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":451,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":452,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":453,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_mainpagemodule",{"_index":1380,"title":{},"body":{"modules/MainPageModule.html":{},"overview.html":{}}}],["cluster_mainpagemodule_declarations",{"_index":1382,"title":{},"body":{"modules/MainPageModule.html":{},"overview.html":{}}}],["cluster_mainpagemodule_imports",{"_index":1381,"title":{},"body":{"modules/MainPageModule.html":{},"overview.html":{}}}],["cluster_materialmodule",{"_index":1387,"title":{},"body":{"modules/MaterialModule.html":{},"overview.html":{}}}],["cluster_materialmodule_declarations",{"_index":1388,"title":{},"body":{"modules/MaterialModule.html":{},"overview.html":{}}}],["cluster_materialmodule_exports",{"_index":1389,"title":{},"body":{"modules/MaterialModule.html":{},"overview.html":{}}}],["cluster_musicalbandsmodule",{"_index":1429,"title":{},"body":{"modules/MusicalBandsModule.html":{},"overview.html":{}}}],["cluster_musicalbandsmodule_declarations",{"_index":1431,"title":{},"body":{"modules/MusicalBandsModule.html":{},"overview.html":{}}}],["cluster_musicalbandsmodule_imports",{"_index":1430,"title":{},"body":{"modules/MusicalBandsModule.html":{},"overview.html":{}}}],["cluster_profilesmodule",{"_index":1469,"title":{},"body":{"modules/ProfilesModule.html":{},"overview.html":{}}}],["cluster_profilesmodule_declarations",{"_index":1472,"title":{},"body":{"modules/ProfilesModule.html":{},"overview.html":{}}}],["cluster_profilesmodule_exports",{"_index":1470,"title":{},"body":{"modules/ProfilesModule.html":{},"overview.html":{}}}],["cluster_profilesmodule_imports",{"_index":1471,"title":{},"body":{"modules/ProfilesModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1670,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_declarations",{"_index":1671,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":1672,"title":{},"body":{"modules/UsersModule.html":{}}}],["code",{"_index":368,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"index.html":{}}}],["color",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["column",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["columns",{"_index":1322,"title":{},"body":{"components/LoginComponent.html":{}}}],["command",{"_index":1815,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":457,"title":{},"body":{"modules/AuthModule.html":{},"modules/MainPageModule.html":{},"modules/MaterialModule.html":{},"modules/MusicalBandsModule.html":{},"modules/ProfilesModule.html":{},"modules/UsersModule.html":{}}}],["complete",{"_index":653,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{}}}],["completes",{"_index":442,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["completesurvey",{"_index":913,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthRoutingModule.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/CanDeactivateComponent.html":{},"guards/CanDeactivateGuard.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"modules/MainPageRoutingModule.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"modules/UsersRoutingModule.html":{},"coverage.html":{},"index.html":{}}}],["component.candeactivate",{"_index":1075,"title":{},"body":{"interfaces/CanDeactivateComponent.html":{},"guards/CanDeactivateGuard.html":{}}}],["component_template",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"overview.html":{}}}],["confident",{"_index":935,"title":{},"body":{"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["confirmation",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"modules/MaterialModule.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["confirmationdialogcomponent",{"_index":56,"title":{"components/ConfirmationDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"modules/MaterialModule.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["confirmationdialogmodel",{"_index":57,"title":{"classes/ConfirmationDialogModel.html":{}},"body":{"components/AppComponent.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"coverage.html":{}}}],["connect",{"_index":372,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["console.log(currentdateutc",{"_index":548,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(error",{"_index":361,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["console.log(expirydateutc",{"_index":549,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(newvalues",{"_index":1512,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["console.log(surveymatches",{"_index":986,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["console.log(this.matchedusers",{"_index":983,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["console.log(userdata",{"_index":1601,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["const",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"classes/CustomValidators.html":{},"components/LoginComponent.html":{},"modules/MainPageRoutingModule.html":{},"components/UserProfileComponent.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{},"directives/WaitCursorDirective.html":{}}}],["constructor",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"directives/ChangeBorderOnClickDirective.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"injectables/MusicalBandsService.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{},"directives/WaitCursorDirective.html":{}}}],["constructor(authservice",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptorService.html":{},"components/LoginComponent.html":{}}}],["constructor(data",{"_index":572,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandMembersSurveyComponent.html":{}}}],["constructor(dialog",{"_index":1493,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["constructor(dialogref",{"_index":1123,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["constructor(elementref",{"_index":1092,"title":{},"body":{"directives/ChangeBorderOnClickDirective.html":{},"directives/WaitCursorDirective.html":{}}}],["constructor(http",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MusicalBandsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["constructor(private",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"directives/ChangeBorderOnClickDirective.html":{},"components/LoginComponent.html":{},"injectables/MusicalBandsService.html":{},"components/UserProfileComponent.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{},"directives/WaitCursorDirective.html":{}}}],["constructor(route",{"_index":730,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["constructor(title",{"_index":1145,"title":{},"body":{"classes/ConfirmationDialogModel.html":{}}}],["constructor(userdata",{"_index":1575,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["contact",{"_index":822,"title":{},"body":{"components/BandInfoComponent.html":{},"components/UserProfileComponent.html":{}}}],["contain",{"_index":1294,"title":{},"body":{"components/LoginComponent.html":{}}}],["container",{"_index":670,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["content",{"_index":846,"title":{},"body":{"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{}}}],["continue",{"_index":347,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"components/LoginComponent.html":{}}}],["control",{"_index":1173,"title":{},"body":{"classes/CustomValidators.html":{}}}],["control.value",{"_index":1187,"title":{},"body":{"classes/CustomValidators.html":{}}}],["converted",{"_index":543,"title":{},"body":{"injectables/AuthService.html":{}}}],["cookie.startswith('token_expiry_date='))?.split('=')[1",{"_index":357,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{}}}],["coordinated",{"_index":536,"title":{},"body":{"injectables/AuthService.html":{}}}],["cornflowerblue",{"_index":1065,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["country",{"_index":568,"title":{},"body":{"components/BandFormComponent.html":{},"interfaces/BandHQ.html":{},"components/BandInfoComponent.html":{},"interfaces/BandMembersSurvey.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{},"interfaces/UserAddress.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["cover",{"_index":1558,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["coverage",{"_index":1735,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":626,"title":{},"body":{"components/BandFormComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["createband",{"_index":1439,"title":{},"body":{"injectables/MusicalBandsService.html":{},"components/UserProfileComponent.html":{}}}],["createband(band",{"_index":1447,"title":{},"body":{"injectables/MusicalBandsService.html":{}}}],["created",{"_index":1525,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["createuserprofile",{"_index":1642,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["createuserprofile(profile",{"_index":1649,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["creative",{"_index":936,"title":{},"body":{"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["creatorusername",{"_index":713,"title":{},"body":{"interfaces/BandFormData.html":{},"interfaces/MusicalBand.html":{}}}],["current",{"_index":336,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["currentdateutc",{"_index":544,"title":{},"body":{"injectables/AuthService.html":{}}}],["currently",{"_index":338,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["currentuser",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["cursor",{"_index":864,"title":{},"body":{"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{},"directives/WaitCursorDirective.html":{}}}],["cursor.directive",{"_index":1417,"title":{},"body":{"modules/MaterialModule.html":{}}}],["cursor.directive.ts",{"_index":1711,"title":{},"body":{"directives/WaitCursorDirective.html":{},"coverage.html":{}}}],["cursor.directive.ts:10",{"_index":1716,"title":{},"body":{"directives/WaitCursorDirective.html":{}}}],["cursor.directive.ts:15",{"_index":1729,"title":{},"body":{"directives/WaitCursorDirective.html":{}}}],["cursor.directive.ts:29",{"_index":1719,"title":{},"body":{"directives/WaitCursorDirective.html":{}}}],["cursor.directive.ts:34",{"_index":1718,"title":{},"body":{"directives/WaitCursorDirective.html":{}}}],["cursor.directive.ts:6",{"_index":1715,"title":{},"body":{"directives/WaitCursorDirective.html":{}}}],["cursor.directive.ts:8",{"_index":1720,"title":{},"body":{"directives/WaitCursorDirective.html":{}}}],["custom",{"_index":1250,"title":{},"body":{"components/LoginComponent.html":{}}}],["customvalidators",{"_index":1151,"title":{"classes/CustomValidators.html":{}},"body":{"classes/CustomValidators.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["customvalidators.forbiddencharacters",{"_index":1230,"title":{},"body":{"components/LoginComponent.html":{}}}],["d",{"_index":382,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["daca",{"_index":1505,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["dam",{"_index":1506,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["darkblue",{"_index":1143,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["data",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandMembersSurveyComponent.html":{}}}],["data.formdata",{"_index":619,"title":{},"body":{"components/BandFormComponent.html":{}}}],["date",{"_index":535,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/BandFormData.html":{},"components/BandInfoComponent.html":{},"interfaces/MusicalBand.html":{}}}],["date(dateandtimenow.gettime",{"_index":545,"title":{},"body":{"injectables/AuthService.html":{}}}],["date(datefromcookie.replace(/%3a/g",{"_index":541,"title":{},"body":{"injectables/AuthService.html":{}}}],["dateandtimenow",{"_index":542,"title":{},"body":{"injectables/AuthService.html":{}}}],["dateandtimenow.gettimezoneoffset",{"_index":546,"title":{},"body":{"injectables/AuthService.html":{}}}],["dateformed",{"_index":712,"title":{},"body":{"interfaces/BandFormData.html":{},"interfaces/MusicalBand.html":{}}}],["datefromcookie",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{}}}],["de",{"_index":1395,"title":{},"body":{"modules/MaterialModule.html":{}}}],["deactivate.guard",{"_index":466,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["deactivate.guard.ts",{"_index":1071,"title":{},"body":{"interfaces/CanDeactivateComponent.html":{},"guards/CanDeactivateGuard.html":{},"coverage.html":{}}}],["deactivate.guard.ts:13",{"_index":1077,"title":{},"body":{"guards/CanDeactivateGuard.html":{}}}],["declarations",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MainPageModule.html":{},"modules/MaterialModule.html":{},"modules/MusicalBandsModule.html":{},"modules/ProfilesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["declined",{"_index":1026,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["decoration",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["decorators",{"_index":1100,"title":{},"body":{"directives/ChangeBorderOnClickDirective.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"directives/WaitCursorDirective.html":{}}}],["deep",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["default",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"directives/ChangeBorderOnClickDirective.html":{},"classes/ConfirmationDialogModel.html":{},"components/LoginComponent.html":{},"injectables/MusicalBandsService.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{},"directives/WaitCursorDirective.html":{},"miscellaneous/variables.html":{}}}],["defaultborderstyle",{"_index":1086,"title":{},"body":{"directives/ChangeBorderOnClickDirective.html":{}}}],["defined",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"guards/CanDeactivateGuard.html":{},"directives/ChangeBorderOnClickDirective.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"classes/CustomValidators.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"injectables/MusicalBandsService.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{},"directives/WaitCursorDirective.html":{}}}],["delete",{"_index":1004,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["deletebandmatches",{"_index":1440,"title":{},"body":{"injectables/MusicalBandsService.html":{}}}],["deletebandmatches(bandid",{"_index":1449,"title":{},"body":{"injectables/MusicalBandsService.html":{}}}],["denied",{"_index":376,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["dependencies",{"_index":222,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MainPageModule.html":{},"modules/MaterialModule.html":{},"modules/MusicalBandsModule.html":{},"modules/ProfilesModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["detail",{"_index":874,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["detail:first",{"_index":890,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["detail:last",{"_index":891,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["details",{"_index":844,"title":{},"body":{"components/BandInfoComponent.html":{},"components/UserProfileComponent.html":{}}}],["details:last",{"_index":1560,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["dev",{"_index":1788,"title":{},"body":{"index.html":{}}}],["development",{"_index":1785,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/BandInfoComponent.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"components/UserProfileComponent.html":{}}}],["dialog'},{'name",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["dialog.component",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/MaterialModule.html":{}}}],["dialog.component.html",{"_index":1117,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{}}}],["dialog.component.scss",{"_index":1116,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{}}}],["dialog.component.ts",{"_index":1115,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"coverage.html":{}}}],["dialog.component.ts:10",{"_index":1131,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["dialog.component.ts:11",{"_index":1130,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["dialog.component.ts:12",{"_index":1127,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["dialog.component.ts:13",{"_index":1124,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["dialog.component.ts:16",{"_index":1129,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["dialog.component.ts:17",{"_index":1128,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["dialog.component.ts:25",{"_index":1125,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["dialog.component.ts:28",{"_index":1126,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["dialog.component.ts:33",{"_index":1146,"title":{},"body":{"classes/ConfirmationDialogModel.html":{}}}],["dialog.component.ts:35",{"_index":1150,"title":{},"body":{"classes/ConfirmationDialogModel.html":{}}}],["dialog.component.ts:36",{"_index":1149,"title":{},"body":{"classes/ConfirmationDialogModel.html":{}}}],["dialog.component.ts:37",{"_index":1147,"title":{},"body":{"classes/ConfirmationDialogModel.html":{}}}],["dialog.component.ts:38",{"_index":1148,"title":{},"body":{"classes/ConfirmationDialogModel.html":{}}}],["dialog/confirmation",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"modules/MaterialModule.html":{},"coverage.html":{}}}],["dialogconfig",{"_index":778,"title":{},"body":{"components/BandInfoComponent.html":{},"components/UserProfileComponent.html":{}}}],["dialogconfig.data",{"_index":786,"title":{},"body":{"components/BandInfoComponent.html":{},"components/UserProfileComponent.html":{}}}],["dialogconfig.disableclose",{"_index":785,"title":{},"body":{"components/BandInfoComponent.html":{},"components/UserProfileComponent.html":{}}}],["dialogconfig.height",{"_index":1499,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["dialogconfig.maxheight",{"_index":783,"title":{},"body":{"components/BandInfoComponent.html":{},"components/UserProfileComponent.html":{}}}],["dialogconfig.maxwidth",{"_index":782,"title":{},"body":{"components/BandInfoComponent.html":{},"components/UserProfileComponent.html":{}}}],["dialogconfig.minwidth",{"_index":781,"title":{},"body":{"components/BandInfoComponent.html":{},"components/UserProfileComponent.html":{}}}],["dialogconfig.width",{"_index":779,"title":{},"body":{"components/BandInfoComponent.html":{},"components/UserProfileComponent.html":{}}}],["dialogdata",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{}}}],["dialogdata.acceptbutton",{"_index":1137,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{}}}],["dialogdata.cancelbutton",{"_index":1139,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{}}}],["dialogdata.message",{"_index":1135,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{}}}],["dialogdata.title",{"_index":1133,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{}}}],["dialogref",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["dialogref.afterclosed().subscribe((answer",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["dialogref.afterclosed().subscribe((bandid",{"_index":788,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["dialogref.afterclosed().subscribe((newvalues",{"_index":1511,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["dialogref.afterclosed().subscribe((response",{"_index":1516,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["dialogul",{"_index":1504,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["different",{"_index":420,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["direction",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["directive",{"_index":184,"title":{"directives/ChangeBorderOnClickDirective.html":{},"directives/WaitCursorDirective.html":{}},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"directives/ChangeBorderOnClickDirective.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"directives/WaitCursorDirective.html":{},"coverage.html":{}}}],["directives",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"directives/ChangeBorderOnClickDirective.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"directives/WaitCursorDirective.html":{},"overview.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1798,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1803,"title":{},"body":{"index.html":{}}}],["disableclose",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["disabled",{"_index":1725,"title":{},"body":{"directives/WaitCursorDirective.html":{}}}],["display",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["dist",{"_index":1802,"title":{},"body":{"index.html":{}}}],["div",{"_index":679,"title":{},"body":{"components/BandFormComponent.html":{},"components/LoginComponent.html":{}}}],["document.body.style.cursor",{"_index":417,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"directives/WaitCursorDirective.html":{}}}],["document.cookie",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["document.cookie.split",{"_index":355,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{}}}],["document.getelementbyid('login",{"_index":1255,"title":{},"body":{"components/LoginComponent.html":{}}}],["document.queryselector('.form",{"_index":1260,"title":{},"body":{"components/LoginComponent.html":{}}}],["documentation",{"_index":1736,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["don't",{"_index":395,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"components/UserProfileComponent.html":{}}}],["don\\'t",{"_index":1572,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["done",{"_index":447,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["dynamic",{"_index":1771,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":340,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["e2e",{"_index":1812,"title":{},"body":{"index.html":{}}}],["edit",{"_index":621,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["editband",{"_index":725,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["edituserprofile",{"_index":1492,"title":{},"body":{"components/UserProfileComponent.html":{},"injectables/UserProfilesService.html":{}}}],["edituserprofile(profile",{"_index":1651,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["element",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["elementref",{"_index":1093,"title":{},"body":{"directives/ChangeBorderOnClickDirective.html":{},"directives/WaitCursorDirective.html":{}}}],["email",{"_index":823,"title":{},"body":{"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/RegisterUser.html":{},"interfaces/User.html":{},"interfaces/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["emitusername",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{}}}],["emitusername(username",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{}}}],["empty",{"_index":1010,"title":{},"body":{"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["en",{"_index":384,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["end",{"_index":1811,"title":{},"body":{"index.html":{}}}],["enter",{"_index":1638,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["environment",{"_index":1759,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":392,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"components/BandInfoComponent.html":{},"classes/CustomValidators.html":{},"components/LoginComponent.html":{}}}],["err.message",{"_index":777,"title":{},"body":{"components/BandInfoComponent.html":{},"components/LoginComponent.html":{}}}],["err.name",{"_index":394,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["error",{"_index":363,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/BandInfoComponent.html":{},"classes/CustomValidators.html":{},"components/LoginComponent.html":{}}}],["error(errormessage",{"_index":393,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["error.error",{"_index":377,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["error.error.lockoutend",{"_index":378,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["error.error.message",{"_index":388,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["error.error.title.includes('validation",{"_index":390,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["error.status",{"_index":369,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["error>#underline",{"_index":1349,"title":{},"body":{"components/LoginComponent.html":{}}}],["error>strong",{"_index":1361,"title":{},"body":{"components/LoginComponent.html":{}}}],["errormessage",{"_index":364,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"components/BandInfoComponent.html":{},"components/LoginComponent.html":{}}}],["errorname",{"_index":362,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["event",{"_index":1265,"title":{},"body":{"components/LoginComponent.html":{}}}],["event.target",{"_index":1266,"title":{},"body":{"components/LoginComponent.html":{}}}],["excedeed",{"_index":668,"title":{},"body":{"components/BandFormComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["execute",{"_index":1808,"title":{},"body":{"index.html":{}}}],["exist",{"_index":1303,"title":{},"body":{"components/LoginComponent.html":{}}}],["expires=thu",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["expirydateutc",{"_index":540,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BandFormComponent.html":{},"interfaces/BandFormData.html":{},"interfaces/BandHQ.html":{},"components/BandInfoComponent.html":{},"interfaces/BandMembersSurvey.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/BandUserMatch.html":{},"interfaces/CanDeactivateComponent.html":{},"guards/CanDeactivateGuard.html":{},"directives/ChangeBorderOnClickDirective.html":{},"interfaces/ChangePassword.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"classes/CustomValidators.html":{},"interfaces/Invitation.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"modules/MainPageModule.html":{},"modules/MainPageRoutingModule.html":{},"interfaces/MusicalBand.html":{},"modules/MusicalBandsModule.html":{},"injectables/MusicalBandsService.html":{},"modules/ProfilesModule.html":{},"interfaces/RegisterUser.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{},"interfaces/User.html":{},"interfaces/UserAddress.html":{},"interfaces/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"injectables/UserProfilesService.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{},"directives/WaitCursorDirective.html":{}}}],["exportate",{"_index":1421,"title":{},"body":{"modules/MaterialModule.html":{}}}],["exports",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/MainPageModule.html":{},"modules/MainPageRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/MusicalBandsModule.html":{},"modules/ProfilesModule.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"overview.html":{}}}],["eye",{"_index":1325,"title":{},"body":{"components/LoginComponent.html":{}}}],["failed",{"_index":412,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"components/LoginComponent.html":{}}}],["false",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["features",{"_index":1293,"title":{},"body":{"components/LoginComponent.html":{}}}],["fereastra",{"_index":1621,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["fi",{"_index":1424,"title":{},"body":{"modules/MaterialModule.html":{}}}],["field",{"_index":660,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/UserProfileFormComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BandFormComponent.html":{},"interfaces/BandFormData.html":{},"interfaces/BandHQ.html":{},"components/BandInfoComponent.html":{},"interfaces/BandMembersSurvey.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/BandUserMatch.html":{},"interfaces/CanDeactivateComponent.html":{},"guards/CanDeactivateGuard.html":{},"directives/ChangeBorderOnClickDirective.html":{},"interfaces/ChangePassword.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"classes/CustomValidators.html":{},"interfaces/Invitation.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"modules/MainPageModule.html":{},"modules/MainPageRoutingModule.html":{},"modules/MaterialModule.html":{},"interfaces/MusicalBand.html":{},"modules/MusicalBandsModule.html":{},"injectables/MusicalBandsService.html":{},"modules/ProfilesModule.html":{},"interfaces/RegisterUser.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{},"interfaces/User.html":{},"interfaces/UserAddress.html":{},"interfaces/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"injectables/UserProfilesService.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{},"directives/WaitCursorDirective.html":{},"coverage.html":{}}}],["files",{"_index":1794,"title":{},"body":{"index.html":{}}}],["find",{"_index":1008,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["find((cookie",{"_index":356,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{}}}],["first",{"_index":332,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"index.html":{}}}],["first(result",{"_index":432,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["firstforminput",{"_index":1259,"title":{},"body":{"components/LoginComponent.html":{}}}],["firstname",{"_index":1485,"title":{},"body":{"interfaces/UserProfile.html":{},"components/UserProfileFormComponent.html":{}}}],["fit",{"_index":845,"title":{},"body":{"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{}}}],["flex",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["float",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["folosite",{"_index":1398,"title":{},"body":{"modules/MaterialModule.html":{}}}],["font",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["forbidden",{"_index":1174,"title":{},"body":{"classes/CustomValidators.html":{}}}],["forbiddencharacters",{"_index":1155,"title":{},"body":{"classes/CustomValidators.html":{}}}],["forbiddencharacters(forbiddencharregex",{"_index":1159,"title":{},"body":{"classes/CustomValidators.html":{}}}],["forbiddencharregex",{"_index":1162,"title":{},"body":{"classes/CustomValidators.html":{}}}],["forbiddencharregex.test(control.value",{"_index":1175,"title":{},"body":{"classes/CustomValidators.html":{}}}],["form",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["form')?.addeventlistener('mousedown",{"_index":1263,"title":{},"body":{"components/LoginComponent.html":{}}}],["form')?.removeeventlistener('mousedown",{"_index":1272,"title":{},"body":{"components/LoginComponent.html":{}}}],["form's",{"_index":1370,"title":{},"body":{"components/LoginComponent.html":{}}}],["form'},{'name",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["form.component",{"_index":755,"title":{},"body":{"components/BandInfoComponent.html":{},"modules/MusicalBandsModule.html":{},"components/UserProfileComponent.html":{},"modules/UsersModule.html":{}}}],["form.component.html",{"_index":555,"title":{},"body":{"components/BandFormComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["form.component.scss",{"_index":554,"title":{},"body":{"components/BandFormComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["form.component.ts",{"_index":553,"title":{},"body":{"components/BandFormComponent.html":{},"components/UserProfileFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:103",{"_index":1600,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["form.component.ts:107",{"_index":1578,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["form.component.ts:111",{"_index":1579,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["form.component.ts:13",{"_index":592,"title":{},"body":{"components/BandFormComponent.html":{}}}],["form.component.ts:14",{"_index":1581,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["form.component.ts:15",{"_index":581,"title":{},"body":{"components/BandFormComponent.html":{}}}],["form.component.ts:16",{"_index":591,"title":{},"body":{"components/BandFormComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["form.component.ts:18",{"_index":588,"title":{},"body":{"components/BandFormComponent.html":{}}}],["form.component.ts:25",{"_index":595,"title":{},"body":{"components/BandFormComponent.html":{}}}],["form.component.ts:32",{"_index":577,"title":{},"body":{"components/BandFormComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["form.component.ts:35",{"_index":1580,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["form.component.ts:39",{"_index":1576,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["form.component.ts:49",{"_index":597,"title":{},"body":{"components/BandFormComponent.html":{}}}],["form.component.ts:53",{"_index":599,"title":{},"body":{"components/BandFormComponent.html":{}}}],["form.component.ts:55",{"_index":1585,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["form.component.ts:57",{"_index":601,"title":{},"body":{"components/BandFormComponent.html":{}}}],["form.component.ts:59",{"_index":1587,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["form.component.ts:61",{"_index":603,"title":{},"body":{"components/BandFormComponent.html":{}}}],["form.component.ts:63",{"_index":1589,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["form.component.ts:65",{"_index":605,"title":{},"body":{"components/BandFormComponent.html":{}}}],["form.component.ts:67",{"_index":1591,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["form.component.ts:69",{"_index":607,"title":{},"body":{"components/BandFormComponent.html":{}}}],["form.component.ts:71",{"_index":1592,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["form.component.ts:73",{"_index":609,"title":{},"body":{"components/BandFormComponent.html":{}}}],["form.component.ts:75",{"_index":1593,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["form.component.ts:78",{"_index":578,"title":{},"body":{"components/BandFormComponent.html":{}}}],["form.component.ts:79",{"_index":1594,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["form.component.ts:83",{"_index":1595,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["form.component.ts:87",{"_index":1596,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["form.component.ts:89",{"_index":579,"title":{},"body":{"components/BandFormComponent.html":{}}}],["form.component.ts:91",{"_index":1597,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["form.component.ts:93",{"_index":580,"title":{},"body":{"components/BandFormComponent.html":{}}}],["form.component.ts:95",{"_index":1598,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["form.component.ts:99",{"_index":1599,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["form/band",{"_index":552,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"modules/MusicalBandsModule.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["form/user",{"_index":1498,"title":{},"body":{"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["formatdate",{"_index":323,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{}}}],["formatdate(error.error.lockoutend",{"_index":380,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["formcontrol",{"_index":585,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandMembersSurveyComponent.html":{},"classes/CustomValidators.html":{},"components/LoginComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["formcontrol(0",{"_index":930,"title":{},"body":{"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["formcontrol(100",{"_index":931,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["formcontrol(false",{"_index":587,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["formcontrol(null",{"_index":593,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["formcontrol.get(source",{"_index":1194,"title":{},"body":{"classes/CustomValidators.html":{}}}],["formcontrol.get(target",{"_index":1196,"title":{},"body":{"classes/CustomValidators.html":{}}}],["formdata",{"_index":709,"title":{},"body":{"interfaces/BandFormData.html":{},"components/BandInfoComponent.html":{},"components/LoginComponent.html":{},"interfaces/MusicalBand.html":{}}}],["formdata.password).subscribe",{"_index":1282,"title":{},"body":{"components/LoginComponent.html":{}}}],["formdata.username",{"_index":1285,"title":{},"body":{"components/LoginComponent.html":{}}}],["formed",{"_index":802,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["formfield.updateoutlinegap",{"_index":1240,"title":{},"body":{"components/LoginComponent.html":{}}}],["formfields",{"_index":1209,"title":{},"body":{"components/LoginComponent.html":{}}}],["formgroup",{"_index":583,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["formisobserved",{"_index":1210,"title":{},"body":{"components/LoginComponent.html":{}}}],["formtitle",{"_index":560,"title":{},"body":{"components/BandFormComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["found",{"_index":1028,"title":{},"body":{"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{}}}],["friendly",{"_index":937,"title":{},"body":{"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["frontend",{"_index":1779,"title":{},"body":{"index.html":{}}}],["full",{"_index":469,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/UsersRoutingModule.html":{}}}],["function",{"_index":343,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"interfaces/CanDeactivateComponent.html":{}}}],["further",{"_index":1819,"title":{},"body":{"index.html":{}}}],["general",{"_index":652,"title":{},"body":{"components/BandFormComponent.html":{}}}],["generate",{"_index":1796,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1781,"title":{},"body":{"index.html":{}}}],["genre",{"_index":657,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["getage",{"_index":1590,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["getalluserprofiles",{"_index":1664,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["getallusers",{"_index":1682,"title":{},"body":{"injectables/UsersService.html":{}}}],["getbandbyid",{"_index":1441,"title":{},"body":{"injectables/MusicalBandsService.html":{}}}],["getbandbyid(bandid",{"_index":1451,"title":{},"body":{"injectables/MusicalBandsService.html":{}}}],["getcansing",{"_index":955,"title":{},"body":{"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["getcity",{"_index":604,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["getcountry",{"_index":602,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["getfirstname",{"_index":1584,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["getiscomplete",{"_index":600,"title":{},"body":{"components/BandFormComponent.html":{}}}],["getlastname",{"_index":1586,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["getmatcheduserprofiles",{"_index":1442,"title":{},"body":{"injectables/MusicalBandsService.html":{}}}],["getmatcheduserprofiles(bandid",{"_index":1453,"title":{},"body":{"injectables/MusicalBandsService.html":{}}}],["getmatcheduserprofiles(this.data.bandid",{"_index":979,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["getmaxage",{"_index":951,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["getminage",{"_index":949,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["getmusicalband",{"_index":726,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["getmusicalband(id",{"_index":738,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["getmusicgenre",{"_index":598,"title":{},"body":{"components/BandFormComponent.html":{}}}],["getname",{"_index":596,"title":{},"body":{"components/BandFormComponent.html":{}}}],["getoccupation",{"_index":953,"title":{},"body":{"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["getpassword",{"_index":1245,"title":{},"body":{"components/LoginComponent.html":{}}}],["getphonenumber",{"_index":1588,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["getplayedinstrument",{"_index":957,"title":{},"body":{"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["getpreferredmusicgenre",{"_index":959,"title":{},"body":{"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["getprofilebyusername",{"_index":1643,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["getprofilebyusername(username",{"_index":1653,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["getsquaremeters",{"_index":608,"title":{},"body":{"components/BandFormComponent.html":{}}}],["getstreet",{"_index":606,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["getsurveymatches",{"_index":1644,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["getsurveymatches(survey",{"_index":1655,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["getting",{"_index":1777,"title":{"index.html":{}},"body":{}}],["gettrait1",{"_index":961,"title":{},"body":{"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["gettrait2",{"_index":963,"title":{},"body":{"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["getuserbyname",{"_index":1683,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserbyname(username",{"_index":1689,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserinvitations",{"_index":1645,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["getuserinvitations(userid",{"_index":1657,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["getusername",{"_index":1243,"title":{},"body":{"components/LoginComponent.html":{}}}],["go",{"_index":1821,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1827,"title":{},"body":{"modules.html":{}}}],["greeting",{"_index":1313,"title":{},"body":{"components/LoginComponent.html":{}}}],["grid",{"_index":1321,"title":{},"body":{"components/LoginComponent.html":{}}}],["guard",{"_index":281,"title":{"guards/AuthGuard.html":{},"guards/CanDeactivateGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":282,"title":{},"body":{"guards/AuthGuard.html":{},"guards/CanDeactivateGuard.html":{},"overview.html":{}}}],["guest",{"_index":1290,"title":{},"body":{"components/LoginComponent.html":{}}}],["h1",{"_index":1046,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["h2",{"_index":1048,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["h3",{"_index":1315,"title":{},"body":{"components/LoginComponent.html":{}}}],["h:mm:ss",{"_index":383,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["hard",{"_index":938,"title":{},"body":{"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["hasforbiddenchar",{"_index":1176,"title":{},"body":{"classes/CustomValidators.html":{}}}],["haven't",{"_index":1309,"title":{},"body":{"components/LoginComponent.html":{}}}],["haven\\'t",{"_index":1372,"title":{},"body":{"components/LoginComponent.html":{}}}],["headed",{"_index":942,"title":{},"body":{"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["header",{"_index":1546,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["headers",{"_index":1704,"title":{},"body":{"injectables/UsersService.html":{}}}],["headquarters",{"_index":659,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{}}}],["headquartersform",{"_index":561,"title":{},"body":{"components/BandFormComponent.html":{}}}],["height",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/BandInfoComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{}}}],["help",{"_index":1820,"title":{},"body":{"index.html":{}}}],["here",{"_index":1312,"title":{},"body":{"components/LoginComponent.html":{},"components/UserProfileComponent.html":{}}}],["hidden",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["home",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["hostlistener",{"_index":1106,"title":{},"body":{"directives/ChangeBorderOnClickDirective.html":{},"directives/WaitCursorDirective.html":{}}}],["hostlistener('click",{"_index":1717,"title":{},"body":{"directives/WaitCursorDirective.html":{}}}],["hostlistener('mousedown",{"_index":1101,"title":{},"body":{"directives/ChangeBorderOnClickDirective.html":{}}}],["hostlistener('mouseleave",{"_index":1102,"title":{},"body":{"directives/ChangeBorderOnClickDirective.html":{}}}],["hostlistener('mouseup",{"_index":1103,"title":{},"body":{"directives/ChangeBorderOnClickDirective.html":{}}}],["hostlisteners",{"_index":1088,"title":{},"body":{"directives/ChangeBorderOnClickDirective.html":{},"directives/WaitCursorDirective.html":{}}}],["hq",{"_index":590,"title":{},"body":{"components/BandFormComponent.html":{},"interfaces/BandFormData.html":{},"components/BandInfoComponent.html":{},"interfaces/MusicalBand.html":{}}}],["html",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["htmlelement",{"_index":1267,"title":{},"body":{"components/LoginComponent.html":{},"directives/WaitCursorDirective.html":{}}}],["http",{"_index":344,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"injectables/MusicalBandsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["http://localhost:4200",{"_index":1386,"title":{},"body":{"modules/MainPageRoutingModule.html":{},"modules/UsersRoutingModule.html":{},"index.html":{}}}],["http://localhost:4200/auth",{"_index":467,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["http://localhost:4200/users",{"_index":1677,"title":{},"body":{"modules/UsersRoutingModule.html":{}}}],["http_interceptors",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MusicalBandsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["httpclientmodule",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":325,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["httpevent",{"_index":326,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["httphandler",{"_index":313,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["httpheaders",{"_index":1702,"title":{},"body":{"injectables/UsersService.html":{}}}],["httpheaders().set('content",{"_index":1705,"title":{},"body":{"injectables/UsersService.html":{}}}],["httpinterceptor",{"_index":327,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["httprequest",{"_index":311,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["https://localhost:7299/api/authentication",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://localhost:7299/api/bands",{"_index":1461,"title":{},"body":{"injectables/MusicalBandsService.html":{}}}],["https://localhost:7299/api/profiles",{"_index":1659,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["https://localhost:7299/api/users",{"_index":1701,"title":{},"body":{"injectables/UsersService.html":{}}}],["hyphens",{"_index":1297,"title":{},"body":{"components/LoginComponent.html":{}}}],["icon",{"_index":883,"title":{},"body":{"components/BandInfoComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{}}}],["id",{"_index":740,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["id1223671392?k=20&m=1223671392&s=612x612&w=0&h=lgpj2vwai3wut1jejwm1proht3v15_1pdctn2szdwq0",{"_index":1557,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["identifier",{"_index":1737,"title":{},"body":{"coverage.html":{}}}],["if(mutation.attributename",{"_index":1724,"title":{},"body":{"directives/WaitCursorDirective.html":{}}}],["if(this.banddata",{"_index":642,"title":{},"body":{"components/BandFormComponent.html":{}}}],["illustration",{"_index":1556,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["image",{"_index":1549,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["implements",{"_index":294,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/CanDeactivateComponent.html":{},"guards/CanDeactivateGuard.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"directives/WaitCursorDirective.html":{},"index.html":{}}}],["import",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BandFormComponent.html":{},"interfaces/BandFormData.html":{},"components/BandInfoComponent.html":{},"interfaces/BandMembersSurvey.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/CanDeactivateComponent.html":{},"guards/CanDeactivateGuard.html":{},"directives/ChangeBorderOnClickDirective.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"classes/CustomValidators.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"modules/MainPageModule.html":{},"modules/MainPageRoutingModule.html":{},"modules/MaterialModule.html":{},"interfaces/MusicalBand.html":{},"modules/MusicalBandsModule.html":{},"injectables/MusicalBandsService.html":{},"modules/ProfilesModule.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{},"interfaces/User.html":{},"interfaces/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"injectables/UserProfilesService.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{},"directives/WaitCursorDirective.html":{}}}],["import('src/app/modules/auth/auth.module').then(m",{"_index":269,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('src/app/modules/main",{"_index":264,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('src/app/modules/musical",{"_index":276,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('src/app/modules/users/users.module').then(m",{"_index":274,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["importam",{"_index":1393,"title":{},"body":{"modules/MaterialModule.html":{}}}],["importate",{"_index":1418,"title":{},"body":{"modules/MaterialModule.html":{}}}],["imports",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/MainPageModule.html":{},"modules/MainPageRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/MusicalBandsModule.html":{},"modules/ProfilesModule.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{}}}],["inchide",{"_index":1503,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["inchidem",{"_index":1620,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["incomplete",{"_index":799,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/BandFormComponent.html":{},"interfaces/BandFormData.html":{},"interfaces/BandHQ.html":{},"components/BandInfoComponent.html":{},"interfaces/BandMembersSurvey.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/BandUserMatch.html":{},"interfaces/CanDeactivateComponent.html":{},"guards/CanDeactivateGuard.html":{},"directives/ChangeBorderOnClickDirective.html":{},"interfaces/ChangePassword.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"classes/CustomValidators.html":{},"interfaces/Invitation.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"interfaces/MusicalBand.html":{},"injectables/MusicalBandsService.html":{},"interfaces/RegisterUser.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{},"interfaces/User.html":{},"interfaces/UserAddress.html":{},"interfaces/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{},"directives/WaitCursorDirective.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BandFormComponent.html":{},"interfaces/BandFormData.html":{},"interfaces/BandHQ.html":{},"components/BandInfoComponent.html":{},"interfaces/BandMembersSurvey.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/BandUserMatch.html":{},"interfaces/CanDeactivateComponent.html":{},"guards/CanDeactivateGuard.html":{},"directives/ChangeBorderOnClickDirective.html":{},"interfaces/ChangePassword.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"classes/CustomValidators.html":{},"interfaces/Invitation.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"modules/MainPageModule.html":{},"modules/MainPageRoutingModule.html":{},"modules/MaterialModule.html":{},"interfaces/MusicalBand.html":{},"modules/MusicalBandsModule.html":{},"injectables/MusicalBandsService.html":{},"modules/ProfilesModule.html":{},"interfaces/RegisterUser.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{},"interfaces/User.html":{},"interfaces/UserAddress.html":{},"interfaces/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"injectables/UserProfilesService.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{},"directives/WaitCursorDirective.html":{}}}],["info'},{'name",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["info.component",{"_index":1434,"title":{},"body":{"modules/MusicalBandsModule.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{}}}],["info.component.html",{"_index":720,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["info.component.scss",{"_index":719,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["info.component.ts",{"_index":716,"title":{},"body":{"components/BandInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:102",{"_index":746,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["info.component.ts:19",{"_index":749,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["info.component.ts:20",{"_index":747,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["info.component.ts:21",{"_index":748,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["info.component.ts:22",{"_index":751,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["info.component.ts:24",{"_index":752,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["info.component.ts:25",{"_index":750,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["info.component.ts:26",{"_index":735,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["info.component.ts:38",{"_index":742,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["info.component.ts:48",{"_index":741,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["info.component.ts:53",{"_index":739,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["info.component.ts:68",{"_index":737,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["info.component.ts:88",{"_index":744,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["info/account",{"_index":1674,"title":{},"body":{"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"coverage.html":{}}}],["info/band",{"_index":715,"title":{},"body":{"components/BandInfoComponent.html":{},"modules/MusicalBandsModule.html":{},"modules/UsersRoutingModule.html":{},"coverage.html":{}}}],["information",{"_index":800,"title":{},"body":{"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{}}}],["ingenious",{"_index":940,"title":{},"body":{"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["inject",{"_index":610,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"components/UserProfileFormComponent.html":{}}}],["inject(mat_dialog_data",{"_index":618,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"components/UserProfileFormComponent.html":{}}}],["injectable",{"_index":292,"title":{"injectables/AuthService.html":{},"injectables/MusicalBandsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"interfaces/CanDeactivateComponent.html":{},"guards/CanDeactivateGuard.html":{},"injectables/MusicalBandsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MusicalBandsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["input",{"_index":690,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandMembersSurveyComponent.html":{},"directives/ChangeBorderOnClickDirective.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["inputs",{"_index":1085,"title":{},"body":{"directives/ChangeBorderOnClickDirective.html":{},"components/UserProfileComponent.html":{}}}],["instanceof",{"_index":367,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["instrument",{"_index":1016,"title":{},"body":{"components/BandMembersSurveyComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["intercept",{"_index":307,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["intercept(req",{"_index":310,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["interceptor",{"_index":301,"title":{"interceptors/AuthInterceptorService.html":{}},"body":{"coverage.html":{}}}],["interceptor.service",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["interceptor.service.ts",{"_index":304,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"coverage.html":{}}}],["interceptor.service.ts:11",{"_index":309,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["interceptor.service.ts:14",{"_index":319,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["interceptor.service.ts:16",{"_index":322,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["interceptor.service.ts:19",{"_index":314,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["interceptor.service.ts:74",{"_index":318,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["interceptors",{"_index":302,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["interface",{"_index":706,"title":{"interfaces/BandFormData.html":{},"interfaces/BandHQ.html":{},"interfaces/BandMembersSurvey.html":{},"interfaces/BandUserMatch.html":{},"interfaces/CanDeactivateComponent.html":{},"interfaces/ChangePassword.html":{},"interfaces/Invitation.html":{},"interfaces/MusicalBand.html":{},"interfaces/RegisterUser.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{},"interfaces/User.html":{},"interfaces/UserAddress.html":{},"interfaces/UserProfile.html":{}},"body":{"interfaces/BandFormData.html":{},"interfaces/BandHQ.html":{},"interfaces/BandMembersSurvey.html":{},"interfaces/BandUserMatch.html":{},"interfaces/CanDeactivateComponent.html":{},"guards/CanDeactivateGuard.html":{},"interfaces/ChangePassword.html":{},"interfaces/Invitation.html":{},"interfaces/MusicalBand.html":{},"interfaces/RegisterUser.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{},"interfaces/User.html":{},"interfaces/UserAddress.html":{},"interfaces/UserProfile.html":{},"coverage.html":{}}}],["interfaces",{"_index":707,"title":{},"body":{"interfaces/BandFormData.html":{},"interfaces/BandHQ.html":{},"interfaces/BandMembersSurvey.html":{},"interfaces/BandUserMatch.html":{},"interfaces/CanDeactivateComponent.html":{},"interfaces/ChangePassword.html":{},"interfaces/Invitation.html":{},"interfaces/MusicalBand.html":{},"interfaces/RegisterUser.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{},"interfaces/User.html":{},"interfaces/UserAddress.html":{},"interfaces/UserProfile.html":{},"overview.html":{}}}],["invalidpassword",{"_index":1186,"title":{},"body":{"classes/CustomValidators.html":{}}}],["invitation",{"_index":999,"title":{"interfaces/Invitation.html":{}},"body":{"components/BandMembersSurveyComponent.html":{},"interfaces/Invitation.html":{},"injectables/UserProfilesService.html":{},"coverage.html":{}}}],["invitations",{"_index":1524,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["inviteduserid",{"_index":1205,"title":{},"body":{"interfaces/Invitation.html":{}}}],["isauthorized",{"_index":295,"title":{},"body":{"guards/AuthGuard.html":{}}}],["iscomplete",{"_index":567,"title":{},"body":{"components/BandFormComponent.html":{},"interfaces/BandFormData.html":{},"interfaces/MusicalBand.html":{}}}],["isrefreshing",{"_index":305,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["it's",{"_index":404,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["items",{"_index":672,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["itself",{"_index":400,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["jan",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["join",{"_index":1000,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["joined",{"_index":1027,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["journey",{"_index":348,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["justify",{"_index":875,"title":{},"body":{"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{}}}],["karma",{"_index":1810,"title":{},"body":{"index.html":{}}}],["la",{"_index":1396,"title":{},"body":{"modules/MaterialModule.html":{}}}],["last",{"_index":1528,"title":{},"body":{"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["lastname",{"_index":1486,"title":{},"body":{"interfaces/UserProfile.html":{},"components/UserProfileFormComponent.html":{}}}],["lavender",{"_index":1335,"title":{},"body":{"components/LoginComponent.html":{}}}],["left",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["legend",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"modules/MainPageModule.html":{},"modules/MaterialModule.html":{},"modules/MusicalBandsModule.html":{},"modules/ProfilesModule.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["letter",{"_index":1345,"title":{},"body":{"components/LoginComponent.html":{}}}],["letters",{"_index":1295,"title":{},"body":{"components/LoginComponent.html":{}}}],["level",{"_index":941,"title":{},"body":{"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["li",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/BandInfoComponent.html":{},"components/UserProfileComponent.html":{}}}],["lightblue",{"_index":1318,"title":{},"body":{"components/LoginComponent.html":{},"components/UserProfileComponent.html":{}}}],["lightcyan",{"_index":840,"title":{},"body":{"components/BandInfoComponent.html":{},"components/LoginComponent.html":{}}}],["lightgray",{"_index":1326,"title":{},"body":{"components/LoginComponent.html":{}}}],["line",{"_index":1358,"title":{},"body":{"components/LoginComponent.html":{}}}],["link",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["link:hover",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["list",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/BandInfoComponent.html":{},"components/UserProfileComponent.html":{}}}],["literal",{"_index":928,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["loadchildren",{"_index":263,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["localstorage.getitem('new",{"_index":1235,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.getitem('user",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{}}}],["localstorage.removeitem('new",{"_index":1283,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.removeitem('user",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(\"user",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["localstorage.setitem('user",{"_index":1284,"title":{},"body":{"components/LoginComponent.html":{}}}],["location",{"_index":805,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["locked",{"_index":386,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["lockoutend",{"_index":379,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["log",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["loggedin",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["loggedinsubject",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":398,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["login.component.html",{"_index":1208,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1207,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":459,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["logincomponent",{"_index":199,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":1211,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginuser",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginuser(username",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptorService.html":{}}}],["logout').subscribe",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{}}}],["logoutuser",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{}}}],["long",{"_index":1307,"title":{},"body":{"components/LoginComponent.html":{}}}],["longdate",{"_index":804,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["looking",{"_index":1012,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["lowercase",{"_index":815,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["m.authmodule",{"_index":270,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.mainpagemodule",{"_index":267,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.musicalbandsmodule",{"_index":279,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.usersmodule",{"_index":275,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m2",{"_index":810,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["mai",{"_index":1502,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["main",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"modules/MainPageModule.html":{},"modules/MainPageRoutingModule.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["mainpagecomponent",{"_index":201,"title":{"components/MainPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"modules/MainPageModule.html":{},"modules/MainPageRoutingModule.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mainpagemodule",{"_index":1379,"title":{"modules/MainPageModule.html":{}},"body":{"modules/MainPageModule.html":{},"modules.html":{},"overview.html":{}}}],["mainpageroutingmodule",{"_index":1383,"title":{"modules/MainPageRoutingModule.html":{}},"body":{"modules/MainPageModule.html":{},"modules/MainPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["map",{"_index":1172,"title":{},"body":{"classes/CustomValidators.html":{}}}],["map(response",{"_index":1189,"title":{},"body":{"classes/CustomValidators.html":{}}}],["margin",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["mat",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["mat_dialog_data",{"_index":613,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"components/UserProfileFormComponent.html":{}}}],["matbuttonmodule",{"_index":1405,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodule",{"_index":1407,"title":{},"body":{"modules/MaterialModule.html":{}}}],["match",{"_index":966,"title":{},"body":{"components/BandMembersSurveyComponent.html":{},"injectables/MusicalBandsService.html":{},"interfaces/UserProfile.html":{},"injectables/UserProfilesService.html":{}}}],["match.ts",{"_index":1069,"title":{},"body":{"interfaces/BandUserMatch.html":{},"coverage.html":{}}}],["matcheduserid",{"_index":904,"title":{},"body":{"interfaces/BandMembersSurvey.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{}}}],["matcheduserprofile",{"_index":905,"title":{},"body":{"interfaces/BandMembersSurvey.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{}}}],["matchedusers",{"_index":910,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["matchedusers.length",{"_index":981,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["matches",{"_index":1020,"title":{},"body":{"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{},"injectables/MusicalBandsService.html":{}}}],["matching",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BandFormComponent.html":{},"interfaces/BandFormData.html":{},"interfaces/BandHQ.html":{},"components/BandInfoComponent.html":{},"interfaces/BandMembersSurvey.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/BandUserMatch.html":{},"interfaces/CanDeactivateComponent.html":{},"guards/CanDeactivateGuard.html":{},"directives/ChangeBorderOnClickDirective.html":{},"interfaces/ChangePassword.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"classes/CustomValidators.html":{},"interfaces/Invitation.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"modules/MainPageModule.html":{},"modules/MainPageRoutingModule.html":{},"modules/MaterialModule.html":{},"interfaces/MusicalBand.html":{},"modules/MusicalBandsModule.html":{},"injectables/MusicalBandsService.html":{},"modules/ProfilesModule.html":{},"interfaces/RegisterUser.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{},"interfaces/User.html":{},"interfaces/UserAddress.html":{},"interfaces/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"injectables/UserProfilesService.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{},"directives/WaitCursorDirective.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchtype",{"_index":906,"title":{},"body":{"interfaces/BandMembersSurvey.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/BandUserMatch.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{}}}],["matchvalidator",{"_index":1156,"title":{},"body":{"classes/CustomValidators.html":{}}}],["matchvalidator(source",{"_index":1164,"title":{},"body":{"classes/CustomValidators.html":{}}}],["matdialog",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/BandInfoComponent.html":{},"components/UserProfileComponent.html":{}}}],["matdialogconfig",{"_index":754,"title":{},"body":{"components/BandInfoComponent.html":{},"components/UserProfileComponent.html":{}}}],["matdialogmodule",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["matdialogref",{"_index":574,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"components/UserProfileFormComponent.html":{}}}],["material/material.module",{"_index":462,"title":{},"body":{"modules/AuthModule.html":{},"modules/MusicalBandsModule.html":{},"modules/ProfilesModule.html":{},"modules/UsersModule.html":{}}}],["materialele",{"_index":1394,"title":{},"body":{"modules/MaterialModule.html":{}}}],["materialmodule",{"_index":455,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/MaterialModule.html":{},"modules/MusicalBandsModule.html":{},"modules/ProfilesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["matformfield",{"_index":1248,"title":{},"body":{"components/LoginComponent.html":{}}}],["matformfieldmodule",{"_index":1402,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonmodule",{"_index":1411,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodule",{"_index":1403,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matselectmodule",{"_index":1409,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodule",{"_index":1413,"title":{},"body":{"modules/MaterialModule.html":{}}}],["max",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["maxage",{"_index":897,"title":{},"body":{"interfaces/BandMembersSurvey.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{}}}],["maximum",{"_index":666,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["maxwidth",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["means",{"_index":426,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["media",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["member",{"_index":771,"title":{},"body":{"components/BandInfoComponent.html":{},"components/UserProfileComponent.html":{}}}],["member.firstname",{"_index":811,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["member.lastname",{"_index":812,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["member.playedinstrument",{"_index":814,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["member.username",{"_index":773,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["members",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"interfaces/BandFormData.html":{},"components/BandInfoComponent.html":{},"interfaces/BandMembersSurvey.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"interfaces/MusicalBand.html":{},"modules/MusicalBandsModule.html":{},"injectables/MusicalBandsService.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"injectables/UserProfilesService.html":{},"coverage.html":{}}}],["memberusername",{"_index":745,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["message",{"_index":1120,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"components/LoginComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"directives/ChangeBorderOnClickDirective.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"directives/WaitCursorDirective.html":{}}}],["meters",{"_index":662,"title":{},"body":{"components/BandFormComponent.html":{}}}],["methods",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"guards/CanDeactivateGuard.html":{},"directives/ChangeBorderOnClickDirective.html":{},"components/ConfirmationDialogComponent.html":{},"classes/CustomValidators.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"injectables/MusicalBandsService.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{},"directives/WaitCursorDirective.html":{}}}],["min",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{}}}],["minage",{"_index":898,"title":{},"body":{"interfaces/BandMembersSurvey.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{}}}],["minimum",{"_index":663,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["minwidth",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["miscellaneous",{"_index":1833,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mismatchedvalues",{"_index":1200,"title":{},"body":{"classes/CustomValidators.html":{}}}],["mmmm",{"_index":381,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["model",{"_index":1696,"title":{},"body":{"injectables/UsersService.html":{}}}],["modify",{"_index":346,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["modul",{"_index":1392,"title":{},"body":{"modules/MaterialModule.html":{}}}],["module",{"_index":219,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/MainPageModule.html":{},"modules/MainPageRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/MusicalBandsModule.html":{},"modules/ProfilesModule.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MainPageModule.html":{},"modules/MaterialModule.html":{},"modules/MusicalBandsModule.html":{},"modules/ProfilesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":221,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/MainPageModule.html":{},"modules/MainPageRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/MusicalBandsModule.html":{},"modules/ProfilesModule.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/material/confirmation",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["more",{"_index":1301,"title":{},"body":{"components/LoginComponent.html":{},"components/UserProfileFormComponent.html":{},"index.html":{}}}],["mousedown",{"_index":1089,"title":{},"body":{"directives/ChangeBorderOnClickDirective.html":{}}}],["mousedownborderstyle",{"_index":1087,"title":{},"body":{"directives/ChangeBorderOnClickDirective.html":{}}}],["mouseleave",{"_index":1090,"title":{},"body":{"directives/ChangeBorderOnClickDirective.html":{}}}],["mouseup",{"_index":1091,"title":{},"body":{"directives/ChangeBorderOnClickDirective.html":{}}}],["multi",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["music",{"_index":656,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["musical",{"_index":678,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"modules/MusicalBandsModule.html":{},"components/UserProfileComponent.html":{},"modules/UsersRoutingModule.html":{}}}],["musicalband",{"_index":582,"title":{"interfaces/MusicalBand.html":{}},"body":{"components/BandFormComponent.html":{},"interfaces/BandFormData.html":{},"components/BandInfoComponent.html":{},"interfaces/MusicalBand.html":{},"injectables/MusicalBandsService.html":{},"coverage.html":{}}}],["musicalband.dateformed",{"_index":803,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["musicalband.hq.city",{"_index":807,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["musicalband.hq.country",{"_index":806,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["musicalband.hq.squaremeters",{"_index":809,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["musicalband.hq.street",{"_index":808,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["musicalband.musicgenre",{"_index":801,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["musicalband.name",{"_index":798,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["musicalbandsmodule",{"_index":1428,"title":{"modules/MusicalBandsModule.html":{}},"body":{"modules/MusicalBandsModule.html":{},"modules.html":{},"overview.html":{}}}],["musicalbandsroutingmodule",{"_index":1436,"title":{},"body":{"modules/MusicalBandsModule.html":{}}}],["musicalbandsservice",{"_index":576,"title":{"injectables/MusicalBandsService.html":{}},"body":{"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"injectables/MusicalBandsService.html":{},"coverage.html":{}}}],["musicgenre",{"_index":566,"title":{},"body":{"components/BandFormComponent.html":{},"interfaces/BandFormData.html":{},"interfaces/MusicalBand.html":{}}}],["mutation.oldvalue",{"_index":1728,"title":{},"body":{"directives/WaitCursorDirective.html":{}}}],["mutation.target",{"_index":1723,"title":{},"body":{"directives/WaitCursorDirective.html":{}}}],["mutationobserver(mutations",{"_index":1721,"title":{},"body":{"directives/WaitCursorDirective.html":{}}}],["mutations.foreach(mutation",{"_index":1722,"title":{},"body":{"directives/WaitCursorDirective.html":{}}}],["name",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/BandFormComponent.html":{},"interfaces/BandFormData.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"guards/CanDeactivateGuard.html":{},"directives/ChangeBorderOnClickDirective.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"classes/CustomValidators.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"interfaces/MusicalBand.html":{},"injectables/MusicalBandsService.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{},"directives/WaitCursorDirective.html":{},"index.html":{}}}],["name:hover",{"_index":1064,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["nameobserver",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{}}}],["namesub",{"_index":722,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["namesubscriber",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{}}}],["nativeelement",{"_index":1081,"title":{},"body":{"directives/ChangeBorderOnClickDirective.html":{}}}],["nav",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["navbar",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["navigate",{"_index":1789,"title":{},"body":{"index.html":{}}}],["need",{"_index":1816,"title":{},"body":{"index.html":{}}}],["needs",{"_index":444,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{}}}],["new",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"injectables/UsersService.html":{},"directives/WaitCursorDirective.html":{},"coverage.html":{},"index.html":{}}}],["newbandid",{"_index":645,"title":{},"body":{"components/BandFormComponent.html":{},"components/UserProfileComponent.html":{}}}],["newbandname",{"_index":1519,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["newemail",{"_index":1692,"title":{},"body":{"injectables/UsersService.html":{}}}],["newmatch",{"_index":989,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["newmatches",{"_index":988,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["newmatches.push(newmatch",{"_index":993,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["newpassword",{"_index":1112,"title":{},"body":{"interfaces/ChangePassword.html":{}}}],["newuser",{"_index":1212,"title":{},"body":{"components/LoginComponent.html":{}}}],["newusername",{"_index":1698,"title":{},"body":{"injectables/UsersService.html":{}}}],["newvalues",{"_index":1513,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["next",{"_index":312,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/BandInfoComponent.html":{},"components/LoginComponent.html":{}}}],["next.handle(req",{"_index":434,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["next.handle(req).pipe(catcherror((error",{"_index":360,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["ng",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["ngmodule",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/MainPageModule.html":{},"modules/MainPageRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/MusicalBandsModule.html":{},"modules/ProfilesModule.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{}}}],["ngondestroy",{"_index":727,"title":{},"body":{"components/BandInfoComponent.html":{},"components/LoginComponent.html":{},"directives/WaitCursorDirective.html":{}}}],["ngoninit",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"directives/WaitCursorDirective.html":{}}}],["nomatch",{"_index":1047,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["non",{"_index":425,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["none",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["nonexistentusernames",{"_index":1213,"title":{},"body":{"components/LoginComponent.html":{}}}],["normal",{"_index":1368,"title":{},"body":{"components/LoginComponent.html":{}}}],["nowrap",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["nu",{"_index":1500,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["null",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptorService.html":{},"classes/CustomValidators.html":{},"components/LoginComponent.html":{}}}],["number",{"_index":665,"title":{},"body":{"components/BandFormComponent.html":{},"interfaces/BandHQ.html":{},"interfaces/BandMembersSurvey.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{},"interfaces/UserAddress.html":{},"interfaces/UserProfile.html":{},"components/UserProfileFormComponent.html":{}}}],["numbers",{"_index":1296,"title":{},"body":{"components/LoginComponent.html":{}}}],["object",{"_index":1837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":316,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"interfaces/CanDeactivateComponent.html":{},"guards/CanDeactivateGuard.html":{},"classes/CustomValidators.html":{},"injectables/MusicalBandsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["observant",{"_index":943,"title":{},"body":{"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["observer",{"_index":1713,"title":{},"body":{"directives/WaitCursorDirective.html":{}}}],["occupation",{"_index":820,"title":{},"body":{"components/BandInfoComponent.html":{},"interfaces/BandMembersSurvey.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{},"interfaces/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["offset",{"_index":1330,"title":{},"body":{"components/LoginComponent.html":{}}}],["oldpassword",{"_index":1113,"title":{},"body":{"interfaces/ChangePassword.html":{}}}],["oldusername",{"_index":1700,"title":{},"body":{"injectables/UsersService.html":{}}}],["onaccept",{"_index":1121,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{}}}],["oncancel",{"_index":1122,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{}}}],["ondestroy",{"_index":718,"title":{},"body":{"components/BandInfoComponent.html":{},"components/LoginComponent.html":{},"directives/WaitCursorDirective.html":{}}}],["onformmousedown",{"_index":1214,"title":{},"body":{"components/LoginComponent.html":{}}}],["oninit",{"_index":717,"title":{},"body":{"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"directives/WaitCursorDirective.html":{}}}],["onunload",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["onusernamechange",{"_index":1217,"title":{},"body":{"components/LoginComponent.html":{}}}],["optional",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/BandFormComponent.html":{},"interfaces/BandFormData.html":{},"interfaces/BandHQ.html":{},"components/BandInfoComponent.html":{},"interfaces/BandMembersSurvey.html":{},"components/BandMembersSurveyComponent.html":{},"guards/CanDeactivateGuard.html":{},"directives/ChangeBorderOnClickDirective.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"classes/CustomValidators.html":{},"components/LoginComponent.html":{},"interfaces/MusicalBand.html":{},"injectables/MusicalBandsService.html":{},"interfaces/User.html":{},"interfaces/UserAddress.html":{},"interfaces/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{},"directives/WaitCursorDirective.html":{}}}],["organized",{"_index":944,"title":{},"body":{"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["out",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MainPageModule.html":{},"modules/MaterialModule.html":{},"modules/MusicalBandsModule.html":{},"modules/ProfilesModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["outset",{"_index":1049,"title":{},"body":{"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{}}}],["overflow",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/BandInfoComponent.html":{},"components/UserProfileComponent.html":{}}}],["overview",{"_index":1822,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":878,"title":{},"body":{"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/UserProfileComponent.html":{}}}],["p:first",{"_index":1033,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["p:nth",{"_index":1035,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["package",{"_index":1764,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["page",{"_index":414,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"components/MainPageComponent.html":{},"modules/MainPageModule.html":{},"modules/MainPageRoutingModule.html":{},"index.html":{}}}],["page'},{'name",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["page.component",{"_index":1385,"title":{},"body":{"modules/MainPageModule.html":{},"modules/MainPageRoutingModule.html":{}}}],["page.component.html",{"_index":1376,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.scss",{"_index":1375,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts",{"_index":1374,"title":{},"body":{"components/MainPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:12",{"_index":1378,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts:8",{"_index":1377,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.module').then(m",{"_index":266,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["page.module.ts",{"_index":1384,"title":{},"body":{"modules/MainPageModule.html":{}}}],["page/main",{"_index":265,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MainPageComponent.html":{},"modules/MainPageModule.html":{},"modules/MainPageRoutingModule.html":{},"coverage.html":{}}}],["paleturquoise",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/BandInfoComponent.html":{}}}],["parameters",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"guards/CanDeactivateGuard.html":{},"directives/ChangeBorderOnClickDirective.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"classes/CustomValidators.html":{},"components/LoginComponent.html":{},"injectables/MusicalBandsService.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{},"directives/WaitCursorDirective.html":{}}}],["password",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/RegisterUser.html":{}}}],["passwordvalidator",{"_index":1157,"title":{},"body":{"classes/CustomValidators.html":{}}}],["path",{"_index":262,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"modules/MainPageRoutingModule.html":{},"modules/UsersRoutingModule.html":{}}}],["pathmatch",{"_index":468,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/UsersRoutingModule.html":{}}}],["pending",{"_index":342,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["phone",{"_index":825,"title":{},"body":{"components/BandInfoComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["phonenumber",{"_index":1487,"title":{},"body":{"interfaces/UserProfile.html":{},"components/UserProfileFormComponent.html":{}}}],["photo",{"_index":1553,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["picture",{"_index":1551,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["placeholder",{"_index":1554,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["platform",{"_index":1813,"title":{},"body":{"index.html":{}}}],["played",{"_index":1017,"title":{},"body":{"components/BandMembersSurveyComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["playedinstrument",{"_index":899,"title":{},"body":{"interfaces/BandMembersSurvey.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{},"interfaces/UserProfile.html":{},"components/UserProfileFormComponent.html":{}}}],["playing",{"_index":813,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["please",{"_index":1291,"title":{},"body":{"components/LoginComponent.html":{}}}],["pointer",{"_index":865,"title":{},"body":{"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{},"directives/WaitCursorDirective.html":{}}}],["position",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["powderblue",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["preferred",{"_index":827,"title":{},"body":{"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["preferredmusicgenre",{"_index":900,"title":{},"body":{"interfaces/BandMembersSurvey.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{},"interfaces/UserProfile.html":{},"components/UserProfileFormComponent.html":{}}}],["private",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"directives/ChangeBorderOnClickDirective.html":{},"components/LoginComponent.html":{},"components/UserProfileFormComponent.html":{},"injectables/UsersService.html":{},"directives/WaitCursorDirective.html":{}}}],["production",{"_index":1838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"interfaces/BandFormData.html":{},"components/BandInfoComponent.html":{},"interfaces/BandMembersSurvey.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"interfaces/MusicalBand.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"injectables/UserProfilesService.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["profile'},{'name",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["profile.component",{"_index":1476,"title":{},"body":{"modules/ProfilesModule.html":{}}}],["profile.component.html",{"_index":1491,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.scss",{"_index":1490,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts",{"_index":1489,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:14",{"_index":1495,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:19",{"_index":1494,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:23",{"_index":1497,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:38",{"_index":1496,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.email",{"_index":1006,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["profile.ts",{"_index":1482,"title":{},"body":{"interfaces/UserProfile.html":{},"coverage.html":{}}}],["profile.username",{"_index":1005,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["profiles.module",{"_index":1675,"title":{},"body":{"modules/UsersModule.html":{}}}],["profiles.service",{"_index":759,"title":{},"body":{"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["profiles.service.ts",{"_index":1640,"title":{},"body":{"injectables/UserProfilesService.html":{},"coverage.html":{}}}],["profiles.service.ts:14",{"_index":1646,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["profiles.service.ts:18",{"_index":1650,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["profiles.service.ts:22",{"_index":1654,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["profiles.service.ts:26",{"_index":1652,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["profiles.service.ts:34",{"_index":1656,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["profiles.service.ts:38",{"_index":1658,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["profiles.service.ts:42",{"_index":1648,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["profiles/user",{"_index":1475,"title":{},"body":{"modules/ProfilesModule.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profilesmodule",{"_index":1432,"title":{"modules/ProfilesModule.html":{}},"body":{"modules/MusicalBandsModule.html":{},"modules/ProfilesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["profilesservice",{"_index":733,"title":{},"body":{"components/BandInfoComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["programului",{"_index":1401,"title":{},"body":{"modules/MaterialModule.html":{}}}],["progress",{"_index":423,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["project",{"_index":1780,"title":{},"body":{"index.html":{}}}],["prompt",{"_index":1257,"title":{},"body":{"components/LoginComponent.html":{}}}],["prompt>h3",{"_index":1342,"title":{},"body":{"components/LoginComponent.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/BandFormComponent.html":{},"interfaces/BandFormData.html":{},"interfaces/BandHQ.html":{},"components/BandInfoComponent.html":{},"interfaces/BandMembersSurvey.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/BandUserMatch.html":{},"interfaces/CanDeactivateComponent.html":{},"directives/ChangeBorderOnClickDirective.html":{},"interfaces/ChangePassword.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"interfaces/Invitation.html":{},"components/LoginComponent.html":{},"interfaces/MusicalBand.html":{},"injectables/MusicalBandsService.html":{},"interfaces/RegisterUser.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{},"interfaces/User.html":{},"interfaces/UserAddress.html":{},"interfaces/UserProfile.html":{},"components/UserProfileFormComponent.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{},"directives/WaitCursorDirective.html":{},"properties.html":{}}}],["provide",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":293,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"interfaces/CanDeactivateComponent.html":{},"guards/CanDeactivateGuard.html":{},"injectables/MusicalBandsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["providers",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/MainPageModule.html":{},"modules/MaterialModule.html":{},"modules/MusicalBandsModule.html":{},"modules/ProfilesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["pt",{"_index":1422,"title":{},"body":{"modules/MaterialModule.html":{}}}],["public",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"components/LoginComponent.html":{},"injectables/MusicalBandsService.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["putea",{"_index":1423,"title":{},"body":{"modules/MaterialModule.html":{}}}],["querylist",{"_index":1224,"title":{},"body":{"components/LoginComponent.html":{}}}],["question",{"_index":684,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandMembersSurveyComponent.html":{}}}],["radio",{"_index":687,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["radius",{"_index":855,"title":{},"body":{"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{}}}],["reactiveformsmodule",{"_index":460,"title":{},"body":{"modules/AuthModule.html":{},"modules/MusicalBandsModule.html":{},"modules/UsersModule.html":{}}}],["ready",{"_index":427,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["red",{"_index":683,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["redirect",{"_index":413,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"components/LoginComponent.html":{}}}],["redirect>#redirect",{"_index":1351,"title":{},"body":{"components/LoginComponent.html":{}}}],["redirectto",{"_index":470,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/UsersRoutingModule.html":{}}}],["reference",{"_index":1823,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":341,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["refreshauthtoken",{"_index":308,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["refreshauthtoken(req",{"_index":317,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["refreshed",{"_index":445,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["refreshing",{"_index":399,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["refreshtoken",{"_index":441,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{}}}],["refreshtokensubject",{"_index":306,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["regex",{"_index":1177,"title":{},"body":{"classes/CustomValidators.html":{}}}],["regex.test(control.value",{"_index":1185,"title":{},"body":{"classes/CustomValidators.html":{}}}],["regexp",{"_index":1160,"title":{},"body":{"classes/CustomValidators.html":{}}}],["register'},{'name",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["registernewuser",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["registernewuser(user",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["registeruser",{"_index":503,"title":{"interfaces/RegisterUser.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/RegisterUser.html":{},"coverage.html":{}}}],["reload",{"_index":1792,"title":{},"body":{"index.html":{}}}],["remove",{"_index":636,"title":{},"body":{"components/BandFormComponent.html":{}}}],["req",{"_index":315,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["req.body.username",{"_index":385,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["req.clone",{"_index":351,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["req.url.includes('/authentication",{"_index":353,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["req.url.includes('/login",{"_index":407,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["req.url.includes('/refreshtoken",{"_index":406,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["req.url.includes('/registeruser",{"_index":408,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["req.url.includes('/users/change",{"_index":418,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["request",{"_index":429,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["requests",{"_index":397,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["required",{"_index":655,"title":{},"body":{"components/BandFormComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["reset",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MainPageModule.html":{},"modules/MaterialModule.html":{},"modules/MusicalBandsModule.html":{},"modules/ProfilesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resizeobserver",{"_index":1215,"title":{},"body":{"components/LoginComponent.html":{}}}],["response",{"_index":1517,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["response.usernameexists",{"_index":1190,"title":{},"body":{"classes/CustomValidators.html":{}}}],["response[0",{"_index":1518,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["response[1",{"_index":1520,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["responsetype",{"_index":1710,"title":{},"body":{"injectables/UsersService.html":{}}}],["restul",{"_index":1426,"title":{},"body":{"modules/MaterialModule.html":{}}}],["result",{"_index":433,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["results",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BandFormComponent.html":{},"interfaces/BandFormData.html":{},"interfaces/BandHQ.html":{},"components/BandInfoComponent.html":{},"interfaces/BandMembersSurvey.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/BandUserMatch.html":{},"interfaces/CanDeactivateComponent.html":{},"guards/CanDeactivateGuard.html":{},"directives/ChangeBorderOnClickDirective.html":{},"interfaces/ChangePassword.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"classes/CustomValidators.html":{},"interfaces/Invitation.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"modules/MainPageModule.html":{},"modules/MainPageRoutingModule.html":{},"modules/MaterialModule.html":{},"interfaces/MusicalBand.html":{},"modules/MusicalBandsModule.html":{},"injectables/MusicalBandsService.html":{},"modules/ProfilesModule.html":{},"interfaces/RegisterUser.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{},"interfaces/User.html":{},"interfaces/UserAddress.html":{},"interfaces/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"injectables/UserProfilesService.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{},"directives/WaitCursorDirective.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retake",{"_index":1029,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["retakesurvey",{"_index":914,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["retrieved",{"_index":438,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["retry",{"_index":428,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["return",{"_index":300,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/BandFormComponent.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/CanDeactivateComponent.html":{},"guards/CanDeactivateGuard.html":{},"classes/CustomValidators.html":{},"components/LoginComponent.html":{},"injectables/MusicalBandsService.html":{},"components/UserProfileFormComponent.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"guards/CanDeactivateGuard.html":{},"directives/ChangeBorderOnClickDirective.html":{},"components/ConfirmationDialogComponent.html":{},"classes/CustomValidators.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"injectables/MusicalBandsService.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{},"directives/WaitCursorDirective.html":{}}}],["rgb(100",{"_index":1548,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["rgb(102",{"_index":868,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["rgb(104",{"_index":842,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["rgb(148",{"_index":1061,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["rgb(161",{"_index":857,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["rgb(183",{"_index":861,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["rgb(191",{"_index":697,"title":{},"body":{"components/BandFormComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["rgb(193",{"_index":871,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["rgb(200",{"_index":1050,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["rgb(201",{"_index":1332,"title":{},"body":{"components/LoginComponent.html":{}}}],["rgb(206",{"_index":851,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["rgb(215",{"_index":1336,"title":{},"body":{"components/LoginComponent.html":{}}}],["rgb(217",{"_index":1058,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["rgb(222",{"_index":1564,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["rgb(236",{"_index":1056,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["rgb(239",{"_index":1053,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["rgb(241",{"_index":1327,"title":{},"body":{"components/LoginComponent.html":{}}}],["ridge",{"_index":854,"title":{},"body":{"components/BandInfoComponent.html":{},"components/LoginComponent.html":{}}}],["right",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{}}}],["role",{"_index":1478,"title":{},"body":{"interfaces/RegisterUser.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"interfaces/CanDeactivateComponent.html":{},"guards/CanDeactivateGuard.html":{},"injectables/MusicalBandsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["root'},{'name",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["route",{"_index":736,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["router",{"_index":732,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["routermodule",{"_index":257,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/MainPageRoutingModule.html":{},"modules/UsersRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":473,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/MainPageRoutingModule.html":{},"modules/UsersRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":280,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":288,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/CanDeactivateComponent.html":{},"guards/CanDeactivateGuard.html":{}}}],["routes",{"_index":258,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/MainPageRoutingModule.html":{},"modules/UsersRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MainPageModule.html":{},"modules/MusicalBandsModule.html":{},"modules/ProfilesModule.html":{},"modules/UsersModule.html":{}}}],["routing.module.ts",{"_index":256,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/MainPageRoutingModule.html":{},"modules/UsersRoutingModule.html":{}}}],["row",{"_index":1362,"title":{},"body":{"components/LoginComponent.html":{}}}],["rows",{"_index":1323,"title":{},"body":{"components/LoginComponent.html":{}}}],["royalblue",{"_index":1142,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"components/UserProfileComponent.html":{}}}],["run",{"_index":1786,"title":{},"body":{"index.html":{}}}],["running",{"_index":1804,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":329,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"interfaces/CanDeactivateComponent.html":{},"guards/CanDeactivateGuard.html":{},"classes/CustomValidators.html":{},"dependencies.html":{}}}],["rxjs/internal/behaviorsubject",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{}}}],["rxjs/internal/observable",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{},"classes/CustomValidators.html":{},"injectables/MusicalBandsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["rxjs/internal/subscription",{"_index":753,"title":{},"body":{"components/BandInfoComponent.html":{},"components/LoginComponent.html":{}}}],["rxjs/operators",{"_index":333,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"classes/CustomValidators.html":{}}}],["save",{"_index":669,"title":{},"body":{"components/BandFormComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["savebandusermatches",{"_index":1443,"title":{},"body":{"injectables/MusicalBandsService.html":{}}}],["savebandusermatches(matches",{"_index":1455,"title":{},"body":{"injectables/MusicalBandsService.html":{}}}],["saveformdata",{"_index":564,"title":{},"body":{"components/BandFormComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["scaffolding",{"_index":1795,"title":{},"body":{"index.html":{}}}],["screen",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["se",{"_index":1501,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["search",{"_index":1015,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["section",{"_index":1317,"title":{},"body":{"components/LoginComponent.html":{}}}],["section')?.classlist.add('login",{"_index":1256,"title":{},"body":{"components/LoginComponent.html":{}}}],["see",{"_index":411,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["seememberprofile",{"_index":728,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["seememberprofile(memberusername",{"_index":743,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["seeuserprofile",{"_index":915,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["seeuserprofile(profile",{"_index":922,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"directives/ChangeBorderOnClickDirective.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"directives/WaitCursorDirective.html":{}}}],["send",{"_index":1024,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["sendinvitation",{"_index":916,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["sendinvitation(surveymatch",{"_index":924,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["sent",{"_index":1025,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["serve",{"_index":1787,"title":{},"body":{"index.html":{}}}],["server",{"_index":373,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"index.html":{}}}],["service/auth",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptorService.html":{},"coverage.html":{}}}],["service/auth.service",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/BandInfoComponent.html":{},"classes/CustomValidators.html":{},"components/LoginComponent.html":{}}}],["service/auth.service.ts",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["service/auth.service.ts:11",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{}}}],["service/auth.service.ts:14",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["service/auth.service.ts:16",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["service/auth.service.ts:20",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{}}}],["service/auth.service.ts:24",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["service/auth.service.ts:38",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["service/auth.service.ts:42",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["service/auth.service.ts:47",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{}}}],["service/auth.service.ts:48",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{}}}],["service/auth.service.ts:50",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["service/auth.service.ts:54",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{}}}],["service/auth.service.ts:55",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{}}}],["service/auth.service.ts:57",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{}}}],["service/auth.service.ts:62",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{}}}],["service/user",{"_index":758,"title":{},"body":{"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{},"injectables/UserProfilesService.html":{},"coverage.html":{}}}],["service/users.service.ts",{"_index":1681,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["service/users.service.ts:11",{"_index":1687,"title":{},"body":{"injectables/UsersService.html":{}}}],["service/users.service.ts:15",{"_index":1688,"title":{},"body":{"injectables/UsersService.html":{}}}],["service/users.service.ts:19",{"_index":1690,"title":{},"body":{"injectables/UsersService.html":{}}}],["service/users.service.ts:23",{"_index":1699,"title":{},"body":{"injectables/UsersService.html":{}}}],["service/users.service.ts:28",{"_index":1693,"title":{},"body":{"injectables/UsersService.html":{}}}],["service/users.service.ts:33",{"_index":1695,"title":{},"body":{"injectables/UsersService.html":{}}}],["services/auth",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["services/musical",{"_index":616,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"injectables/MusicalBandsService.html":{},"coverage.html":{}}}],["set",{"_index":435,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["setloggedintotrue",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{}}}],["shadow",{"_index":885,"title":{},"body":{"components/BandInfoComponent.html":{},"components/UserProfileComponent.html":{}}}],["shownprofile",{"_index":723,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["shownprofile.address?.city",{"_index":834,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["shownprofile.address?.country",{"_index":833,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["shownprofile.address?.street",{"_index":835,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["shownprofile.age",{"_index":819,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["shownprofile.email",{"_index":824,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["shownprofile.occupation",{"_index":821,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["shownprofile.phonenumber",{"_index":826,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["shownprofile.preferredmusicgenre",{"_index":828,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["shownprofile.trait1",{"_index":830,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["shownprofile.trait2",{"_index":831,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["shownprofile.username",{"_index":817,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["shownusers",{"_index":911,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["showpassword",{"_index":1216,"title":{},"body":{"components/LoginComponent.html":{}}}],["shrink",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["shrinking",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["si",{"_index":1420,"title":{},"body":{"modules/MaterialModule.html":{}}}],["sign",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["signed",{"_index":1310,"title":{},"body":{"components/LoginComponent.html":{}}}],["signup",{"_index":471,"title":{},"body":{"modules/AuthRoutingModule.html":{},"components/LoginComponent.html":{}}}],["signup/signup.component",{"_index":458,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["signupcomponent",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sing",{"_index":1031,"title":{},"body":{"components/BandMembersSurveyComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["singer",{"_index":816,"title":{},"body":{"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{}}}],["size",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["sizing",{"_index":1544,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["skip",{"_index":422,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["skyblue",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["solid",{"_index":867,"title":{},"body":{"components/BandInfoComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BandFormComponent.html":{},"interfaces/BandFormData.html":{},"interfaces/BandHQ.html":{},"components/BandInfoComponent.html":{},"interfaces/BandMembersSurvey.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/BandUserMatch.html":{},"interfaces/CanDeactivateComponent.html":{},"guards/CanDeactivateGuard.html":{},"directives/ChangeBorderOnClickDirective.html":{},"interfaces/ChangePassword.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"classes/CustomValidators.html":{},"interfaces/Invitation.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"modules/MainPageModule.html":{},"modules/MainPageRoutingModule.html":{},"modules/MaterialModule.html":{},"interfaces/MusicalBand.html":{},"modules/MusicalBandsModule.html":{},"injectables/MusicalBandsService.html":{},"modules/ProfilesModule.html":{},"interfaces/RegisterUser.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{},"interfaces/User.html":{},"interfaces/UserAddress.html":{},"interfaces/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"injectables/UserProfilesService.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"injectables/UsersService.html":{},"directives/WaitCursorDirective.html":{},"index.html":{}}}],["sourcecontrol",{"_index":1193,"title":{},"body":{"classes/CustomValidators.html":{}}}],["sourcecontrol.value",{"_index":1197,"title":{},"body":{"classes/CustomValidators.html":{}}}],["space",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["spacing",{"_index":1346,"title":{},"body":{"components/LoginComponent.html":{}}}],["span",{"_index":689,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/UserProfileComponent.html":{}}}],["span:first",{"_index":703,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{}}}],["square",{"_index":661,"title":{},"body":{"components/BandFormComponent.html":{}}}],["squaremeters",{"_index":571,"title":{},"body":{"components/BandFormComponent.html":{},"interfaces/BandHQ.html":{}}}],["src/.../environment.prod.ts",{"_index":1835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":255,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:50",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth.guard.ts",{"_index":283,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth.guard.ts:10",{"_index":289,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth.guard.ts:7",{"_index":284,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/can",{"_index":465,"title":{},"body":{"modules/AuthRoutingModule.html":{},"interfaces/CanDeactivateComponent.html":{},"guards/CanDeactivateGuard.html":{},"coverage.html":{}}}],["src/app/change",{"_index":1078,"title":{},"body":{"directives/ChangeBorderOnClickDirective.html":{},"modules/MaterialModule.html":{},"coverage.html":{}}}],["src/app/interfaces/band",{"_index":894,"title":{},"body":{"interfaces/BandMembersSurvey.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/BandUserMatch.html":{},"injectables/MusicalBandsService.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{},"injectables/UserProfilesService.html":{},"coverage.html":{}}}],["src/app/interfaces/bandhq.ts",{"_index":714,"title":{},"body":{"interfaces/BandHQ.html":{},"coverage.html":{}}}],["src/app/interfaces/change_password",{"_index":1703,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/interfaces/change_password.ts",{"_index":1111,"title":{},"body":{"interfaces/ChangePassword.html":{},"coverage.html":{}}}],["src/app/interfaces/invitation",{"_index":1660,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["src/app/interfaces/invitation.ts",{"_index":1202,"title":{},"body":{"interfaces/Invitation.html":{},"coverage.html":{}}}],["src/app/interfaces/musical",{"_index":614,"title":{},"body":{"components/BandFormComponent.html":{},"interfaces/BandFormData.html":{},"components/BandInfoComponent.html":{},"interfaces/MusicalBand.html":{},"injectables/MusicalBandsService.html":{},"coverage.html":{}}}],["src/app/interfaces/register_user",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/interfaces/register_user.ts",{"_index":1477,"title":{},"body":{"interfaces/RegisterUser.html":{},"coverage.html":{}}}],["src/app/interfaces/user",{"_index":756,"title":{},"body":{"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/UserAddress.html":{},"interfaces/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["src/app/interfaces/user.ts",{"_index":1479,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/modules/auth/auth",{"_index":463,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/modules/auth/auth.module.ts",{"_index":456,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/modules/auth/custom",{"_index":1152,"title":{},"body":{"classes/CustomValidators.html":{},"coverage.html":{}}}],["src/app/modules/auth/login/login.component.ts",{"_index":1206,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/modules/auth/login/login.component.ts:14",{"_index":1223,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login/login.component.ts:15",{"_index":1242,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login/login.component.ts:16",{"_index":1236,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login/login.component.ts:18",{"_index":1237,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login/login.component.ts:19",{"_index":1218,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login/login.component.ts:23",{"_index":1234,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login/login.component.ts:37",{"_index":1244,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login/login.component.ts:40",{"_index":1246,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login/login.component.ts:44",{"_index":1226,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login/login.component.ts:46",{"_index":1241,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login/login.component.ts:51",{"_index":1227,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login/login.component.ts:53",{"_index":1221,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login/login.component.ts:65",{"_index":1238,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login/login.component.ts:75",{"_index":1222,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login/login.component.ts:83",{"_index":1220,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login/login.component.ts:88",{"_index":1219,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/signup/signup.component.ts",{"_index":1750,"title":{},"body":{"coverage.html":{}}}],["src/app/modules/main",{"_index":1373,"title":{},"body":{"components/MainPageComponent.html":{},"modules/MainPageModule.html":{},"modules/MainPageRoutingModule.html":{},"coverage.html":{}}}],["src/app/modules/material/confirmation",{"_index":1114,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"coverage.html":{}}}],["src/app/modules/material/material.module.ts",{"_index":1390,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/modules/musical",{"_index":550,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"modules/MusicalBandsModule.html":{},"coverage.html":{}}}],["src/app/modules/users/account",{"_index":1754,"title":{},"body":{"coverage.html":{}}}],["src/app/modules/users/profiles.module.ts",{"_index":1474,"title":{},"body":{"modules/ProfilesModule.html":{}}}],["src/app/modules/users/user",{"_index":1488,"title":{},"body":{"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"coverage.html":{}}}],["src/app/modules/users/users",{"_index":1676,"title":{},"body":{"modules/UsersRoutingModule.html":{}}}],["src/app/modules/users/users.module.ts",{"_index":1673,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/app/services/auth",{"_index":303,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/BandInfoComponent.html":{},"classes/CustomValidators.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/services/bands",{"_index":615,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"injectables/MusicalBandsService.html":{},"coverage.html":{}}}],["src/app/services/users",{"_index":757,"title":{},"body":{"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["src/app/wait",{"_index":1416,"title":{},"body":{"modules/MaterialModule.html":{},"directives/WaitCursorDirective.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":1757,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1761,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":1045,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["started",{"_index":1778,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1738,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1154,"title":{},"body":{"classes/CustomValidators.html":{}}}],["status",{"_index":419,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["sticky",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["stored",{"_index":1801,"title":{},"body":{"index.html":{}}}],["street",{"_index":570,"title":{},"body":{"components/BandFormComponent.html":{},"interfaces/BandHQ.html":{},"components/BandInfoComponent.html":{},"interfaces/BandMembersSurvey.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{},"interfaces/UserAddress.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["string",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/BandFormComponent.html":{},"interfaces/BandFormData.html":{},"interfaces/BandHQ.html":{},"components/BandInfoComponent.html":{},"interfaces/BandMembersSurvey.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/BandUserMatch.html":{},"directives/ChangeBorderOnClickDirective.html":{},"interfaces/ChangePassword.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"classes/CustomValidators.html":{},"interfaces/Invitation.html":{},"components/LoginComponent.html":{},"interfaces/MusicalBand.html":{},"injectables/MusicalBandsService.html":{},"interfaces/RegisterUser.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{},"interfaces/User.html":{},"interfaces/UserAddress.html":{},"interfaces/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["strong",{"_index":848,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["style",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"directives/WaitCursorDirective.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["subscribe((matchedusers",{"_index":980,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["subscription",{"_index":724,"title":{},"body":{"components/BandInfoComponent.html":{},"components/LoginComponent.html":{}}}],["subsequent",{"_index":436,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["subtitle",{"_index":676,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/UserProfileComponent.html":{}}}],["support",{"_index":1824,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["survey",{"_index":836,"title":{},"body":{"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"injectables/MusicalBandsService.html":{},"injectables/UserProfilesService.html":{}}}],["survey'},{'name",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["survey.component",{"_index":761,"title":{},"body":{"components/BandInfoComponent.html":{},"modules/MusicalBandsModule.html":{}}}],["survey.component.html",{"_index":909,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["survey.component.scss",{"_index":908,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["survey.component.ts",{"_index":907,"title":{},"body":{"components/BandMembersSurveyComponent.html":{},"coverage.html":{}}}],["survey.component.ts:102",{"_index":918,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["survey.component.ts:106",{"_index":920,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["survey.component.ts:116",{"_index":919,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["survey.component.ts:134",{"_index":921,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["survey.component.ts:140",{"_index":925,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["survey.component.ts:155",{"_index":923,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["survey.component.ts:21",{"_index":927,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["survey.component.ts:22",{"_index":929,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["survey.component.ts:24",{"_index":932,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["survey.component.ts:38",{"_index":945,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["survey.component.ts:49",{"_index":917,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["survey.component.ts:58",{"_index":946,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["survey.component.ts:62",{"_index":947,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["survey.component.ts:66",{"_index":948,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["survey.component.ts:70",{"_index":950,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["survey.component.ts:74",{"_index":952,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["survey.component.ts:78",{"_index":954,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["survey.component.ts:82",{"_index":956,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["survey.component.ts:86",{"_index":958,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["survey.component.ts:90",{"_index":960,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["survey.component.ts:94",{"_index":962,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["survey.component.ts:98",{"_index":964,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["survey.ts",{"_index":895,"title":{},"body":{"interfaces/BandMembersSurvey.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{},"coverage.html":{}}}],["survey/band",{"_index":760,"title":{},"body":{"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"modules/MusicalBandsModule.html":{},"coverage.html":{}}}],["surveyform",{"_index":912,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["surveyformdata",{"_index":795,"title":{"interfaces/SurveyFormData.html":{}},"body":{"components/BandInfoComponent.html":{},"interfaces/BandMembersSurvey.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{},"coverage.html":{}}}],["surveymatch",{"_index":926,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["surveymatch.matcheduserid",{"_index":992,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["surveymatch.matcheduserprofile.firstname",{"_index":996,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["surveymatch.matcheduserprofile.lastname",{"_index":997,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["surveymatch.matchtype",{"_index":1002,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["surveymatches",{"_index":987,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["surveyresult",{"_index":903,"title":{"interfaces/SurveyResult.html":{}},"body":{"interfaces/BandMembersSurvey.html":{},"components/BandMembersSurveyComponent.html":{},"injectables/MusicalBandsService.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{},"injectables/UserProfilesService.html":{},"coverage.html":{}}}],["surveyresult.matcheduserprofile.firstname",{"_index":1022,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["surveyresult.matcheduserprofile.lastname",{"_index":1023,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["svg",{"_index":1825,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":331,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["table",{"_index":1763,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1762,"title":{},"body":{"coverage.html":{}}}],["takesurvey",{"_index":729,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["target",{"_index":1165,"title":{},"body":{"classes/CustomValidators.html":{},"components/LoginComponent.html":{},"directives/WaitCursorDirective.html":{}}}],["target.classlist.contains('mat",{"_index":1269,"title":{},"body":{"components/LoginComponent.html":{}}}],["target.id",{"_index":1268,"title":{},"body":{"components/LoginComponent.html":{}}}],["targetcontrol",{"_index":1195,"title":{},"body":{"classes/CustomValidators.html":{}}}],["targetcontrol.seterrors",{"_index":1199,"title":{},"body":{"classes/CustomValidators.html":{}}}],["targetcontrol.seterrors(null",{"_index":1201,"title":{},"body":{"classes/CustomValidators.html":{}}}],["targetcontrol.value",{"_index":1198,"title":{},"body":{"classes/CustomValidators.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["test",{"_index":1807,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1817,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1806,"title":{},"body":{"index.html":{}}}],["text",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UsersService.html":{}}}],["text/json",{"_index":1706,"title":{},"body":{"injectables/UsersService.html":{}}}],["thickness",{"_index":1360,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.acceptbutton",{"_index":1136,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{}}}],["this.addhq",{"_index":634,"title":{},"body":{"components/BandFormComponent.html":{}}}],["this.addressform.get('city",{"_index":1616,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["this.addressform.get('country",{"_index":1615,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["this.addressform.get('street",{"_index":1617,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["this.addressform.patchvalue(userdata.profile.address",{"_index":1604,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["this.addressform.value",{"_index":1629,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["this.authservice.checkuserisloggedin",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.emitusername(currentuser",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.loggedin.subscribe(value",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.loginuser(formdata.username",{"_index":1281,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logoutuser",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptorService.html":{}}}],["this.authservice.namesubscriber.subscribe((username",{"_index":766,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["this.authservice.namesubscriber.subscribe(username",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.refreshtoken().pipe",{"_index":440,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["this.authservice.setloggedintotrue",{"_index":448,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["this.banddata",{"_index":622,"title":{},"body":{"components/BandFormComponent.html":{}}}],["this.banddata.hq",{"_index":624,"title":{},"body":{"components/BandFormComponent.html":{}}}],["this.bandform.get('iscomplete",{"_index":629,"title":{},"body":{"components/BandFormComponent.html":{}}}],["this.bandform.get('musicgenre",{"_index":628,"title":{},"body":{"components/BandFormComponent.html":{}}}],["this.bandform.get('name",{"_index":627,"title":{},"body":{"components/BandFormComponent.html":{}}}],["this.bandform.patchvalue(this.banddata",{"_index":623,"title":{},"body":{"components/BandFormComponent.html":{}}}],["this.bandform.value",{"_index":639,"title":{},"body":{"components/BandFormComponent.html":{}}}],["this.bandsservice",{"_index":978,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["this.bandsservice.createband(bandinfo",{"_index":643,"title":{},"body":{"components/BandFormComponent.html":{}}}],["this.bandsservice.deletebandmatches(this.data.bandid",{"_index":995,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["this.bandsservice.getbandbyid(id).subscribe",{"_index":769,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["this.bandsservice.savebandusermatches(newmatches",{"_index":994,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["this.bandsservice.updateband(bandinfo",{"_index":648,"title":{},"body":{"components/BandFormComponent.html":{}}}],["this.bandsservice.updatebandusermatch(invitation",{"_index":1001,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["this.buttonelement.disabled",{"_index":1726,"title":{},"body":{"directives/WaitCursorDirective.html":{}}}],["this.buttonelement.style.cursor",{"_index":1727,"title":{},"body":{"directives/WaitCursorDirective.html":{}}}],["this.buttontext",{"_index":635,"title":{},"body":{"components/BandFormComponent.html":{}}}],["this.cancelbutton",{"_index":1138,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{}}}],["this.canedit",{"_index":774,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["this.data.bandid",{"_index":990,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["this.data.username).subscribe",{"_index":649,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandMembersSurveyComponent.html":{}}}],["this.data.username).subscribe((response",{"_index":644,"title":{},"body":{"components/BandFormComponent.html":{}}}],["this.defaultborderstyle",{"_index":1109,"title":{},"body":{"directives/ChangeBorderOnClickDirective.html":{}}}],["this.dialog.open(bandformcomponent",{"_index":787,"title":{},"body":{"components/BandInfoComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.dialog.open(bandmemberssurveycomponent",{"_index":797,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["this.dialog.open(confirmationdialogcomponent",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dialog.open(userprofileformcomponent",{"_index":1510,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.dialogref.close",{"_index":637,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["this.dialogref.close([response.newbandid",{"_index":646,"title":{},"body":{"components/BandFormComponent.html":{}}}],["this.dialogref.close(bandinfo.bandid",{"_index":650,"title":{},"body":{"components/BandFormComponent.html":{}}}],["this.dialogref.close(false",{"_index":1141,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{}}}],["this.dialogref.close(true",{"_index":1140,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{}}}],["this.dialogref.close(userprofile",{"_index":1632,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["this.elementref.nativeelement",{"_index":1104,"title":{},"body":{"directives/ChangeBorderOnClickDirective.html":{},"directives/WaitCursorDirective.html":{}}}],["this.errormessage",{"_index":776,"title":{},"body":{"components/BandInfoComponent.html":{},"components/LoginComponent.html":{}}}],["this.formfields.foreach((formfield",{"_index":1239,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formisobserved",{"_index":1262,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formtitle",{"_index":620,"title":{},"body":{"components/BandFormComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["this.formtitle=='edit",{"_index":1630,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["this.getmusicalband(bandid",{"_index":789,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["this.getmusicalband(params['bandid",{"_index":764,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["this.headquartersform.get('city",{"_index":631,"title":{},"body":{"components/BandFormComponent.html":{}}}],["this.headquartersform.get('country",{"_index":630,"title":{},"body":{"components/BandFormComponent.html":{}}}],["this.headquartersform.get('squaremeters",{"_index":633,"title":{},"body":{"components/BandFormComponent.html":{}}}],["this.headquartersform.get('street",{"_index":632,"title":{},"body":{"components/BandFormComponent.html":{}}}],["this.headquartersform.patchvalue(this.banddata.hq",{"_index":625,"title":{},"body":{"components/BandFormComponent.html":{}}}],["this.headquartersform.value",{"_index":641,"title":{},"body":{"components/BandFormComponent.html":{}}}],["this.http.delete(`${this.url}/${bandid}/deletebandmatches/${username",{"_index":1468,"title":{},"body":{"injectables/MusicalBandsService.html":{}}}],["this.http.get(`${this.authurl}/checkusername/${username",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.get(`${this.url}/${bandid",{"_index":1463,"title":{},"body":{"injectables/MusicalBandsService.html":{}}}],["this.http.get(`${this.url}/${bandid}/getmatchedusers",{"_index":1466,"title":{},"body":{"injectables/MusicalBandsService.html":{}}}],["this.http.get(`${this.url}/${userid}/bandinvitations",{"_index":1667,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["this.http.get(`${this.url}/getbyusername/${username",{"_index":1662,"title":{},"body":{"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["this.http.get(this.authurl",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.get(this.authurl+'/refreshtoken",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.get(this.url",{"_index":1665,"title":{},"body":{"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["this.http.post(`${this.url}/${username",{"_index":1462,"title":{},"body":{"injectables/MusicalBandsService.html":{}}}],["this.http.post(`${this.url}/${username}/acceptinvitation",{"_index":1668,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["this.http.post(`${this.url}/${username}/createbandmatches",{"_index":1465,"title":{},"body":{"injectables/MusicalBandsService.html":{}}}],["this.http.post(this.authurl",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(this.url",{"_index":1661,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["this.http.post(this.url+'/surveyresults",{"_index":1666,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["this.http.put(`${this.url}/${username",{"_index":1464,"title":{},"body":{"injectables/MusicalBandsService.html":{}}}],["this.http.put(`${this.url}/${username}/updatebandusermatch",{"_index":1467,"title":{},"body":{"injectables/MusicalBandsService.html":{}}}],["this.http.put(`${this.url}/changeemail/${username",{"_index":1708,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.http.put(`${this.url}/changeusername/${oldusername",{"_index":1707,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.http.put(this.url",{"_index":1663,"title":{},"body":{"injectables/UserProfilesService.html":{}}}],["this.http.put(this.url+'/changepassword",{"_index":1709,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.isrefreshing",{"_index":415,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["this.loggedinsubject.asobservable",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedinsubject.next(true",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loginform.get('password",{"_index":1252,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('username",{"_index":1251,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('username')?.valuechanges.subscribe((usernamevalue",{"_index":1273,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.patchvalue",{"_index":1258,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value",{"_index":1280,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.matchedusers",{"_index":982,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["this.message",{"_index":1134,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{}}}],["this.mousedownborderstyle",{"_index":1108,"title":{},"body":{"directives/ChangeBorderOnClickDirective.html":{}}}],["this.musicalband",{"_index":770,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["this.musicalband!.bandid",{"_index":796,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["this.nameobserver.asobservable",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.nameobserver.next(username",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.namesub",{"_index":765,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["this.namesub.unsubscribe",{"_index":768,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["this.nativeelement.style.borderstyle",{"_index":1107,"title":{},"body":{"directives/ChangeBorderOnClickDirective.html":{}}}],["this.newuser",{"_index":1254,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.nonexistentusernames.includes(usernamevalue",{"_index":1274,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.nonexistentusernames.push(formdata.username",{"_index":1288,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.observer.disconnect",{"_index":1734,"title":{},"body":{"directives/WaitCursorDirective.html":{}}}],["this.observer.observe(document.body",{"_index":1732,"title":{},"body":{"directives/WaitCursorDirective.html":{}}}],["this.observer.observe(this.buttonelement",{"_index":1730,"title":{},"body":{"directives/WaitCursorDirective.html":{}}}],["this.onformmousedown",{"_index":1264,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.onunload",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["this.onusernamechange",{"_index":1253,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.profilesservice.createuserprofile(userprofile).subscribe",{"_index":1637,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["this.profilesservice.edituserprofile(userprofile).subscribe",{"_index":1631,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["this.profilesservice.getprofilebyusername(memberusername).subscribe((profile",{"_index":793,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["this.refreshauthtoken(req",{"_index":359,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["this.refreshtokensubject.next('refreshing",{"_index":446,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["this.refreshtokensubject.next(null",{"_index":439,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["this.refreshtokensubject.pipe",{"_index":431,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["this.resizeobserver.disconnect",{"_index":1278,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.resizeobserver.observe(firstforminput",{"_index":1261,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.resizeobserver.observe(target",{"_index":1271,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.route.params.subscribe((params",{"_index":763,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["this.router.navigate(['/users/account/'+memberusername",{"_index":790,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["this.showadminboard",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["this.shownprofile",{"_index":792,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["this.shownprofile?.username",{"_index":791,"title":{},"body":{"components/BandInfoComponent.html":{}}}],["this.shownusers[profile.username",{"_index":1003,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["this.subscription",{"_index":762,"title":{},"body":{"components/BandInfoComponent.html":{},"components/LoginComponent.html":{}}}],["this.subscription!.unsubscribe",{"_index":1287,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.subscription.closed",{"_index":1279,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":767,"title":{},"body":{"components/BandInfoComponent.html":{},"components/LoginComponent.html":{}}}],["this.surveyform.get('cansing",{"_index":973,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["this.surveyform.get('city",{"_index":968,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["this.surveyform.get('country",{"_index":967,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["this.surveyform.get('maxage",{"_index":971,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["this.surveyform.get('minage",{"_index":970,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["this.surveyform.get('occupation",{"_index":972,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["this.surveyform.get('playedinstrument",{"_index":974,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["this.surveyform.get('preferredmusicgenre",{"_index":975,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["this.surveyform.get('street",{"_index":969,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["this.surveyform.get('trait1",{"_index":976,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["this.surveyform.get('trait2",{"_index":977,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["this.surveyform.value",{"_index":984,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["this.title",{"_index":1132,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{}}}],["this.user",{"_index":1509,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.user.profile",{"_index":1514,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.user.profile.bandid",{"_index":1521,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.user.profile.bandname",{"_index":1522,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.user.username",{"_index":1515,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.userdata.email",{"_index":1636,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["this.userdata.profile?.bandid",{"_index":1625,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["this.userdata.profile?.bandname",{"_index":1627,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["this.userdata.username",{"_index":1634,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["this.userisloggedin",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["this.username",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/BandInfoComponent.html":{}}}],["this.username.seterrors",{"_index":1275,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userprofileform.get('age",{"_index":1608,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["this.userprofileform.get('cansing",{"_index":1610,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["this.userprofileform.get('firstname",{"_index":1605,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["this.userprofileform.get('lastname",{"_index":1606,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["this.userprofileform.get('occupation",{"_index":1609,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["this.userprofileform.get('phonenumber",{"_index":1607,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["this.userprofileform.get('playedinstrument",{"_index":1611,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["this.userprofileform.get('preferredmusicgenre",{"_index":1612,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["this.userprofileform.get('trait1",{"_index":1613,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["this.userprofileform.get('trait2",{"_index":1614,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["this.userprofileform.patchvalue(userdata.profile",{"_index":1603,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["this.userprofileform.value",{"_index":1622,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["this.userprofilesservice.getsurveymatches(survey).subscribe((surveymatches",{"_index":985,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["this.usersservice.getuserbyname(currentuser).subscribe(user",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["throw",{"_index":403,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["throwerror",{"_index":328,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["time",{"_index":443,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["time(utc",{"_index":538,"title":{},"body":{"injectables/AuthService.html":{}}}],["title",{"_index":674,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["token",{"_index":337,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["token_expiry_date",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["tokenexpirydate",{"_index":354,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["tokens",{"_index":396,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["tomato",{"_index":1066,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["tooltip",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["tracks",{"_index":335,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["trait",{"_index":1018,"title":{},"body":{"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["trait1",{"_index":901,"title":{},"body":{"interfaces/BandMembersSurvey.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{},"interfaces/UserProfile.html":{},"components/UserProfileFormComponent.html":{}}}],["trait2",{"_index":902,"title":{},"body":{"interfaces/BandMembersSurvey.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{},"interfaces/UserProfile.html":{},"components/UserProfileFormComponent.html":{}}}],["traits",{"_index":829,"title":{},"body":{"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["trebuie",{"_index":1419,"title":{},"body":{"modules/MaterialModule.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["true",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"interfaces/CanDeactivateComponent.html":{},"guards/CanDeactivateGuard.html":{},"classes/CustomValidators.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"directives/WaitCursorDirective.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":539,"title":{},"body":{"injectables/AuthService.html":{}}}],["tslib",{"_index":1773,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/BandFormComponent.html":{},"interfaces/BandFormData.html":{},"interfaces/BandHQ.html":{},"components/BandInfoComponent.html":{},"interfaces/BandMembersSurvey.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/BandUserMatch.html":{},"interfaces/CanDeactivateComponent.html":{},"guards/CanDeactivateGuard.html":{},"directives/ChangeBorderOnClickDirective.html":{},"interfaces/ChangePassword.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"classes/CustomValidators.html":{},"interfaces/Invitation.html":{},"components/LoginComponent.html":{},"interfaces/MusicalBand.html":{},"injectables/MusicalBandsService.html":{},"interfaces/RegisterUser.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{},"interfaces/User.html":{},"interfaces/UserAddress.html":{},"interfaces/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{},"directives/WaitCursorDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type(2",{"_index":1036,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["typeof",{"_index":389,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["ul",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/BandInfoComponent.html":{},"components/UserProfileComponent.html":{}}}],["ul>li>.nav",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["unable",{"_index":371,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["undefined",{"_index":358,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{}}}],["underline",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["underscores",{"_index":1298,"title":{},"body":{"components/LoginComponent.html":{}}}],["uniqueusernamevalidator",{"_index":1158,"title":{},"body":{"classes/CustomValidators.html":{}}}],["uniqueusernamevalidator(authservice",{"_index":1168,"title":{},"body":{"classes/CustomValidators.html":{}}}],["unit",{"_index":1805,"title":{},"body":{"index.html":{}}}],["universal",{"_index":537,"title":{},"body":{"injectables/AuthService.html":{}}}],["unknown",{"_index":366,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"components/BandInfoComponent.html":{}}}],["until",{"_index":387,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["up",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["updateband",{"_index":1444,"title":{},"body":{"injectables/MusicalBandsService.html":{}}}],["updateband(band",{"_index":1457,"title":{},"body":{"injectables/MusicalBandsService.html":{}}}],["updatebandusermatch",{"_index":1445,"title":{},"body":{"injectables/MusicalBandsService.html":{}}}],["updatebandusermatch(match",{"_index":1459,"title":{},"body":{"injectables/MusicalBandsService.html":{}}}],["updateemail",{"_index":1684,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateemail(username",{"_index":1691,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatepassword",{"_index":1685,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatepassword(model",{"_index":1694,"title":{},"body":{"injectables/UsersService.html":{}}}],["updates",{"_index":1523,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["updateusername",{"_index":1686,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateusername(oldusername",{"_index":1697,"title":{},"body":{"injectables/UsersService.html":{}}}],["url",{"_index":402,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"injectables/MusicalBandsService.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["url('https://media.istockphoto.com/vectors/default",{"_index":1550,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["use",{"_index":1797,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":1014,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["user",{"_index":106,"title":{"interfaces/User.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/BandFormComponent.html":{},"interfaces/BandFormData.html":{},"components/BandInfoComponent.html":{},"interfaces/BandMembersSurvey.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/BandUserMatch.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"interfaces/MusicalBand.html":{},"injectables/MusicalBandsService.html":{},"modules/ProfilesModule.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{},"interfaces/User.html":{},"interfaces/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"injectables/UserProfilesService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user.email",{"_index":1532,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user.profile.address?.city",{"_index":1539,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user.profile.address?.country",{"_index":1538,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user.profile.address?.street",{"_index":1540,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user.profile.age",{"_index":1530,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user.profile.bandname",{"_index":1541,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user.profile.firstname",{"_index":1527,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user.profile.lastname",{"_index":1529,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user.profile.occupation",{"_index":1531,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user.profile.phonenumber",{"_index":1533,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user.profile.playedinstrument",{"_index":1536,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user.profile.preferredmusicgenre",{"_index":1537,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user.profile.trait1",{"_index":1534,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user.profile.trait2",{"_index":1535,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user.username",{"_index":1526,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user.userroles.includes('admin",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["useraddress",{"_index":1480,"title":{"interfaces/UserAddress.html":{}},"body":{"interfaces/UserAddress.html":{},"interfaces/UserProfile.html":{},"coverage.html":{}}}],["userdata",{"_index":1577,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["userdata.profile",{"_index":1602,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["userid",{"_index":991,"title":{},"body":{"components/BandMembersSurveyComponent.html":{},"interfaces/BandUserMatch.html":{},"interfaces/User.html":{},"interfaces/UserAddress.html":{},"interfaces/UserProfile.html":{},"components/UserProfileComponent.html":{},"injectables/UserProfilesService.html":{}}}],["userisloggedin",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["username",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/BandFormData.html":{},"components/BandInfoComponent.html":{},"interfaces/BandMembersSurvey.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/ChangePassword.html":{},"classes/CustomValidators.html":{},"components/LoginComponent.html":{},"interfaces/MusicalBand.html":{},"injectables/MusicalBandsService.html":{},"interfaces/RegisterUser.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{},"interfaces/User.html":{},"interfaces/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{}}}],["usernamealreadyexists",{"_index":1191,"title":{},"body":{"classes/CustomValidators.html":{}}}],["usernamenotfound",{"_index":1276,"title":{},"body":{"components/LoginComponent.html":{}}}],["usernamevalue",{"_index":1277,"title":{},"body":{"components/LoginComponent.html":{}}}],["userprofile",{"_index":710,"title":{"interfaces/UserProfile.html":{}},"body":{"interfaces/BandFormData.html":{},"components/BandInfoComponent.html":{},"interfaces/BandMembersSurvey.html":{},"components/BandMembersSurveyComponent.html":{},"interfaces/MusicalBand.html":{},"interfaces/SurveyFormData.html":{},"interfaces/SurveyResult.html":{},"interfaces/User.html":{},"interfaces/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"injectables/UserProfilesService.html":{},"coverage.html":{}}}],["userprofile.address",{"_index":1628,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["userprofile.bandid",{"_index":1624,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["userprofile.bandname",{"_index":1626,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["userprofile.canbeedited",{"_index":1623,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["userprofile.email",{"_index":1635,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["userprofile.username",{"_index":1633,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["userprofilecomponent",{"_index":206,"title":{"components/UserProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"modules/ProfilesModule.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userprofileform",{"_index":1574,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["userprofileformcomponent",{"_index":208,"title":{"components/UserProfileFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["userprofilesservice",{"_index":734,"title":{"injectables/UserProfilesService.html":{}},"body":{"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{},"injectables/UserProfilesService.html":{},"coverage.html":{}}}],["userroles",{"_index":1007,"title":{},"body":{"components/BandMembersSurveyComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["users",{"_index":271,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ProfilesModule.html":{},"modules/UsersModule.html":{}}}],["users/account/${formdata.username",{"_index":1286,"title":{},"body":{"components/LoginComponent.html":{}}}],["users/profiles.module",{"_index":1435,"title":{},"body":{"modules/MusicalBandsModule.html":{}}}],["usersmodule",{"_index":1669,"title":{"modules/UsersModule.html":{}},"body":{"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersroutingmodule",{"_index":1473,"title":{"modules/UsersRoutingModule.html":{}},"body":{"modules/ProfilesModule.html":{},"modules/UsersModule.html":{},"modules/UsersRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":1680,"title":{"injectables/UsersService.html":{}},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["utc",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["valid",{"_index":1184,"title":{},"body":{"classes/CustomValidators.html":{}}}],["validation",{"_index":391,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["validationerrors",{"_index":1171,"title":{},"body":{"classes/CustomValidators.html":{}}}],["validatorfn",{"_index":1163,"title":{},"body":{"classes/CustomValidators.html":{}}}],["validators",{"_index":612,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["validators.max(1000",{"_index":594,"title":{},"body":{"components/BandFormComponent.html":{}}}],["validators.maxlength(20",{"_index":1583,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["validators.maxlength(25",{"_index":1233,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.maxlength(30",{"_index":1229,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.minlength(10",{"_index":1582,"title":{},"body":{"components/UserProfileFormComponent.html":{}}}],["validators.minlength(2",{"_index":1228,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.minlength(6",{"_index":1232,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.required",{"_index":586,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["validators.ts",{"_index":1153,"title":{},"body":{"classes/CustomValidators.html":{},"coverage.html":{}}}],["validators.ts:15",{"_index":1167,"title":{},"body":{"classes/CustomValidators.html":{}}}],["validators.ts:23",{"_index":1169,"title":{},"body":{"classes/CustomValidators.html":{}}}],["validators.ts:36",{"_index":1166,"title":{},"body":{"classes/CustomValidators.html":{}}}],["validators.ts:8",{"_index":1161,"title":{},"body":{"classes/CustomValidators.html":{}}}],["value",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/AuthService.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"directives/ChangeBorderOnClickDirective.html":{},"classes/ConfirmationDialogModel.html":{},"classes/CustomValidators.html":{},"components/LoginComponent.html":{},"injectables/MusicalBandsService.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"injectables/UserProfilesService.html":{},"injectables/UsersService.html":{},"directives/WaitCursorDirective.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["variable",{"_index":1758,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1834,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vector",{"_index":1555,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["verify",{"_index":401,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["version",{"_index":1783,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertically",{"_index":1314,"title":{},"body":{"components/LoginComponent.html":{}}}],["via",{"_index":1809,"title":{},"body":{"index.html":{}}}],["viewchildren",{"_index":1247,"title":{},"body":{"components/LoginComponent.html":{}}}],["viewchildren('formfield",{"_index":1225,"title":{},"body":{"components/LoginComponent.html":{}}}],["violet",{"_index":1563,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["visibility",{"_index":1304,"title":{},"body":{"components/LoginComponent.html":{}}}],["visibility_off",{"_index":1305,"title":{},"body":{"components/LoginComponent.html":{}}}],["void",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"directives/ChangeBorderOnClickDirective.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"directives/WaitCursorDirective.html":{}}}],["w",{"_index":1231,"title":{},"body":{"components/LoginComponent.html":{}}}],["wait",{"_index":424,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"directives/WaitCursorDirective.html":{}}}],["waitcursordirective",{"_index":214,"title":{"directives/WaitCursorDirective.html":{}},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"modules/MaterialModule.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{},"directives/WaitCursorDirective.html":{},"coverage.html":{},"overview.html":{}}}],["want",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptorService.html":{},"components/BandMembersSurveyComponent.html":{}}}],["warning",{"_index":1319,"title":{},"body":{"components/LoginComponent.html":{}}}],["web",{"_index":349,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["webpage",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["website",{"_index":370,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"components/LoginComponent.html":{}}}],["website's",{"_index":1292,"title":{},"body":{"components/LoginComponent.html":{}}}],["website\\'s",{"_index":1371,"title":{},"body":{"components/LoginComponent.html":{}}}],["weight",{"_index":849,"title":{},"body":{"components/BandInfoComponent.html":{},"components/UserProfileComponent.html":{}}}],["welcome",{"_index":1289,"title":{},"body":{"components/LoginComponent.html":{}}}],["white",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmationDialogComponent.html":{}}}],["width",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/BandFormComponent.html":{},"components/BandInfoComponent.html":{},"components/BandMembersSurveyComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["window.addeventlistener('beforeunload",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["window.alert('you",{"_index":296,"title":{},"body":{"guards/AuthGuard.html":{}}}],["window.alert(err",{"_index":416,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["window.confirm('send",{"_index":998,"title":{},"body":{"components/BandMembersSurveyComponent.html":{}}}],["window.location.href",{"_index":298,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["window.location.reload",{"_index":449,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"components/UserProfileComponent.html":{}}}],["window.removeeventlistener('beforeunload",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["withcredentials",{"_index":352,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["working",{"_index":939,"title":{},"body":{"components/BandMembersSurveyComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["wrap",{"_index":1331,"title":{},"body":{"components/LoginComponent.html":{}}}],["wrapper",{"_index":1270,"title":{},"body":{"components/LoginComponent.html":{}}}],["x",{"_index":847,"title":{},"body":{"components/BandInfoComponent.html":{},"components/UserProfileComponent.html":{}}}],["y",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptorService.html":{}}}],["yes",{"_index":654,"title":{},"body":{"components/BandFormComponent.html":{},"components/BandMembersSurveyComponent.html":{},"guards/CanDeactivateGuard.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationDialogModel.html":{},"components/UserProfileComponent.html":{},"components/UserProfileFormComponent.html":{}}}],["z",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["z0",{"_index":1182,"title":{},"body":{"classes/CustomValidators.html":{}}}],["z]+)(?=.*[0",{"_index":1179,"title":{},"body":{"classes/CustomValidators.html":{}}}],["z]+)(?=.*[a",{"_index":1178,"title":{},"body":{"classes/CustomValidators.html":{}}}],["za",{"_index":1181,"title":{},"body":{"classes/CustomValidators.html":{}}}],["zone.js",{"_index":1775,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MainPageModule.html":{},"modules/MaterialModule.html":{},"modules/MusicalBandsModule.html":{},"modules/ProfilesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                onUnload\n                            \n                            \n                                userIsLoggedIn\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logOut\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        onUnload\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userIsLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AuthService } from './services/auth-service/auth.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n  ConfirmationDialogComponent,\n  ConfirmationDialogModel\n} from './modules/material/confirmation-dialog/confirmation-dialog.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  username: string | null = null;\n  userIsLoggedIn = false;\n\n  constructor(private authService: AuthService, private dialog: MatDialog) {}\n\n  private onUnload = () => {\n    this.authService.nameSubscriber.subscribe(username => {\n      if (username != localStorage.getItem('User'))\n        localStorage.setItem(\"User\", username);\n    });\n  }\n\n  ngOnInit(): void {\n    this.userIsLoggedIn = this.authService.checkUserIsLoggedIn();\n    const currentUser = localStorage.getItem('User');\n    if (currentUser && this.userIsLoggedIn) {\n      this.authService.emitUsername(currentUser);\n      this.username = currentUser;\n\n      window.addEventListener('beforeunload', this.onUnload);\n\n      // this.usersService.getUserByName(currentUser).subscribe(user => {\n      //   this.showAdminBoard = user.userRoles.includes('Admin');\n      // });\n    }\n\n    this.authService.loggedIn.subscribe(value => {\n      if (value) { \n        this.userIsLoggedIn = value;\n        this.username = currentUser;\n        if (currentUser) this.authService.emitUsername(currentUser);\n      }\n    });\n  }\n\n  logOut() {\n    const dialogData = new ConfirmationDialogModel('',\n      'Are you sure you want to log out of your account?',\n      'Log out',\n      'Cancel'\n    );\n\n    const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\n      maxWidth: '90vw',\n      minWidth: '260px',\n      position: { top: '30px' },\n      disableClose: true,\n      data: dialogData\n    });\n\n    dialogRef.afterClosed().subscribe((answer) => {\n      if (answer) {\n        window.removeEventListener('beforeunload', this.onUnload);\n        this.authService.logOutUser();\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          Home\n        \n      \n    \n    \n      \n        \n          Sign in\n        \n      \n      \n        \n          Sign up\n        \n      \n    \n    \n      \n        \n          User {{ username }}\n        \n      \n      \n        \n          Log out\n        \n        \n      \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                ::ng-deep .mat-tooltip { font-size: 12px; }\n\n#app { display: flex;\n    flex-direction: column;\n    background-color: aliceblue;\n    height: 100%;\n    min-width: 280px;\n    overflow-y: auto;\n\n    #navbar { flex-shrink: 0; //no shrinking\n        background-color: powderblue;\n        position: sticky; top: 0;\n        z-index: 10;\n        \n        ul { list-style-type: none;\n            margin: 0px;\n            padding: 0px;\n            \n            li { float: left;\n                \n                .nav-link { display: block;   \n                    padding: 10px 15px;\n                    text-decoration: none; // no underline\n                }\n                .nav-link:hover {\n                    background-color: paleturquoise;\n                }\n                \n                .active-link {\n                    background-color: skyblue;\n                }\n            }\n        }\n\n        .navbar-right { float: right;\n\n            #nav-user { max-width: 300px; overflow: hidden; white-space: nowrap;}\n        }\n    }\n\n    #webpage { padding: 20px 20px 10px; }\n\n\n    @media screen and (max-width: 350px) {\n\n        #navbar { font-size: 14px;\n\n            ul>li>.nav-link { padding: 8px 12px; }\n        }\n\n        #webpage { padding: 15px 15px 5px;}\n    }\n}\n\n\n@media screen and (max-width: 550px) {\n    #app>#navbar>.navbar-right {\n        #nav-user { max-width: 200px; }            \n    }\n}\n\n@media screen and (max-width: 450px) {\n    #app>#navbar>.navbar-right {\n        #nav-user { max-width: 120px; }            \n    }\n}\n\n@media screen and (max-width: 300px) {\n    #app>#navbar>.navbar-right {\n        #nav-user { max-width: 100px; }            \n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              Home                                              Sign in                                      Sign up                                              User {{ username }}                                      Log out                                    '\n    var COMPONENTS = [{'name': 'AccountInfoComponent', 'selector': 'app-account-info'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BandFormComponent', 'selector': 'app-band-form'},{'name': 'BandInfoComponent', 'selector': 'app-band-info'},{'name': 'BandMembersSurveyComponent', 'selector': 'app-band-members-survey'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'SignupComponent', 'selector': 'app-register'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProfileFormComponent', 'selector': 'app-user-profile-form'}];\n    var DIRECTIVES = [{'name': 'ChangeBorderOnClickDirective', 'selector': '[changeBorderOnClick]'},{'name': 'WaitCursorDirective', 'selector': '[appWaitCursor]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthInterceptorService\n\nAuthInterceptorService\n\nAppModule -->\n\nAuthInterceptorService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthInterceptorService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthInterceptorService } from './services/auth-service/auth-interceptor.service';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatDialogModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptorService,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './auth.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () => \"import('src/app/modules/main-page/main-page.module').then(m => m.MainPageModule)\"\n  },\n  {\n    path: 'auth',\n    loadChildren: () => \"import('src/app/modules/auth/auth.module').then(m => m.AuthModule)\"\n  },\n  {\n    path: 'users',\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: '',\n        loadChildren: () => \"import('src/app/modules/users/users.module').then(m => m.UsersModule)\"\n      },\n      {\n        path: '',\n        loadChildren: () => \"import('src/app/modules/musical-bands/musical-bands.module').then(m => m.MusicalBandsModule)\"\n      }\n    ]\n    \n    \n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/auth.guard.ts:7\n                            \n                        \n\n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(_route: ActivatedRouteSnapshot, _state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth.guard.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _route\n                                    \n                                            ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _state\n                                    \n                                            RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor() {}\n\n  canActivate(_route: ActivatedRouteSnapshot, _state: RouterStateSnapshot): boolean {\n    let isAuthorized = false;\n    const user = localStorage.getItem('User');\n    if (user) isAuthorized = true;\n    if (isAuthorized == false) {\n      window.alert('You are not authorized!');\n      window.location.href = '/auth/login';\n    }\n    return isAuthorized;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptorService.html":{"url":"interceptors/AuthInterceptorService.html","title":"interceptor - AuthInterceptorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth-service/auth-interceptor.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isRefreshing\n                            \n                            \n                                    Private\n                                refreshTokenSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                            \n                                    Private\n                                refreshAuthToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth-service/auth-interceptor.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth-service/auth-interceptor.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        refreshAuthToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshAuthToken(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth-service/auth-interceptor.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isRefreshing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth-service/auth-interceptor.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        refreshTokenSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth-service/auth-interceptor.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { formatDate } from '@angular/common';\nimport { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject, throwError } from 'rxjs';\nimport { catchError, switchMap, first } from 'rxjs/operators';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthInterceptorService implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n\n  private isRefreshing = false;\n  //refreshTokenSubject tracks the current token, or is null if no token is currently available (e.g. refresh pending)\n  private refreshTokenSubject: BehaviorSubject = new BehaviorSubject(null);\n\n  //With this function, we can intercept any HTTP call, modify it, and then let it continue its journey to the Web API.\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    req = req.clone({ withCredentials: true });\n\n    if (req.url.includes('/authentication/') == false) {\n      const tokenExpiryDate = document.cookie.split('; ')\n        .find((cookie) => cookie.startsWith('Token_Expiry_Date='))?.split('=')[1];\n      if (tokenExpiryDate == undefined) return this.refreshAuthToken(req, next);\n    }\n\n    return next.handle(req).pipe(catchError((error) => { console.log(error);\n      let errorName = 'Error';\n      let errorMessage = 'The cause of the error is unknown.';\n\n      if (error instanceof HttpErrorResponse) {\n        errorName = 'HTTP Error with Code ' + error.status;\n        if (error.status == 0) errorMessage = 'The website was unable to connect to the server.';\n        else if (error.status == 403) errorMessage = 'Access denied.';\n        else if (error.error) {\n          if (error.error.lockoutEnd) {\n            const lockoutEnd = formatDate(error.error.lockoutEnd, 'MMMM d, y, h:mm:ss a', 'en');\n            errorMessage = 'The account of ' + req.body.username + ' is locked until ' + lockoutEnd + '.';\n          }\n          else if (error.error.message) errorMessage = error.error.message;\n          else if (typeof error.error === 'string') errorMessage = error.error;\n          else if (typeof error.error.title.includes('validation error')) errorMessage = 'Validation Error';\n        }\n      }\n      let err = new Error(errorMessage);\n      err.name = errorName;\n\n      // We don't want to refresh tokens for some requests like login or refreshing the token itself,\n      // so we verify the url and we throw an error if it's the case.\n      if (req.url.includes('/refreshToken') || req.url.includes('/login') || req.url.includes('/registerUser')) \n      {\n        // We do another check to see if refreshing the token failed.\n        // In this case we want to logout the user and redirect them to the login page.\n        if (req.url.includes('/refreshToken')) { //this.isRefreshing = false;\n          window.alert(err);\n          this.authService.logOutUser();\n        } else {\n          document.body.style.cursor = 'auto';\n          return throwError(() => err);\n        }\n      }\n\n      if (req.url.includes('/users/change'))\n        document.body.style.cursor = 'auto';\n\n      // If error status is different than 401 we want to skip refreshing the token, so we check that and throw the error if it's the case.\n      if (error.status !== 401) return throwError(() => err);\n\n      return this.refreshAuthToken(req, next);\n    }));\n  }\n\n  private refreshAuthToken(req: HttpRequest, next: HttpHandler): Observable> {\n    if (this.isRefreshing)\n      // If token refreshing is in progress, we wait until refreshTokenSubject has a non-null value\n      // – which means the new token is ready and we can retry the request again.\n      return this.refreshTokenSubject.pipe(\n        first(result => result !== null),\n        switchMap(() => next.handle(req))\n      );\n    else this.isRefreshing = true;\n\n    // Set the refreshTokenSubject to null so that subsequent API calls will wait until the new token has been retrieved.\n    this.refreshTokenSubject.next(null);\n\n    return this.authService.refreshToken().pipe(\n      switchMap(() => {\n        //When the call to refreshToken completes we set isRefreshing to false for the next time the token needs to be refreshed.\n        this.isRefreshing = false;\n        this.refreshTokenSubject.next('refreshing done');\n\n        this.authService.setLoggedInToTrue();\n\n        //window.location.reload();\n        return next.handle(req);\n      })\n    );\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAuthModule -->\n\nMaterialModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                        \n                            SignupComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { SignupComponent } from './signup/signup.component';\nimport { LoginComponent } from './login/login.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../material/material.module';\n\n@NgModule({\n  declarations: [\n    SignupComponent,\n    LoginComponent\n  ],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    ReactiveFormsModule,\n    MaterialModule\n  ]\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/auth/auth-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CanDeactivateGuard } from 'src/app/can-deactivate.guard';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\n\nconst routes: Routes = [\n  {\n    path: '', //http://localhost:4200/auth\n    pathMatch: 'full', \n    redirectTo: 'login'\n  },\n  \n  {\n    path: 'signup',\n    component: SignupComponent,\n    canDeactivate: [CanDeactivateGuard]\n  },\n\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  //providers: [CanDeactivateGuard]\n})\nexport class AuthRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth-service/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authUrl\n                            \n                            \n                                    Public\n                                loggedIn\n                            \n                            \n                                    Private\n                                loggedInSubject\n                            \n                            \n                                    Private\n                                nameObserver\n                            \n                            \n                                    Public\n                                nameSubscriber\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                checkIfUsernameExists\n                            \n                            \n                                    Public\n                                checkUserIsLoggedIn\n                            \n                            \n                                    Public\n                                emitUsername\n                            \n                            \n                                    Public\n                                logInUser\n                            \n                            \n                                    Public\n                                logOutUser\n                            \n                            \n                                    Public\n                                refreshToken\n                            \n                            \n                                    Public\n                                registerNewUser\n                            \n                            \n                                    Public\n                                setLoggedInToTrue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth-service/auth.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        checkIfUsernameExists\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfUsernameExists(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth-service/auth.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        checkUserIsLoggedIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkUserIsLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth-service/auth.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        emitUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    emitUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth-service/auth.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        logInUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    logInUser(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth-service/auth.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        logOutUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    logOutUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth-service/auth.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth-service/auth.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        registerNewUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerNewUser(user: RegisterUser)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth-service/auth.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                RegisterUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setLoggedInToTrue\n                        \n                    \n                \n            \n            \n                \n                    \n                    setLoggedInToTrue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth-service/auth.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://localhost:7299/api/authentication'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth-service/auth.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.loggedInSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth-service/auth.service.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loggedInSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth-service/auth.service.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        nameObserver\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth-service/auth.service.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        nameSubscriber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.nameObserver.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth-service/auth.service.ts:55\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { RegisterUser } from 'src/app/interfaces/register_user';\nimport { formatDate } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  constructor(private http: HttpClient) {}\n\n  private authUrl = 'https://localhost:7299/api/authentication';\n\n  public registerNewUser(user: RegisterUser) {\n    return this.http.post(this.authUrl + '/registerUser', user);\n  }\n\n  public logInUser(username: string, password: string) {\n    return this.http.post(this.authUrl + '/login', { username, password });\n  }\n\n  public logOutUser() {\n    this.http.get(this.authUrl + '/logout').subscribe({\n      next: () => {\n        localStorage.removeItem('User');\n        window.location.href = '/auth/login';\n      },\n      error: () => {\n        localStorage.removeItem('User');\n        window.location.href = '/auth/login';\n        document.cookie = 'Token_Expiry_Date=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\n      }\n    });\n  }\n\n  public refreshToken() {\n    return this.http.get(this.authUrl+'/refreshToken');\n  }\n\n  public checkIfUsernameExists(username: string): Observable{\n    return this.http.get(`${this.authUrl}/checkUsername/${username}`);\n  }\n\n\n  private loggedInSubject = new BehaviorSubject(false);\n  public loggedIn = this.loggedInSubject.asObservable();\n\n  public setLoggedInToTrue() {\n    this.loggedInSubject.next(true);\n  }\n\n  private nameObserver = new BehaviorSubject('');\n  public nameSubscriber = this.nameObserver.asObservable();\n\n  public emitUsername(username: string) {\n    this.nameObserver.next(username);\n  }\n\n\n  public checkUserIsLoggedIn(): boolean {\n    const dateFromCookie = document.cookie.split('; ') // date is in Coordinated Universal Time(UTC)\n      .find((cookie) => cookie.startsWith('Token_Expiry_Date='))?.split('=')[1];\n\n    if (dateFromCookie == undefined) return false\n    try {\n      const expiryDateUtc = new Date(dateFromCookie.replace(/%3A/g, ':'));\n      const dateAndTimeNow = new Date(); //needs to be converted to UTC\n      const currentDateUtc = new Date(dateAndTimeNow.getTime() + dateAndTimeNow.getTimezoneOffset() * 60000); \n      // console.log(currentDateUtc)\n      // console.log(expiryDateUtc)\n      return currentDateUtc \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BandFormComponent.html":{"url":"components/BandFormComponent.html","title":"component - BandFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BandFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/musical-bands/band-form/band-form.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-band-form\n            \n\n\n\n            \n                styleUrls\n                ./band-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./band-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addHQ\n                            \n                            \n                                    Private\n                                    Optional\n                                bandData\n                            \n                            \n                                    Public\n                                bandForm\n                            \n                            \n                                    Public\n                                buttonText\n                            \n                            \n                                    Public\n                                formTitle\n                            \n                            \n                                    Public\n                                headquartersForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeEditForm\n                            \n                            \n                                    Public\n                                closeDialog\n                            \n                            \n                                    Public\n                                saveFormData\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                                \n                                    musicGenre\n                                \n                                \n                                    isComplete\n                                \n                                \n                                    country\n                                \n                                \n                                    city\n                                \n                                \n                                    street\n                                \n                                \n                                    squareMeters\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: BandFormData, dialogRef: MatDialogRef, bandsService: MusicalBandsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/musical-bands/band-form/band-form.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        BandFormData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bandsService\n                                                  \n                                                        \n                                                                        MusicalBandsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        changeEditForm\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeEditForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/musical-bands/band-form/band-form.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        closeDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    closeDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/musical-bands/band-form/band-form.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        saveFormData\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveFormData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/musical-bands/band-form/band-form.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addHQ\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/musical-bands/band-form/band-form.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        bandData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MusicalBand\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/musical-bands/band-form/band-form.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        bandForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    bandId: new FormControl('-'),\n    name: new FormControl('', [Validators.required]),\n    musicGenre: new FormControl(),\n    isComplete: new FormControl(false)\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/musical-bands/band-form/band-form.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        buttonText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Add Band HQ'\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/musical-bands/band-form/band-form.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        formTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/musical-bands/band-form/band-form.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        headquartersForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    country: new FormControl(''),\n    city: new FormControl(''),\n    street: new FormControl(),\n    squareMeters: new FormControl(null, [Validators.max(1000)])\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/musical-bands/band-form/band-form.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/musical-bands/band-form/band-form.component.ts:49\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        musicGenre\n                    \n                \n\n                \n                    \n                        getmusicGenre()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/musical-bands/band-form/band-form.component.ts:53\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isComplete\n                    \n                \n\n                \n                    \n                        getisComplete()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/musical-bands/band-form/band-form.component.ts:57\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        country\n                    \n                \n\n                \n                    \n                        getcountry()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/musical-bands/band-form/band-form.component.ts:61\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        city\n                    \n                \n\n                \n                    \n                        getcity()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/musical-bands/band-form/band-form.component.ts:65\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        street\n                    \n                \n\n                \n                    \n                        getstreet()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/musical-bands/band-form/band-form.component.ts:69\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        squareMeters\n                    \n                \n\n                \n                    \n                        getsquareMeters()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/musical-bands/band-form/band-form.component.ts:73\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MusicalBand, BandFormData } from 'src/app/interfaces/musical-band';\nimport { MusicalBandsService } from 'src/app/services/bands-services/musical-bands.service';\n\n@Component({\n  selector: 'app-band-form',\n  templateUrl: './band-form.component.html',\n  styleUrls: ['./band-form.component.scss']\n})\nexport class BandFormComponent {\n  public formTitle: string;\n\n  public addHQ: boolean = false;\n  public buttonText: string = 'Add Band HQ';\n\n  public bandForm: FormGroup = new FormGroup({\n    bandId: new FormControl('-'),\n    name: new FormControl('', [Validators.required]),\n    musicGenre: new FormControl(),\n    isComplete: new FormControl(false)\n  });\n\n  public headquartersForm: FormGroup = new FormGroup({\n    country: new FormControl(''),\n    city: new FormControl(''),\n    street: new FormControl(),\n    squareMeters: new FormControl(null, [Validators.max(1000)])\n  });\n\n  private bandData?: MusicalBand;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) private data: BandFormData,\n    private dialogRef: MatDialogRef,\n    private bandsService: MusicalBandsService\n  ) {\n    if (data.formData) {\n      this.formTitle = 'Edit Band';\n      this.bandData = data.formData;\n      this.bandForm.patchValue(this.bandData);\n      if (this.bandData.hq)\n        this.headquartersForm.patchValue(this.bandData.hq);\n    }\n    else this.formTitle = 'Create New Band';\n  }\n\n  get name(): AbstractControl {\n    return this.bandForm.get('name')!;\n  }\n\n  get musicGenre(): AbstractControl {\n    return this.bandForm.get('musicGenre')!;\n  }\n\n  get isComplete(): AbstractControl {\n    return this.bandForm.get('isComplete')!;\n  }\n\n  get country(): AbstractControl {\n    return this.headquartersForm.get('country')!;\n  }\n\n  get city(): AbstractControl {\n    return this.headquartersForm.get('city')!;\n  }\n\n  get street(): AbstractControl {\n    return this.headquartersForm.get('street')!;\n  }\n\n  get squareMeters(): AbstractControl {\n    return this.headquartersForm.get('squareMeters')!;\n  }\n\n\n  public changeEditForm() {\n    if (this.addHQ == true) {\n      this.addHQ = false;\n      this.buttonText = 'Add Band HQ';\n    }\n    else {\n      this.addHQ = true;\n      this.buttonText = 'Remove Band HQ';\n    }\n  }\n\n  public closeDialog(): void {\n    this.dialogRef.close();\n  }\n\n  public saveFormData(): void {\n    let bandInfo: MusicalBand = this.bandForm.value;\n    if (this.addHQ)\n      bandInfo.hq = this.headquartersForm.value;\n\n    if(this.bandData == undefined) {\n      this.bandsService.createBand(bandInfo, this.data.username).subscribe((response: {newBandId: string}) => {\n        this.dialogRef.close([response.newBandId, bandInfo.name]);\n      });\n    }\n    else {\n      this.bandsService.updateBand(bandInfo, this.data.username).subscribe(() => {\n        this.dialogRef.close(bandInfo.bandId);\n      });     \n    }\n  }\n\n}\n\n    \n\n    \n        \n  {{ formTitle }}\n\n  &#8544;. General Info\n  \n    \n      Is your band complete?\n      \n        \n          \n          Yes\n        \n        \n          \n          No\n        \n      \n    \n\n    \n      Band Name\n      \n      \n        A band name is required!\n      \n    \n\n    \n      Music Genre\n      \n    \n  \n\n   &#8545;. Headquarters Info \n  {{buttonText}}\n  \n    \n      \n        Country\n        \n        \n          This field is required.\n        \n      \n  \n      \n        City\n        \n        \n          This field is required.\n        \n      \n  \n      \n        Street\n        \n      \n  \n      \n        Size\n         square meters\n        \n          Minimum allowed number is 0!\n        \n        \n          Maximum number (1000) excedeed!\n        \n      \n    \n  \n\n  \n     Save\n    \n    Cancel\n  \n\n\n    \n\n    \n                \n                    ./band-form.component.scss\n                \n                #container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n\n  #title { font-size: 28px;\n    margin-top: 10px;\n  }\n  .subtitle { font-size: 22px; }\n\n  form { display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  #musical-band-form, #band-hq-div { \n    width: 80%;\n\n    mat-form-field { width: 100%;\n      margin-bottom: 10px;\n      .alert { color: red; }\n    }\n\n    #question { \n      display: flex;\n      margin-top: 10px;\n      margin-bottom: 35px;\n      min-width: 215.78px;\n\n      #radio-buttons { display: flex;\n        span {\n          display: flex;\n          input { margin: 0px 3px 0px 30px; }\n        }\n      }\n    }\n  }\n\n  #hq-button { margin-bottom: 20px; }\n\n  .actions > button { font-size: 16px;\n    margin: 15px 15px 10px;\n    border-width: 2px;\n    border-color: rgb(191, 191, 192);\n  }\n}\n\n\n@media screen and (max-width: 570px) {\n  #container > #musical-band-form {\n    #question > #radio-buttons {\n      span > input {\n        margin: 0px 2px 0px 15px;\n      }\n    }\n  }\n}\n\n@media screen and (max-width: 525px) {\n  #container { //padding: 10px;\n    #musical-band-form, #band-hq-div {\n      width: 100%;\n    }\n  }\n}\n\n@media screen and (max-width: 445px) {\n  #container > #musical-band-form {\n    #question > #radio-buttons {\n      flex-direction: column;\n      span:first-child {\n        margin-bottom: 5px;\n      }\n      span > input {\n        margin-left: 10px;\n      }\n    }\n  }\n}\n\n@media screen and (max-width: 400px) {\n  #container {\n    padding: 0px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ formTitle }}  Ⅰ. General Info            Is your band complete?                                  Yes                                    No                            Band Name                    A band name is required!                    Music Genre               Ⅱ. Headquarters Info   {{buttonText}}                    Country                          This field is required.                              City                          This field is required.                              Street                              Size         square meters                  Minimum allowed number is 0!                          Maximum number (1000) excedeed!                           Save        Cancel  '\n    var COMPONENTS = [{'name': 'AccountInfoComponent', 'selector': 'app-account-info'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BandFormComponent', 'selector': 'app-band-form'},{'name': 'BandInfoComponent', 'selector': 'app-band-info'},{'name': 'BandMembersSurveyComponent', 'selector': 'app-band-members-survey'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'SignupComponent', 'selector': 'app-register'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProfileFormComponent', 'selector': 'app-user-profile-form'}];\n    var DIRECTIVES = [{'name': 'ChangeBorderOnClickDirective', 'selector': '[changeBorderOnClick]'},{'name': 'WaitCursorDirective', 'selector': '[appWaitCursor]'}];\n    var ACTUAL_COMPONENT = {'name': 'BandFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BandFormData.html":{"url":"interfaces/BandFormData.html","title":"interface - BandFormData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BandFormData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/musical-band.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            formData\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        formData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formData:         MusicalBand\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MusicalBand\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserProfile } from \"./user-profile\"\nimport { BandHQ } from \"./bandHQ\"\n\nexport interface MusicalBand {\n    bandId: string\n    name: string\n    musicGenre?: string\n    dateFormed: Date\n    isComplete: boolean\n    members: UserProfile[]\n    hq?: BandHQ\n    //creatorUsername: string\n}\n\nexport interface BandFormData {\n    username: string\n    formData?: MusicalBand\n};\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BandHQ.html":{"url":"interfaces/BandHQ.html","title":"interface - BandHQ","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BandHQ\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/bandHQ.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            city\n                                        \n                                \n                                \n                                        \n                                            country\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            squareMeters\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            street\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        squareMeters\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        squareMeters:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        street\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        street:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BandHQ {\n    country: string\n    city: string\n    street?: string\n    squareMeters?: number\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BandInfoComponent.html":{"url":"components/BandInfoComponent.html","title":"component - BandInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BandInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/musical-bands/band-info/band-info.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-band-info\n            \n\n\n\n            \n                styleUrls\n                ./band-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./band-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canEdit\n                            \n                            \n                                    Public\n                                errorMessage\n                            \n                            \n                                    Public\n                                    Optional\n                                musicalBand\n                            \n                            \n                                    Private\n                                nameSub\n                            \n                            \n                                    Public\n                                    Optional\n                                shownProfile\n                            \n                            \n                                    Private\n                                subscription\n                            \n                            \n                                    Private\n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editBand\n                            \n                            \n                                    Public\n                                getMusicalBand\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                seeMemberProfile\n                            \n                            \n                                    Public\n                                takeSurvey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, dialog: MatDialog, bandsService: MusicalBandsService, authService: AuthService, profilesService: UserProfilesService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/musical-bands/band-info/band-info.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bandsService\n                                                  \n                                                        \n                                                                        MusicalBandsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profilesService\n                                                  \n                                                        \n                                                                        UserProfilesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        editBand\n                        \n                    \n                \n            \n            \n                \n                    \n                    editBand()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/musical-bands/band-info/band-info.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getMusicalBand\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMusicalBand(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/musical-bands/band-info/band-info.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/musical-bands/band-info/band-info.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/musical-bands/band-info/band-info.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        seeMemberProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    seeMemberProfile(memberUsername: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/musical-bands/band-info/band-info.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    memberUsername\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        takeSurvey\n                        \n                    \n                \n            \n            \n                \n                    \n                    takeSurvey()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/musical-bands/band-info/band-info.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        canEdit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/musical-bands/band-info/band-info.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/musical-bands/band-info/band-info.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        musicalBand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MusicalBand\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/musical-bands/band-info/band-info.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        nameSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/musical-bands/band-info/band-info.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        shownProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserProfile\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/musical-bands/band-info/band-info.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/musical-bands/band-info/band-info.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/musical-bands/band-info/band-info.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs/internal/Subscription';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MusicalBand } from 'src/app/interfaces/musical-band';\nimport { MusicalBandsService } from 'src/app/services/bands-services/musical-bands.service';\nimport { BandFormComponent } from '../../musical-bands/band-form/band-form.component';\nimport { AuthService } from 'src/app/services/auth-service/auth.service';\nimport { UserProfile } from 'src/app/interfaces/user-profile';\nimport { UserProfilesService } from 'src/app/services/users-service/user-profiles.service';\nimport { BandMembersSurveyComponent } from '../band-members-survey/band-members-survey.component';\n\n@Component({\n  selector: 'app-band-info',\n  templateUrl: './band-info.component.html',\n  styleUrls: ['./band-info.component.scss']\n})\nexport class BandInfoComponent implements OnInit, OnDestroy {\n  public musicalBand?: MusicalBand;\n  public canEdit: boolean = false;\n  public errorMessage: string = '';\n  public shownProfile?: UserProfile;\n\n  private subscription: Subscription = new Subscription();\n  private nameSub: Subscription = new Subscription();\n  private username: string = '';\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private dialog: MatDialog,\n    private bandsService: MusicalBandsService,\n    private authService: AuthService,\n    private profilesService: UserProfilesService\n  ) {}\n\n  \n  ngOnInit(): void {\n    this.subscription = this.route.params.subscribe((params) => {\n      this.getMusicalBand(params['bandId']);\n\n      this.nameSub = this.authService.nameSubscriber.subscribe((username) => {\n        this.username = username;\n      });\n    });\n  }\n\n  public ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n    this.nameSub.unsubscribe();\n  }\n\n  public getMusicalBand(id: string): void {\n    this.bandsService.getBandById(id).subscribe({\n      next: (band: MusicalBand) => {\n        this.musicalBand = band;\n        for (const member of band.members)\n          if (member.username == this.username) {\n            this.canEdit = true;\n            break;\n          }\n      },\n      error: (err) => (this.errorMessage = 'Error: ' + err.message)\n    });\n  }\n\n\n  public editBand(): void {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.width = '85%';\n    dialogConfig.minWidth = '280px';\n    dialogConfig.maxWidth = '550px';\n    dialogConfig.maxHeight = '650px';\n    dialogConfig.disableClose = true;\n\n    const bandFormData = {\n      username: this.username,\n      formData: this.musicalBand\n    };\n    dialogConfig.data = bandFormData;\n    const dialogRef = this.dialog.open(BandFormComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((bandId: string | undefined) => {\n      if (bandId) this.getMusicalBand(bandId);\n    });\n  }\n\n\n  public seeMemberProfile(memberUsername: string) {\n    if (memberUsername == this.username)\n      this.router.navigate(['/users/account/'+memberUsername]);\n    else {\n      if (this.shownProfile?.username == memberUsername) \n        this.shownProfile = undefined;\n      else\n        this.profilesService.getProfileByUsername(memberUsername).subscribe((profile: UserProfile) => {\n          this.shownProfile = profile;\n        })\n    }\n  }\n\n\n  public takeSurvey(): void {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.width = '85%';\n    dialogConfig.minWidth = '280px';\n    dialogConfig.maxWidth = '550px';\n    dialogConfig.maxHeight = '600px';\n\n    const surveyFormData = {\n      bandId: this.musicalBand!.bandId,\n      username: this.username\n    };\n    dialogConfig.data = surveyFormData;\n    dialogConfig.disableClose = true;\n    const dialogRef = this.dialog.open(BandMembersSurveyComponent, dialogConfig);\n  }\n  \n}\n\n    \n\n    \n        \n  \n    \n       {{ musicalBand.name }} \n      Incomplete Band\n      Complete Band\n    \n    \n       Band Information\n        \n          Music Genre: {{ musicalBand.musicGenre }} none\n          Date Formed: {{ musicalBand.dateFormed | date : 'longDate' }}\n           Headquarters\n            \n               Location:\n                \n                  Country: {{ musicalBand.hq.country }}\n                  City: {{ musicalBand.hq.city }}\n                  Street: {{ musicalBand.hq.street }} -\n                \n              \n              \n                Size: {{ musicalBand.hq.squareMeters }} m2\n              \n              Size: unknown\n            \n          \n        \n        \n          Edit Info edit  \n        \n      \n\n       Members:\n        \n          \n            {{ member.firstName }} {{ member.lastName }}\n             — playing {{ member.playedInstrument | lowercase }};\n             —  singer;\n            \n              Username: {{ shownProfile.username }}\n              Age:  \n                0\">{{ shownProfile.age }}\n                unknown\n              \n              Occupation: \n                {{ shownProfile.occupation }} none\n              \n               Contact Info:\n                \n                  Email: {{ shownProfile.email }}\n                  Phone: {{ shownProfile.phoneNumber }}\n                \n              \n              Preferred Music Genre: \n                {{shownProfile.preferredMusicGenre}} none\n              \n              Traits: {{ shownProfile.trait1 }}\n                , {{ shownProfile.trait2 }}\n              \n               Address:\n                \n                  Country: {{ shownProfile.address?.country }} \n                  City: {{ shownProfile.address?.city }} \n                  Street: {{ shownProfile.address?.street }} -\n                \n              \n            \n          \n        \n        \n          New Band Members Survey\n        \n      \n    \n  \n  {{errorMessage}}\n\n\n    \n\n    \n                \n                    ./band-info.component.scss\n                \n                #container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  #error { color: red;\n    font-size: 18px;\n  }\n\n  #band-card { //padding: 10px;\n    max-width: 800px;\n    background-color: lightcyan;\n\n    #title { font-size: 24px; }\n    .subtitle { font-size: 18px;\n      color: rgb(104, 105, 105);\n    }\n\n    #band-info {\n      .details { //width: fit-content;\n        overflow-x: auto;\n\n        strong { font-size: 18px;\n          font-weight: 500;\n        }\n        font-size: 16px; // 18px\n\n        padding: 15px;\n        margin: 0px 16px 16px;\n        background-color: rgb(206, 248, 248);\n\n        border: 4px ridge paleturquoise;\n        border-radius: 3px;\n\n        #info-list { //padding-left: 50px;\n          margin-top: 10px;\n        }\n        #info-list > li { margin-top: 10px; }\n\n        #hq-info > li { margin-top: 5px; }\n        #location {\n          li {\n            margin-top: 5px;\n          }\n        }\n\n        #edit-info-button { // margin-top: 10px;\n          font-size: 16px; \n          padding: 2px 12px 0px 14px;\n          border-width: 2px;\n          background-color: rgb(161, 219, 236);\n        }\n        #edit-info-button:hover {\n          background-color: rgb(183, 243, 243);\n        }\n\n        .member > span:first-child {\n          color: blue;\n          cursor: pointer;\n          margin-left: -5px;\n        }\n        .member {\n          margin-left: 30px; // 50px\n          margin-top: 10px;\n\n          .member-profile {\n            padding: 0px 12px;\n            margin: 3px 30px 25px 0px;\n            overflow-x: auto;\n\n            border: 2px solid rgb(102, 168, 223);\n            background-color: rgb(193, 227, 240);\n            border-radius: 3px;\n\n            .member-detail {\n              text-align: justify;\n              margin: 12px 0px;\n\n              .bold { font-weight: 550; }\n            }\n\n            .profile-list {\n              p, ul { margin: 0px; }\n              ul > li { margin-top: 5px; }\n            }\n          }\n        }\n      }\n    }\n\n    #survey-button { //font-size: 16px;\n      margin-top: 20px;\n    }\n  }\n}\n\n\n@media screen and (max-width: 850px) {\n  #container > #band-card {\n    max-width: 650px;\n  }\n}\n\n@media screen and (max-width: 700px) {\n  #container > #band-card {\n    max-width: 500px;\n  }\n}\n\n\n@media screen and (max-width: 550px) {\n  #container {\n    #band-card {\n      max-width: 430px;\n      padding: 0px;\n\n      #title { font-size: 20px;\n        margin-top: 16px;\n      }\n      .subtitle { font-size: 16px;\n        margin-bottom: 10px;\n      }\n\n      #band-info > .details {\n        padding: 10px;\n\n        strong { font-size: 16px; }\n        font-size: 14px;\n\n        #info-list {\n          margin-top: 8px;\n          margin-bottom: 12px;\n        }\n        #info-list > li { margin-top: 8px; }\n\n        #hq-info > li {\n          margin-top: 3px;\n        }\n        #location {\n          li { margin-top: 3px; }\n        }\n\n        #edit-info-button { font-size: 14px;\n          mat-icon {\n            width: 22px;\n            height: 22px;\n            font-size: 22px;\n          }\n        }\n      }\n    }\n  }\n}\n\n\n@media screen and (max-width: 450px) {\n  #container > #band-card {\n    background-color: aliceblue;\n    box-shadow: none;\n    max-width: 380px;\n\n    #title { margin-top: 10px; }\n\n    #band-info > .details {\n      margin: 0px;\n\n      #info-list, #hq-info, #location > ul {\n        padding-left: 30px;\n      }\n\n      .member {\n        margin-top: 8px;\n        margin-left: 20px;\n\n        .member-profile {\n          margin-bottom: 15px;\n          margin-right: 20px;\n\n          .profile-list > ul {\n            padding-left: 30px;\n          }\n        }\n      }\n    }\n  }\n}\n\n\n@media screen and (max-width: 400px) {\n  #container > #band-card {\n    max-width: 330px;\n\n    #title { margin-top: 0px; }\n\n    #band-info > .details {\n      #info-list { padding-left: 15px; }\n\n      .member { margin-left: 0px;\n        .member-profile { margin-right: 0px; }\n      }\n    }\n  }\n}\n\n\n@media screen and (max-width: 350px) {\n  #container > #band-card {\n    max-width: 284px;\n\n    #band-info > .details { padding: 6px;\n\n      #info-list, #hq-info, #location > ul {\n        padding-left: 16px;\n      }\n\n      .member > .member-profile { padding: 0px 6px;\n\n        .profile-list > ul { padding-left: 15px; }\n\n        .member-detail { margin: 12px 0px; }\n        .member-detail:first-child { margin-top: 6px; }\n        .member-detail:last-child { margin-bottom: 6px; }\n      }\n    }\n  }\n}\n\n\n@media screen and (max-width: 300px) {\n  #container > #band-card {\n    max-width: 263px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             {{ musicalBand.name }}       Incomplete Band      Complete Band               Band Information                  Music Genre: {{ musicalBand.musicGenre }} none          Date Formed: {{ musicalBand.dateFormed | date : \\'longDate\\' }}           Headquarters                           Location:                                  Country: {{ musicalBand.hq.country }}                  City: {{ musicalBand.hq.city }}                  Street: {{ musicalBand.hq.street }} -                                                            Size: {{ musicalBand.hq.squareMeters }} m2                            Size: unknown                                                Edit Info edit                       Members:                              {{ member.firstName }} {{ member.lastName }}             — playing {{ member.playedInstrument | lowercase }};             —  singer;                          Username: {{ shownProfile.username }}              Age:                  0\">{{ shownProfile.age }}                unknown                            Occupation:                 {{ shownProfile.occupation }} none                             Contact Info:                                  Email: {{ shownProfile.email }}                  Phone: {{ shownProfile.phoneNumber }}                                            Preferred Music Genre:                 {{shownProfile.preferredMusicGenre}} none                            Traits: {{ shownProfile.trait1 }}                , {{ shownProfile.trait2 }}                             Address:                                  Country: {{ shownProfile.address?.country }}                   City: {{ shownProfile.address?.city }}                   Street: {{ shownProfile.address?.street }} -                                                                              New Band Members Survey                      {{errorMessage}}'\n    var COMPONENTS = [{'name': 'AccountInfoComponent', 'selector': 'app-account-info'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BandFormComponent', 'selector': 'app-band-form'},{'name': 'BandInfoComponent', 'selector': 'app-band-info'},{'name': 'BandMembersSurveyComponent', 'selector': 'app-band-members-survey'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'SignupComponent', 'selector': 'app-register'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProfileFormComponent', 'selector': 'app-user-profile-form'}];\n    var DIRECTIVES = [{'name': 'ChangeBorderOnClickDirective', 'selector': '[changeBorderOnClick]'},{'name': 'WaitCursorDirective', 'selector': '[appWaitCursor]'}];\n    var ACTUAL_COMPONENT = {'name': 'BandInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BandMembersSurvey.html":{"url":"interfaces/BandMembersSurvey.html","title":"interface - BandMembersSurvey","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BandMembersSurvey\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/band-members-survey.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            canSing\n                                        \n                                \n                                \n                                        \n                                            city\n                                        \n                                \n                                \n                                        \n                                            country\n                                        \n                                \n                                \n                                        \n                                            maxAge\n                                        \n                                \n                                \n                                        \n                                            minAge\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            occupation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            playedInstrument\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            preferredMusicGenre\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            street\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            trait1\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            trait2\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canSing\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canSing:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxAge\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxAge:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minAge\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minAge:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        occupation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        occupation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        playedInstrument\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        playedInstrument:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preferredMusicGenre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        preferredMusicGenre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        street\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        street:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trait1\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        trait1:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trait2\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        trait2:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserProfile } from \"./user-profile\"\n\nexport interface BandMembersSurvey {\n    country: string\n    city: string\n    street?: string\n\n    minAge: number\n    maxAge: number\n    occupation?: string\n\n    canSing: boolean\n    playedInstrument?: string\n    preferredMusicGenre?: string\n\n    trait1?: string\n    trait2?: string\n};\n\nexport interface SurveyResult {\n    matchedUserId: string\n    matchedUserProfile: UserProfile\n    matchType: string\n}\n\nexport interface SurveyFormData {\n    bandId: string\n    username: string\n};\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BandMembersSurveyComponent.html":{"url":"components/BandMembersSurveyComponent.html","title":"component - BandMembersSurveyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BandMembersSurveyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/musical-bands/band-members-survey/band-members-survey.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-band-members-survey\n            \n\n\n\n            \n                styleUrls\n                ./band-members-survey.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./band-members-survey.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                matchedUsers\n                            \n                            \n                                    Public\n                                shownUsers\n                            \n                            \n                                    Public\n                                surveyForm\n                            \n                            \n                                    Public\n                                traits\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeDialog\n                            \n                            \n                                    Public\n                                completeSurvey\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                retakeSurvey\n                            \n                            \n                                    Public\n                                seeUserProfile\n                            \n                            \n                                    Public\n                                sendInvitation\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    country\n                                \n                                \n                                    city\n                                \n                                \n                                    street\n                                \n                                \n                                    minAge\n                                \n                                \n                                    maxAge\n                                \n                                \n                                    occupation\n                                \n                                \n                                    canSing\n                                \n                                \n                                    playedInstrument\n                                \n                                \n                                    preferredMusicGenre\n                                \n                                \n                                    trait1\n                                \n                                \n                                    trait2\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: SurveyFormData, dialogRef: MatDialogRef, userProfilesService: UserProfilesService, bandsService: MusicalBandsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/musical-bands/band-members-survey/band-members-survey.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        SurveyFormData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userProfilesService\n                                                  \n                                                        \n                                                                        UserProfilesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bandsService\n                                                  \n                                                        \n                                                                        MusicalBandsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        closeDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    closeDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/musical-bands/band-members-survey/band-members-survey.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        completeSurvey\n                        \n                    \n                \n            \n            \n                \n                    \n                    completeSurvey()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/musical-bands/band-members-survey/band-members-survey.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/musical-bands/band-members-survey/band-members-survey.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        retakeSurvey\n                        \n                    \n                \n            \n            \n                \n                    \n                    retakeSurvey()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/musical-bands/band-members-survey/band-members-survey.component.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        seeUserProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    seeUserProfile(profile: UserProfile)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/musical-bands/band-members-survey/band-members-survey.component.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    profile\n                                    \n                                                UserProfile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        sendInvitation\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendInvitation(surveyMatch: SurveyResult)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/musical-bands/band-members-survey/band-members-survey.component.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    surveyMatch\n                                    \n                                                SurveyResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        matchedUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SurveyResult[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/musical-bands/band-members-survey/band-members-survey.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        shownUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/musical-bands/band-members-survey/band-members-survey.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        surveyForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    country: new FormControl('', [Validators.required]),\n    city: new FormControl('', [Validators.required]),\n    street: new FormControl(null),\n    minAge: new FormControl(0),\n    maxAge: new FormControl(100),\n    occupation: new FormControl(null),\n    canSing: new FormControl(false),\n    playedInstrument: new FormControl(null),\n    preferredMusicGenre: new FormControl(null),\n    trait1: new FormControl(null),\n    trait2: new FormControl(null)\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/musical-bands/band-members-survey/band-members-survey.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        traits\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'Analytical',\n    'Charismatic',\n    'Confident',\n    'Creative',\n    'Friendly',\n    'Hard-working',\n    'Ingenious',\n    'Level-headed',\n    'Observant',\n    'Organized'\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/musical-bands/band-members-survey/band-members-survey.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        country\n                    \n                \n\n                \n                    \n                        getcountry()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/musical-bands/band-members-survey/band-members-survey.component.ts:58\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        city\n                    \n                \n\n                \n                    \n                        getcity()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/musical-bands/band-members-survey/band-members-survey.component.ts:62\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        street\n                    \n                \n\n                \n                    \n                        getstreet()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/musical-bands/band-members-survey/band-members-survey.component.ts:66\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        minAge\n                    \n                \n\n                \n                    \n                        getminAge()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/musical-bands/band-members-survey/band-members-survey.component.ts:70\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        maxAge\n                    \n                \n\n                \n                    \n                        getmaxAge()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/musical-bands/band-members-survey/band-members-survey.component.ts:74\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        occupation\n                    \n                \n\n                \n                    \n                        getoccupation()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/musical-bands/band-members-survey/band-members-survey.component.ts:78\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        canSing\n                    \n                \n\n                \n                    \n                        getcanSing()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/musical-bands/band-members-survey/band-members-survey.component.ts:82\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        playedInstrument\n                    \n                \n\n                \n                    \n                        getplayedInstrument()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/musical-bands/band-members-survey/band-members-survey.component.ts:86\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        preferredMusicGenre\n                    \n                \n\n                \n                    \n                        getpreferredMusicGenre()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/musical-bands/band-members-survey/band-members-survey.component.ts:90\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        trait1\n                    \n                \n\n                \n                    \n                        gettrait1()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/musical-bands/band-members-survey/band-members-survey.component.ts:94\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        trait2\n                    \n                \n\n                \n                    \n                        gettrait2()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/musical-bands/band-members-survey/band-members-survey.component.ts:98\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MusicalBandsService } from 'src/app/services/bands-services/musical-bands.service';\nimport { UserProfilesService } from 'src/app/services/users-service/user-profiles.service';\nimport { BandUserMatch } from 'src/app/interfaces/band-user-match';\nimport {\n  BandMembersSurvey,\n  SurveyFormData,\n  SurveyResult\n} from 'src/app/interfaces/band-members-survey';\nimport { User } from 'src/app/interfaces/user';\nimport { UserProfile } from 'src/app/interfaces/user-profile';\n\n@Component({\n  selector: 'app-band-members-survey',\n  templateUrl: './band-members-survey.component.html',\n  styleUrls: ['./band-members-survey.component.scss']\n})\nexport class BandMembersSurveyComponent implements OnInit {\n  public matchedUsers?: SurveyResult[];\n  public shownUsers: { [username: string]: User } = {};\n\n  public surveyForm: FormGroup = new FormGroup({\n    country: new FormControl('', [Validators.required]),\n    city: new FormControl('', [Validators.required]),\n    street: new FormControl(null),\n    minAge: new FormControl(0),\n    maxAge: new FormControl(100),\n    occupation: new FormControl(null),\n    canSing: new FormControl(false),\n    playedInstrument: new FormControl(null),\n    preferredMusicGenre: new FormControl(null),\n    trait1: new FormControl(null),\n    trait2: new FormControl(null)\n  });\n\n  public traits: string[] = [\n    'Analytical',\n    'Charismatic',\n    'Confident',\n    'Creative',\n    'Friendly',\n    'Hard-working',\n    'Ingenious',\n    'Level-headed',\n    'Observant',\n    'Organized'\n  ];\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) private data: SurveyFormData,\n    private dialogRef: MatDialogRef,\n    private userProfilesService: UserProfilesService,\n    private bandsService: MusicalBandsService\n  ) {}\n\n  get country(): AbstractControl {\n    return this.surveyForm.get('country')!;\n  }\n\n  get city(): AbstractControl {\n    return this.surveyForm.get('city')!;\n  }\n\n  get street(): AbstractControl {\n    return this.surveyForm.get('street')!;\n  }\n\n  get minAge(): AbstractControl {\n    return this.surveyForm.get('minAge')!;\n  }\n\n  get maxAge(): AbstractControl {\n    return this.surveyForm.get('maxAge')!;\n  }\n\n  get occupation(): AbstractControl {\n    return this.surveyForm.get('occupation')!;\n  }\n\n  get canSing(): AbstractControl {\n    return this.surveyForm.get('canSing')!;\n  }\n\n  get playedInstrument(): AbstractControl {\n    return this.surveyForm.get('playedInstrument')!;\n  }\n\n  get preferredMusicGenre(): AbstractControl {\n    return this.surveyForm.get('preferredMusicGenre')!;\n  }\n\n  get trait1(): AbstractControl {\n    return this.surveyForm.get('trait1')!;\n  }\n\n  get trait2(): AbstractControl {\n    return this.surveyForm.get('trait2')!;\n  }\n\n  public closeDialog(): void {\n    this.dialogRef.close();\n  }\n\n  ngOnInit(): void {\n    this.bandsService\n      .getMatchedUserProfiles(this.data.bandId)\n      .subscribe((matchedUsers: SurveyResult[]) => {\n        if (matchedUsers.length > 0) this.matchedUsers = matchedUsers;\n        //console.log(this.matchedUsers)\n      });\n  }\n\n  \n  public completeSurvey(): void {\n    const survey: BandMembersSurvey = this.surveyForm.value;\n    this.userProfilesService.getSurveyMatches(survey).subscribe((surveyMatches: SurveyResult[]) => {\n      //console.log(surveyMatches)\n      this.matchedUsers = surveyMatches;\n      let newMatches: BandUserMatch[] = [];\n      for (const surveyMatch of surveyMatches) {\n        const newMatch: BandUserMatch = {\n          bandId: this.data.bandId,\n          userId: surveyMatch.matchedUserId,\n          matchType: 'survey match'\n        };\n        newMatches.push(newMatch);\n      }\n      this.bandsService.saveBandUserMatches(newMatches, this.data.username).subscribe();\n    });\n  }\n\n  public retakeSurvey(): void {\n    this.bandsService.deleteBandMatches(this.data.bandId, this.data.username).subscribe();\n    this.matchedUsers = undefined;\n  }\n\n\n  public sendInvitation(surveyMatch: SurveyResult): void {\n    const user: string =\n      surveyMatch.matchedUserProfile.firstName + ' ' + surveyMatch.matchedUserProfile.lastName;\n    if (window.confirm('Send ' + user + ' an invitation to join your band?')) {\n      let invitation: BandUserMatch = {\n        bandId: this.data.bandId,\n        userId: surveyMatch.matchedUserId,\n        matchType: 'invitation'\n      };\n      this.bandsService.updateBandUserMatch(invitation, this.data.username).subscribe(() => {\n        surveyMatch.matchType = 'invitation';\n      });\n    }\n  }\n\n  public seeUserProfile(profile: UserProfile): void {\n    if (this.shownUsers[profile.username]) delete this.shownUsers[profile.username];\n    else {\n      const user: User = {\n        userId: '',\n        username: profile.username,\n        email: profile.email,\n        userRoles: [],\n        profile: profile\n      };\n      this.shownUsers[profile.username] = user;\n    }\n  }\n}\n\n    \n\n    \n        \n  Find New Band Members\n\n  \n    1. What address do you want the new band members to have?\n    \n      Country\n      \n      \n        This field cannot be empty!\n      \n    \n\n    \n      City\n      \n      \n        This field cannot be empty!\n      \n    \n\n    \n      Street\n      \n    \n\n    \n      2. Are you looking for a singer?\n      \n        \n          \n          Yes\n        \n        \n          \n          No\n        \n      \n    \n\n    3. Other information used to search for new members:\n    \n      Instrument Played\n      \n    \n\n    \n      Preferred Music Genre\n      \n    \n\n    \n      Trait 1\n      \n        None\n        {{ trait }}\n      \n    \n\n    \n      Trait 2\n      \n        None\n        {{ trait }}\n      \n    \n\n    \n      Minimum Age\n      \n      \n        Minimum allowed number is 0!\n      \n      \n        Maximum allowed number is 100!\n      \n    \n\n    \n      Maximum Age\n      \n      \n        Minimum allowed number is 0!\n      \n      \n        Maximum allowed number is 100!\n      \n    \n\n    \n      Occupation\n      \n    \n  \n\n  \n    \n      Complete Survey\n    \n\n    Cancel\n  \n\n\n\n\n  Survey Results\n   0\">\n    Best Matches:\n    \n      \n        &#9655; {{ surveyResult.matchedUserProfile.firstName }} {{ surveyResult.matchedUserProfile.lastName }}\n      \n      \n      \n        Send invitation to join the band\n        Sent invitation\n      \n\n      declined the invitation\n      joined some other band\n\n      \n        \n      \n    \n  \n\n  No match found\n\n  \n    Retake Survey\n    Close\n  \n\n\n    \n\n    \n                \n                    ./band-members-survey.component.scss\n                \n                #form-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 10px;\n\n  #title {\n    font-size: 24px;\n    margin-top: 0px;\n  }\n\n  //p, #radio-buttons { font-size: 16px; }\n\n  #survey-form {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n\n    mat-form-field {\n      .alert {\n        color: red;\n      }\n      width: 80%;\n      margin-bottom: 10px;\n    }\n\n    #can-sing-question {\n      display: flex;\n      margin-top: 10px;\n      margin-bottom: 28px;\n      margin-right: 5px;\n\n      #radio-buttons {\n        display: flex;\n        span {\n          display: flex;\n          input {\n            margin: 0px 5px 0px 40px;\n          }\n        }\n      }\n    }\n\n    p:first-child {\n      width: 439.3px;\n    }\n    p:nth-of-type(2) {\n      width: 384px;\n    }\n    p {\n      text-align: justify;\n    }\n  }\n\n  .actions > button {\n    margin: 0px 20px;\n  }\n}\n\n@media screen and (max-width: 600px) {\n  #form-container > #survey-form {\n    p:first-child {\n      width: fit-content;\n    }\n\n    mat-form-field {\n      width: 85%;\n    }\n  }\n}\n\n@media screen and (max-width: 555px) {\n  #form-container > #survey-form {\n    p:nth-of-type(2) {\n      width: fit-content;\n      max-width: 315px;\n    }\n    p:first-child {\n      max-width: 325px;\n    }\n\n    mat-form-field {\n      width: 90%;\n    }\n\n    #can-sing-question {\n      margin-right: 30px;\n      #radio-buttons {\n        flex-direction: column;\n\n        span:first-child {\n          margin-bottom: 10px;\n        }\n        span {\n          input {\n            margin-left: 20px;\n          }\n        }\n      }\n    }\n  }\n}\n\n@media screen and (max-width: 470px) {\n  #form-container {\n    #survey-form {\n      mat-form-field {\n        width: 100%;\n      }\n\n      p:first-child, p:nth-of-type(2) {\n        max-width: 290px;\n      }\n\n      #can-sing-question {\n        margin-right: 15px;\n        #radio-buttons {\n          span:first-child {\n            margin-bottom: 5px;\n          }\n          span {\n            input {\n              margin-left: 10px;\n            }\n          }\n        }\n      }\n    }\n\n    .actions > button {\n      margin: 0px 15px;\n    }\n  }\n}\n\n@media screen and (max-width: 440px) {\n  #form-container {\n    font-size: 14px;\n    padding: 0px;\n\n    #title {\n      font-size: 20px;\n      text-align: center;\n    }\n\n    #survey-form {\n      align-items: flex-start;\n\n      #can-sing-question {\n        margin-right: 0px;\n      }\n    }\n\n    .actions > button {\n      margin: 0px 10px;\n    }\n  }\n}\n\n@media screen and (max-width: 380px) {\n  #form-container {\n    #survey-form {\n      #can-sing-question {\n        flex-direction: column;\n  \n        #radio-buttons {\n          margin-left: 5px;\n          span:first-child {\n            margin-top: 5px;\n          }\n        }\n      }\n    }\n    \n    .actions > button {\n      margin: 5px;\n      padding: 0px 10px;\n    }\n  }\n}\n\n// --------------------------------------------------------------------------------------------\n\n#results-container {\n  padding: 15px;\n\n  h1 {\n    font-size: 28px;\n    margin-top: 0px;\n    margin-bottom: 25px;\n  }\n\n  #noMatch {\n    font-size: 18px;\n    margin: 0px;\n  }\n\n  h2 {\n    font-size: 20px;\n    margin-top: 0px;\n    margin-bottom: 0px;\n  }\n\n  .results {\n    margin-left: 30px;\n    margin-top: 10px;\n    font-size: 18px;\n\n    button {\n      border: 2px outset rgb(200, 209, 226);\n      border-radius: 3px;\n      background-color: rgb(239, 243, 247);\n      padding: 5px;\n      cursor: pointer;\n    }\n    button:disabled {\n      cursor: auto;\n      background-color: rgb(236, 238, 240);\n      border-color: rgb(217, 221, 228);\n      color: rgb(148, 149, 151);\n    }\n\n    .name:hover {\n      cursor: pointer;\n      color: cornflowerblue;\n    }\n\n    .declined {\n      color: tomato;\n    }\n\n    .profile {\n      margin-left: 15px;\n      margin-bottom: 30px;\n    }\n  }\n\n  .actions {\n    margin-top: 30px;\n    button:first-child {\n      margin-right: 30px;\n    }\n  }\n}\n\n@media screen and (max-width: 550px) {\n  #results-container {\n    padding: 10px;\n    .results {\n      margin-left: 20px;\n      font-size: 16px;\n    }\n  }\n}\n\n@media screen and (max-width: 500px) {\n  #results-container {\n    padding: 5px;\n    .results {\n      margin-left: 0px;\n      .profile {\n        margin-left: 0px;\n      }\n    }\n  }\n}\n\n@media screen and (max-width: 450px) {\n  #results-container {\n    padding: 0px;\n\n    h1 {\n      font-size: 24px;\n    }\n    h2 {\n      font-size: 18px;\n    }\n\n    .results {\n      font-size: 14px;\n    }\n  }\n}\n\n@media screen and (max-width: 360px) {\n  #results-container {\n    .results {\n      .profile {\n        margin-top: 5px;\n      }\n    }\n\n    .actions {\n      button:first-child {\n        margin-right: 20px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Find New Band Members      1. What address do you want the new band members to have?          Country                    This field cannot be empty!                    City                    This field cannot be empty!                    Street                    2. Are you looking for a singer?                                  Yes                                    No                      3. Other information used to search for new members:          Instrument Played                    Preferred Music Genre                    Trait 1              None        {{ trait }}                    Trait 2              None        {{ trait }}                    Minimum Age                    Minimum allowed number is 0!                    Maximum allowed number is 100!                    Maximum Age                    Minimum allowed number is 0!                    Maximum allowed number is 100!                    Occupation                        Complete Survey        Cancel    Survey Results   0\">    Best Matches:                  ▷ {{ surveyResult.matchedUserProfile.firstName }} {{ surveyResult.matchedUserProfile.lastName }}                          Send invitation to join the band        Sent invitation            declined the invitation      joined some other band                            No match found      Retake Survey    Close  '\n    var COMPONENTS = [{'name': 'AccountInfoComponent', 'selector': 'app-account-info'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BandFormComponent', 'selector': 'app-band-form'},{'name': 'BandInfoComponent', 'selector': 'app-band-info'},{'name': 'BandMembersSurveyComponent', 'selector': 'app-band-members-survey'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'SignupComponent', 'selector': 'app-register'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProfileFormComponent', 'selector': 'app-user-profile-form'}];\n    var DIRECTIVES = [{'name': 'ChangeBorderOnClickDirective', 'selector': '[changeBorderOnClick]'},{'name': 'WaitCursorDirective', 'selector': '[appWaitCursor]'}];\n    var ACTUAL_COMPONENT = {'name': 'BandMembersSurveyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BandUserMatch.html":{"url":"interfaces/BandUserMatch.html","title":"interface - BandUserMatch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BandUserMatch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/band-user-match.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bandId\n                                        \n                                \n                                \n                                        \n                                            matchType\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bandId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bandId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        matchType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        matchType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BandUserMatch {\n    bandId: string;\n    userId: string;\n    matchType: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CanDeactivateComponent.html":{"url":"interfaces/CanDeactivateComponent.html","title":"interface - CanDeactivateComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CanDeactivateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/can-deactivate.guard.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            canDeactivate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canDeactivate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canDeactivate:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanDeactivate, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nexport interface CanDeactivateComponent {\n  canDeactivate: () => Observable | boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CanDeactivateGuard implements CanDeactivate {\n  canDeactivate(\n    component: CanDeactivateComponent,\n    _currentRoute: ActivatedRouteSnapshot,\n    _currentState: RouterStateSnapshot,\n    _nextState?: RouterStateSnapshot\n  ): Observable | boolean {\n    return component.canDeactivate ? component.canDeactivate() : true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CanDeactivateGuard.html":{"url":"guards/CanDeactivateGuard.html","title":"guard - CanDeactivateGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    CanDeactivateGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/can-deactivate.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canDeactivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canDeactivate\n                        \n                    \n                \n            \n            \n                \ncanDeactivate(component: CanDeactivateComponent, _currentRoute: ActivatedRouteSnapshot, _currentState: RouterStateSnapshot, _nextState?: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/can-deactivate.guard.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                CanDeactivateComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _currentRoute\n                                    \n                                            ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _currentState\n                                    \n                                            RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _nextState\n                                    \n                                            RouterStateSnapshot\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanDeactivate, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nexport interface CanDeactivateComponent {\n  canDeactivate: () => Observable | boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CanDeactivateGuard implements CanDeactivate {\n  canDeactivate(\n    component: CanDeactivateComponent,\n    _currentRoute: ActivatedRouteSnapshot,\n    _currentState: RouterStateSnapshot,\n    _nextState?: RouterStateSnapshot\n  ): Observable | boolean {\n    return component.canDeactivate ? component.canDeactivate() : true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ChangeBorderOnClickDirective.html":{"url":"directives/ChangeBorderOnClickDirective.html","title":"directive - ChangeBorderOnClickDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ChangeBorderOnClickDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/change-border-on-click.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [changeBorderOnClick]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                nativeElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                changeBorderOnMouseDown\n                            \n                            \n                                    \n                                changeBorderOnMouseLeave\n                            \n                            \n                                    \n                                changeBorderOnMouseUp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                defaultBorderStyle\n                            \n                            \n                                mousedownBorderStyle\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                mousedown\n                            \n                            \n                                mouseleave\n                            \n                            \n                                mouseup\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/change-border-on-click.directive.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        defaultBorderStyle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/change-border-on-click.directive.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mousedownBorderStyle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/change-border-on-click.directive.ts:11\n                            \n                        \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            mousedown\n                        \n                        \n                    \n                \n            \n\n\n            \n                \n                    Defined in src/app/change-border-on-click.directive.ts:13\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseleave\n                        \n                        \n                    \n                \n            \n\n\n            \n                \n                    Defined in src/app/change-border-on-click.directive.ts:21\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseup\n                        \n                        \n                    \n                \n            \n\n\n            \n                \n                    Defined in src/app/change-border-on-click.directive.ts:17\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        changeBorderOnMouseDown\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeBorderOnMouseDown()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('mousedown')\n                \n            \n\n            \n                \n                    Defined in src/app/change-border-on-click.directive.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        changeBorderOnMouseLeave\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeBorderOnMouseLeave()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('mouseleave')\n                \n            \n\n            \n                \n                    Defined in src/app/change-border-on-click.directive.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        changeBorderOnMouseUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeBorderOnMouseUp()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('mouseup')\n                \n            \n\n            \n                \n                    Defined in src/app/change-border-on-click.directive.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        nativeElement\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.elementRef.nativeElement\n                    \n                \n                    \n                        \n                                Defined in src/app/change-border-on-click.directive.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\n@Directive({\n  selector: '[changeBorderOnClick]'\n})\nexport class ChangeBorderOnClickDirective {\n  constructor(private elementRef: ElementRef) {}\n  private nativeElement = this.elementRef.nativeElement;\n\n  @Input() defaultBorderStyle = '';\n  @Input() mousedownBorderStyle = '';\n\n  @HostListener('mousedown') changeBorderOnMouseDown() {\n    this.nativeElement.style.borderStyle = this.mousedownBorderStyle;\n  }\n\n  @HostListener('mouseup') changeBorderOnMouseUp() {\n    this.nativeElement.style.borderStyle = this.defaultBorderStyle;\n  }\n\n  @HostListener('mouseleave') changeBorderOnMouseLeave() {\n    this.nativeElement.style.borderStyle = this.defaultBorderStyle;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChangePassword.html":{"url":"interfaces/ChangePassword.html","title":"interface - ChangePassword","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChangePassword\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/change_password.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            newPassword\n                                        \n                                \n                                \n                                        \n                                            oldPassword\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        newPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        oldPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        oldPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ChangePassword\n{\n    username: string\n    oldPassword: string\n    newPassword: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmationDialogComponent.html":{"url":"components/ConfirmationDialogComponent.html","title":"component - ConfirmationDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConfirmationDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/material/confirmation-dialog/confirmation-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirmation-dialog\n            \n\n\n\n            \n                styleUrls\n                ./confirmation-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./confirmation-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                acceptButton\n                            \n                            \n                                cancelButton\n                            \n                            \n                                    \n                                    Public\n                                dialogData\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                message\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onAccept\n                            \n                            \n                                onCancel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, dialogData: ConfirmationDialogModel)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/material/confirmation-dialog/confirmation-dialog.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogData\n                                                  \n                                                        \n                                                                        ConfirmationDialogModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onAccept\n                        \n                    \n                \n            \n            \n                \nonAccept()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/material/confirmation-dialog/confirmation-dialog.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/material/confirmation-dialog/confirmation-dialog.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        acceptButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/material/confirmation-dialog/confirmation-dialog.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancelButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/material/confirmation-dialog/confirmation-dialog.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        dialogData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfirmationDialogModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/material/confirmation-dialog/confirmation-dialog.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/material/confirmation-dialog/confirmation-dialog.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/material/confirmation-dialog/confirmation-dialog.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/material/confirmation-dialog/confirmation-dialog.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirmation-dialog',\n  templateUrl: './confirmation-dialog.component.html',\n  styleUrls: ['./confirmation-dialog.component.scss']\n})\nexport class ConfirmationDialogComponent {\n  title: string;\n  message: string;\n  acceptButton: string;\n  cancelButton: string;\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public dialogData: ConfirmationDialogModel\n  ) {\n    this.title = dialogData.title;\n    this.message = dialogData.message;\n    this.acceptButton = dialogData.acceptButton;\n    this.cancelButton = dialogData.cancelButton;\n  }\n\n  onAccept(): void {\n    this.dialogRef.close(true);\n  }\n  onCancel(): void {\n    this.dialogRef.close(false);\n  }\n}\n\nexport class ConfirmationDialogModel {\n  constructor(\n    public title: string,\n    public message: string,\n    public acceptButton: string = 'Yes',\n    public cancelButton: string = 'No'\n  ) {}\n}\n\n    \n\n    \n        \n  {{ title }}\n\n  {{ message }}\n\n  \n    {{ acceptButton }}\n    {{ cancelButton }}\n  \n\n\n    \n\n    \n                \n                    ./confirmation-dialog.component.scss\n                \n                #dialog {\n    #title { margin: 0px 0px 30px;\n        text-align: justify;\n    }\n\n    #message { margin: 0px 0px 30px; \n        text-align: justify;\n    }\n\n    #acceptButton { color: white;\n        background-color: royalblue;\n        margin-right: 20px;\n    }\n\n    #cancelButton { color: darkblue; }\n\n    #acceptButton, #cancelButton {\n        border-width: 2px; border-color: darkblue;\n    }\n}\n\n\n@media screen and (max-width: 300px) {\n    #dialog { display: flex;\n        flex-direction: column;\n        align-items: center;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ title }}  {{ message }}      {{ acceptButton }}    {{ cancelButton }}  '\n    var COMPONENTS = [{'name': 'AccountInfoComponent', 'selector': 'app-account-info'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BandFormComponent', 'selector': 'app-band-form'},{'name': 'BandInfoComponent', 'selector': 'app-band-info'},{'name': 'BandMembersSurveyComponent', 'selector': 'app-band-members-survey'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'SignupComponent', 'selector': 'app-register'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProfileFormComponent', 'selector': 'app-user-profile-form'}];\n    var DIRECTIVES = [{'name': 'ChangeBorderOnClickDirective', 'selector': '[changeBorderOnClick]'},{'name': 'WaitCursorDirective', 'selector': '[appWaitCursor]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmationDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfirmationDialogModel.html":{"url":"classes/ConfirmationDialogModel.html","title":"class - ConfirmationDialogModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfirmationDialogModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/material/confirmation-dialog/confirmation-dialog.component.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                acceptButton\n                            \n                            \n                                    Public\n                                cancelButton\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(title: string, message: string, acceptButton: string, cancelButton: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/material/confirmation-dialog/confirmation-dialog.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        acceptButton\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cancelButton\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        acceptButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Yes'\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/material/confirmation-dialog/confirmation-dialog.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cancelButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'No'\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/material/confirmation-dialog/confirmation-dialog.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/material/confirmation-dialog/confirmation-dialog.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/material/confirmation-dialog/confirmation-dialog.component.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirmation-dialog',\n  templateUrl: './confirmation-dialog.component.html',\n  styleUrls: ['./confirmation-dialog.component.scss']\n})\nexport class ConfirmationDialogComponent {\n  title: string;\n  message: string;\n  acceptButton: string;\n  cancelButton: string;\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public dialogData: ConfirmationDialogModel\n  ) {\n    this.title = dialogData.title;\n    this.message = dialogData.message;\n    this.acceptButton = dialogData.acceptButton;\n    this.cancelButton = dialogData.cancelButton;\n  }\n\n  onAccept(): void {\n    this.dialogRef.close(true);\n  }\n  onCancel(): void {\n    this.dialogRef.close(false);\n  }\n}\n\nexport class ConfirmationDialogModel {\n  constructor(\n    public title: string,\n    public message: string,\n    public acceptButton: string = 'Yes',\n    public cancelButton: string = 'No'\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomValidators.html":{"url":"classes/CustomValidators.html","title":"class - CustomValidators","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomValidators\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/auth/custom-validators.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                forbiddenCharacters\n                            \n                            \n                                    Static\n                                matchValidator\n                            \n                            \n                                    Static\n                                passwordValidator\n                            \n                            \n                                    Static\n                                uniqueUsernameValidator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forbiddenCharacters\n                        \n                    \n                \n            \n            \n                \n                    \n                    forbiddenCharacters(forbiddenCharRegEx: RegExp)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/custom-validators.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    forbiddenCharRegEx\n                                    \n                                            RegExp\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        matchValidator\n                        \n                    \n                \n            \n            \n                \n                    \n                    matchValidator(source: string, target: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/custom-validators.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    target\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        passwordValidator\n                        \n                    \n                \n            \n            \n                \n                    \n                    passwordValidator()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/custom-validators.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ValidatorFn\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        uniqueUsernameValidator\n                        \n                    \n                \n            \n            \n                \n                    \n                    uniqueUsernameValidator(authService: AuthService)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/custom-validators.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authService\n                                    \n                                                AuthService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     AsyncValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl, AsyncValidatorFn, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { of } from 'rxjs';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { catchError, map } from 'rxjs/operators';\nimport { AuthService } from 'src/app/services/auth-service/auth.service';\n\nexport class CustomValidators {\n  static forbiddenCharacters(forbiddenCharRegEx: RegExp): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const forbidden = forbiddenCharRegEx.test(control.value);\n      return forbidden ? { hasForbiddenChar: true } : null;\n    };\n  }\n\n  static passwordValidator(): ValidatorFn {\n    const regEx = /(?=.*[a-z]+)(?=.*[A-Z]+)(?=.*[0-9]+)(?=.*[^a-zA-Z0-9]+)/;\n    return (control: AbstractControl): ValidationErrors | null => {\n      const valid = regEx.test(control.value);\n      return valid ? null : { invalidPassword: { value: control.value } };\n    };\n  }\n\n  static uniqueUsernameValidator(authService: AuthService): AsyncValidatorFn {\n    return (control: AbstractControl): Observable => {\n      return authService.checkIfUsernameExists(control.value).pipe(\n        map(response => {\n          return response.usernameExists\n            ? { usernameAlreadyExists: { username: control.value } }\n            : null;\n        }),\n        catchError((err) => of({ usernameAlreadyExists: { error: err } }))\n      );\n    };\n  }\n\n  static matchValidator(source: string, target: string): ValidatorFn {\n    return (formControl: AbstractControl): ValidationErrors | null => {\n      const sourceControl = formControl.get(source);\n      const targetControl = formControl.get(target);\n\n      if (sourceControl && targetControl)\n        if (sourceControl.value !== targetControl.value) {\n          targetControl.setErrors({ mismatchedValues: true });\n          return { mismatchedValues: true };\n        } else {\n          targetControl.setErrors(null);\n          return null;\n        }\n      else return null;\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Invitation.html":{"url":"interfaces/Invitation.html","title":"interface - Invitation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Invitation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/invitation.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bandToJoinId\n                                        \n                                \n                                \n                                        \n                                            bandToJoinName\n                                        \n                                \n                                \n                                        \n                                            invitedUserId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bandToJoinId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bandToJoinId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bandToJoinName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bandToJoinName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invitedUserId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invitedUserId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Invitation {\n    invitedUserId: string\n    bandToJoinId: string\n    bandToJoinName: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/auth/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errorMessage\n                            \n                            \n                                    \n                                    Private\n                                formFields\n                            \n                            \n                                    Private\n                                formIsObserved\n                            \n                            \n                                    Public\n                                loginForm\n                            \n                            \n                                    Public\n                                newUser\n                            \n                            \n                                    Private\n                                nonexistentUsernames\n                            \n                            \n                                    Private\n                                onFormMouseDown\n                            \n                            \n                                    Private\n                                resizeObserver\n                            \n                            \n                                    Public\n                                showPassword\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                logIn\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                onUsernameChange\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    username\n                                \n                                \n                                    password\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/auth/login/login.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        logIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    logIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/login/login.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/login/login.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/login/login.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        onUsernameChange\n                        \n                    \n                \n            \n            \n                \n                    \n                    onUsernameChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/login/login.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/login/login.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        formFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChildren('formField')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/login/login.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        formIsObserved\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/login/login.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    username: new FormControl('', [\n      Validators.required,\n      Validators.minLength(2),\n      Validators.maxLength(30),\n      CustomValidators.forbiddenCharacters(/[^-\\w]/)\n    ]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(6),\n      Validators.maxLength(25)\n    ])\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/login/login.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        newUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : localStorage.getItem('New User')\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/login/login.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        nonexistentUsernames\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/login/login.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        onFormMouseDown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/login/login.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resizeObserver\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ResizeObserver(() => {\n    this.formFields.forEach((formField) => {\n      formField.updateOutlineGap();\n    });\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/login/login.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        showPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/login/login.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/login/login.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/auth/login/login.component.ts:37\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/auth/login/login.component.ts:40\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnDestroy, OnInit, QueryList, ViewChildren } from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatFormField } from '@angular/material/form-field';\nimport { Subscription } from 'rxjs/internal/Subscription';\nimport { AuthService } from 'src/app/services/auth-service/auth.service';\nimport { CustomValidators } from '../custom-validators';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  public errorMessage: string = '';\n  public showPassword: boolean = false;\n  public newUser: string | null = localStorage.getItem('New User');\n\n  private nonexistentUsernames: string[] = [];\n  private subscription: Subscription | undefined;\n\n  constructor(private authService: AuthService) {}\n\n  public loginForm: FormGroup = new FormGroup({\n    username: new FormControl('', [\n      Validators.required,\n      Validators.minLength(2),\n      Validators.maxLength(30),\n      CustomValidators.forbiddenCharacters(/[^-\\w]/)\n    ]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(6),\n      Validators.maxLength(25)\n    ])\n  });\n\n  public get username(): AbstractControl {\n    return this.loginForm.get('username')!;\n  }\n  public get password(): AbstractControl {\n    return this.loginForm.get('password')!;\n  }\n\n  @ViewChildren('formField') private formFields!: QueryList;\n\n  private resizeObserver = new ResizeObserver(() => {\n    this.formFields.forEach((formField) => {\n      formField.updateOutlineGap();\n    });\n  });\n  private formIsObserved = false;\n\n  ngOnInit(): void { document.cookie = 'Token_Expiry_Date=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\n    this.onUsernameChange();\n    if (this.newUser) {\n      document.getElementById('login-section')?.classList.add('login-prompt');\n      this.loginForm.patchValue({ username: this.newUser });\n      const firstFormInput = document.querySelector('.form-input')!;\n      this.resizeObserver.observe(firstFormInput);\n      this.formIsObserved = true;\n    } else\n      document.getElementById('login-form')?.addEventListener('mousedown', this.onFormMouseDown);\n  }\n\n  private onFormMouseDown = (event: Event) => {\n    const target = event.target as HTMLElement;\n    if (target.id != 'login-form' && target.classList.contains('mat-button-wrapper') == false)\n      if (target.classList.contains('mat-form-field-wrapper') == false) {\n        this.resizeObserver.observe(target);\n        this.formIsObserved = true;\n        document.getElementById('login-form')?.removeEventListener('mousedown', this.onFormMouseDown);   \n      }\n  };\n\n  private onUsernameChange(): void {\n    this.loginForm.get('username')?.valueChanges.subscribe((usernameValue) => {\n      if (this.nonexistentUsernames.includes(usernameValue))\n        this.username.setErrors({ usernameNotFound: usernameValue });\n      else if (this.errorMessage == 'The username was not found!') this.errorMessage = '';\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.formIsObserved) this.resizeObserver.disconnect();\n    if (this.subscription && this.subscription.closed == false) this.subscription.unsubscribe();\n  }\n\n  public logIn(): void {\n    if (this.subscription == undefined)\n      window.addEventListener('beforeunload', () => {\n        if (this.subscription && !this.subscription.closed) this.subscription.unsubscribe();\n      });\n\n    if (this.subscription == undefined || this.subscription.closed) {\n      const formData = this.loginForm.value;\n      this.subscription = this.authService.logInUser(formData.username, formData.password).subscribe({\n        next: () => {\n          if (this.newUser) localStorage.removeItem('New User');\n          localStorage.setItem('User', formData.username);\n          window.location.href = `/users/account/${formData.username}`;\n          //this.subscription!.unsubscribe();\n        },\n        error: (err) => {\n          this.errorMessage = err.message;\n          if (err.message == 'The username was not found!') {\n            this.nonexistentUsernames.push(formData.username);\n            this.username.setErrors({ usernameNotFound: formData.username });\n          }\n        }\n      });\n    }\n  }\n  \n}\n\n    \n\n    \n        \n   Welcome guest! \n\n  \n    \n      If you have an account, please log in to access all the website's features: \n    \n     You must log in to continue to the website: \n\n    \n      \n         The username can only contain letters, numbers, hyphens and underscores. \n      \n      \n         Username \n        \n          \n           account_box \n          \n        \n          \n            A username of at least 2 characters is required!\n          \n          \n            A username cannot have more than 30 characters.\n          \n          \n            This username does not exist.\n          \n        \n      \n    \n      \n         Password \n        \n          \n          \n            {{showPassword ? 'visibility' : 'visibility_off'}} \n          \n        \n        \n          \n            The password is required!\n          \n          \n            The password must be at least 6 characters long.\n          \n          \n            The password cannot have more than 25 characters.\n          \n        \n      \n\n      \n        Log in \n      \n    \n\n    \n      Login failed! {{errorMessage}}\n    \n  \n\n  \n    \n      If you haven't signed up yet, click here to create your account:\n    \n    Sign up\n  \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                #container {\n    #greeting, #login-message { //margin: 15px;\n        margin-top: 20px;\n        margin-bottom: 15px; \n    }\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    .login-prompt { padding-bottom: 20px;\n        margin-top: auto; margin-bottom: auto; //center vertically\n\n        h3 { text-align: justify; \n            margin: 0px 0px 15px;\n            min-width: 311.2px;\n        }\n    }\n\n    #login-section { display: flex;\n        flex-direction: column;\n        align-items: center;\n\n        #login-message { text-align: justify; }\n\n        #login-form { display: flex;\n            flex-direction: column;\n            align-items: center;\n            \n            background-color: lightcyan;\n            border: 4px ridge lightblue;\n            border-radius: 5px;\n            padding: 30px;\n\n            #username-warning { width: 370px;\n                margin-bottom: 5px;\n\n                div { padding: 10px;\n                    border: 2px solid red; \n                    border-radius: 5px;\n                    text-align: justify;\n                    font-size: 16px; color: red;\n                }\n            }\n\n            mat-form-field { width: 370px;\n                margin-bottom: 10px;\n\n                .form-input { display: grid;\n                    grid-template-columns: auto 24px;\n                    grid-template-rows: 24px;\n                    margin-top: -7px;\n\n                    input { //height: 24px;\n                        margin-top: auto; \n                        margin-bottom: auto;\n                    }\n                }\n\n                #eye-icon { cursor: pointer; }\n\n                .alert { //color: red;\n                    font-size: 14px;\n                }\n            }\n            \n            #login-button { margin-top: 4px;\n                background-color: lightblue;\n                padding: 0px;\n            }\n            #login-button:disabled {\n                background-color: lightgray;\n                cursor: not-allowed;\n            }\n        }\n     \n        #login-error { margin-top: 20px; padding: 5px;\n            background-color: rgb(241, 224, 224);\n            border: 2.5px solid red; \n            border-radius: 10px;\n\n            #underline-text { margin-bottom: 3px;\n                font-size: 18px; text-align: center;\n                text-decoration: underline red solid 2px;\n                text-underline-offset: 2px;\n            }\n            text-align: justify; color: red;\n        }\n    }\n\n    #signup-redirect { margin-top: 40px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-wrap: wrap;\n        \n        #redirect-message { margin: 7px 5px;\n            text-align: center;\n        }\n\n        #redirect-button { //margin-left: 10px;            \n            border: 2px outset rgb(201, 201, 230);\n            background-color: lavender;\n            padding: 2px 12px;\n        }\n        #redirect-button:hover {\n            background-color: rgb(215, 240, 240);\n        }\n    }\n}\n\n\n@media screen and (max-width: 660px) {\n    #login-message { width: 415px; }\n}\n\n@media screen and (max-width: 505px) {\n    #signup-redirect {\n        #redirect-message { width: 235px; }\n        #redirect-button { margin: 0px 5px; }\n    }\n}\n\n@media screen and (max-width: 480px) {\n    #container {\n        #greeting, #login-message {\n            margin-bottom: 10px;\n        }\n\n        .login-prompt>h3 { margin-bottom: 10px; }\n\n        #login-section { \n            #login-message { width: 385px;\n                text-align: center;\n            }\n\n            #login-form { padding: 25px;\n                #username-warning { width: 330px;\n                    div { font-size: 14px; }\n                }\n                mat-form-field { width: 330px;\n                    .alert { font-size: 12px;\n                        text-align: center;\n                    }\n                }\n            }\n\n            #login-error { margin-top: 15px; }\n        }\n\n        #signup-redirect { margin-top: 35px; \n            flex-direction: column; \n        }\n    }\n}\n\n@media screen and (max-width: 430px) {\n    #container {\n        font-size: 14px;\n        button { font-size: 14px; }\n\n        #login-section { \n            #login-message { width: 305px; }\n\n            #login-form { padding: 20px;\n\n                #username-warning { width: 260px;\n                    div { padding: 8px;\n                        font-size: 12px; \n                        letter-spacing: 0.04em;\n                    }\n                }\n            \n                mat-form-field { width: 260px;\n                    .form-input {\n                        margin-top: -6.6px;\n                        grid-template-rows: 22px;\n                        grid-template-columns: auto 22px;\n    \n                        mat-icon { font-size: 22px;\n                            width: 22px; height: 22px;\n                        }\n                    }\n                    .alert { font-size: 10px;\n                    }\n                }\n            }\n\n            #login-error>#underline-text { font-size: 16px;\n                text-underline-offset: 1.5px;\n            }\n        }\n        \n        #signup-redirect>#redirect-message {\n            width: 205px;\n        }\n    } \n}\n\n@media screen and (max-width: 350px) {\n    #container {\n        font-size: 12px;\n        button { font-size: 12px; }\n        \n        #greeting, #login-message {\n            margin-top: 15px;\n            margin-bottom: 5px;\n        }\n\n        .login-prompt { padding-bottom: 15px;\n            h3 { min-width: 0px; }\n            #login-form { margin-bottom: 5px; }\n        }\n\n        #login-section {\n            #login-message { width: 245px; text-align: justify; }\n\n            #login-form {\n                #username-warning { width: 230px;\n                    margin-bottom: 3px;\n\n                    div { padding: 7px;\n                        letter-spacing: 0.01em;\n                    }\n                }\n\n                mat-form-field { width: 230px;\n                    margin-bottom: 15px;\n\n                    .form-input { margin-top: -6.8px;\n                        grid-template-columns: auto 21px;\n                        grid-template-rows: 21px;\n                        \n                        mat-icon { font-size: 21px;\n                            width: 21px; height: 21px;\n                        }\n                    }\n\n                    .alert { text-align: justify; width: 200px; \n                        margin-left: auto; margin-right: auto;\n                        letter-spacing: 0.01em;\n                    }\n                }\n\n                #login-button { line-height: 32px;\n                    min-width: fit-content;\n                    padding: 0px 12px;\n                }\n            }\n   \n            #login-error { margin-top: 10px;\n                #underline-text {\n                    font-size: 14px;\n                    text-decoration-thickness: 1.5px;\n                }   \n            }  \n            #login-error>strong { letter-spacing: 0.01em; }\n        }\n\n        #signup-redirect { margin-top: 25px; \n            flex-direction: row;\n            #redirect-message { width: 176px; }\n            #redirect-button { padding: 0px 10px;\n                line-height: 33px;\n            }\n        }\n    } \n}\n\n@media screen and (max-width: 310px) {\n    #container {\n        .login-prompt>h3 { width: 215px; }\n\n        #login-section { //#login-message { width: 100%; }\n            #login-form { \n                padding: 15px;\n                #username-warning { width: 215px; \n                    div {\n                        letter-spacing: 0.04em;\n                    }\n                }\n                mat-form-field { width: 215px;\n                    .alert { width: 195px;\n                        letter-spacing: normal;\n                    } \n                }\n            }\n            #login-error { max-width: 238px; } //matches the form's width\n        } \n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   Welcome guest!             If you have an account, please log in to access all the website\\'s features:          You must log in to continue to the website:                    The username can only contain letters, numbers, hyphens and underscores.                      Username                              account_box                                         A username of at least 2 characters is required!                                A username cannot have more than 30 characters.                                This username does not exist.                                           Password                                         {{showPassword ? \\'visibility\\' : \\'visibility_off\\'}}                                                 The password is required!                                The password must be at least 6 characters long.                                The password cannot have more than 25 characters.                                      Log in                     Login failed! {{errorMessage}}                  If you haven\\'t signed up yet, click here to create your account:        Sign up  '\n    var COMPONENTS = [{'name': 'AccountInfoComponent', 'selector': 'app-account-info'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BandFormComponent', 'selector': 'app-band-form'},{'name': 'BandInfoComponent', 'selector': 'app-band-info'},{'name': 'BandMembersSurveyComponent', 'selector': 'app-band-members-survey'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'SignupComponent', 'selector': 'app-register'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProfileFormComponent', 'selector': 'app-user-profile-form'}];\n    var DIRECTIVES = [{'name': 'ChangeBorderOnClickDirective', 'selector': '[changeBorderOnClick]'},{'name': 'WaitCursorDirective', 'selector': '[appWaitCursor]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainPageComponent.html":{"url":"components/MainPageComponent.html","title":"component - MainPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/main-page/main-page/main-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-page\n            \n\n\n\n            \n                styleUrls\n                ./main-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/main-page/main-page/main-page.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/main-page/main-page/main-page.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-page',\n  templateUrl: './main-page.component.html',\n  styleUrls: ['./main-page.component.scss']\n})\nexport class MainPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        to do: main page\n\n    \n\n    \n                \n                    ./main-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'to do: main page'\n    var COMPONENTS = [{'name': 'AccountInfoComponent', 'selector': 'app-account-info'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BandFormComponent', 'selector': 'app-band-form'},{'name': 'BandInfoComponent', 'selector': 'app-band-info'},{'name': 'BandMembersSurveyComponent', 'selector': 'app-band-members-survey'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'SignupComponent', 'selector': 'app-register'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProfileFormComponent', 'selector': 'app-user-profile-form'}];\n    var DIRECTIVES = [{'name': 'ChangeBorderOnClickDirective', 'selector': '[changeBorderOnClick]'},{'name': 'WaitCursorDirective', 'selector': '[appWaitCursor]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MainPageModule.html":{"url":"modules/MainPageModule.html","title":"module - MainPageModule","body":"\n                   \n\n\n\n\n    Modules\n    MainPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MainPageModule\n\n\n\ncluster_MainPageModule_imports\n\n\n\ncluster_MainPageModule_declarations\n\n\n\n\nMainPageComponent\n\nMainPageComponent\n\n\n\nMainPageModule\n\nMainPageModule\n\nMainPageModule -->\n\nMainPageComponent->MainPageModule\n\n\n\n\n\nMainPageRoutingModule\n\nMainPageRoutingModule\n\nMainPageModule -->\n\nMainPageRoutingModule->MainPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/main-page/main-page.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MainPageComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MainPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MainPageRoutingModule } from './main-page-routing.module';\nimport { MainPageComponent } from './main-page/main-page.component';\n\n\n@NgModule({\n  declarations: [\n    MainPageComponent\n  ],\n  imports: [\n    CommonModule,\n    MainPageRoutingModule\n  ]\n})\nexport class MainPageModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MainPageRoutingModule.html":{"url":"modules/MainPageRoutingModule.html","title":"module - MainPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    MainPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/main-page/main-page-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MainPageComponent } from './main-page/main-page.component';\n\nconst routes: Routes = [\n  {\n    path: '', //http://localhost:4200\n    component: MainPageComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MainPageRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MaterialModule\n\n\n\ncluster_MaterialModule_declarations\n\n\n\ncluster_MaterialModule_exports\n\n\n\n\nChangeBorderOnClickDirective\n\nChangeBorderOnClickDirective\n\n\n\nMaterialModule\n\nMaterialModule\n\nMaterialModule -->\n\nChangeBorderOnClickDirective->MaterialModule\n\n\n\n\n\nConfirmationDialogComponent\n\nConfirmationDialogComponent\n\nMaterialModule -->\n\nConfirmationDialogComponent->MaterialModule\n\n\n\n\n\nWaitCursorDirective\n\nWaitCursorDirective\n\nMaterialModule -->\n\nWaitCursorDirective->MaterialModule\n\n\n\n\n\nChangeBorderOnClickDirective \n\nChangeBorderOnClickDirective \n\nChangeBorderOnClickDirective  -->\n\nMaterialModule->ChangeBorderOnClickDirective \n\n\n\n\n\nWaitCursorDirective \n\nWaitCursorDirective \n\nWaitCursorDirective  -->\n\nMaterialModule->WaitCursorDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/material/material.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ChangeBorderOnClickDirective\n                        \n                        \n                            ConfirmationDialogComponent\n                        \n                        \n                            WaitCursorDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ChangeBorderOnClickDirective\n                        \n                        \n                            WaitCursorDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// in acest modul importam materialele de la angular folosite in celelalte module ale programului\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { ChangeBorderOnClickDirective } from 'src/app/change-border-on-click.directive';\nimport { WaitCursorDirective } from 'src/app/wait-cursor.directive';\nimport { ConfirmationDialogComponent } from './confirmation-dialog/confirmation-dialog.component';\n\n@NgModule({\n  declarations: [ChangeBorderOnClickDirective, WaitCursorDirective, ConfirmationDialogComponent],\n\n  imports: [ CommonModule, MatButtonModule ],\n\n  exports: [ // materialele importate in acest modul trebuie si exportate, pt. a putea fi accesate in restul aplicatiei  \n    MatFormFieldModule, // \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MusicalBand.html":{"url":"interfaces/MusicalBand.html","title":"interface - MusicalBand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MusicalBand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/musical-band.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bandId\n                                        \n                                \n                                \n                                        \n                                            dateFormed\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hq\n                                        \n                                \n                                \n                                        \n                                            isComplete\n                                        \n                                \n                                \n                                        \n                                            members\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            musicGenre\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bandId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bandId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateFormed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dateFormed:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hq\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hq:         BandHQ\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BandHQ\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isComplete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isComplete:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        members\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        members:     UserProfile[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UserProfile[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        musicGenre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        musicGenre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserProfile } from \"./user-profile\"\nimport { BandHQ } from \"./bandHQ\"\n\nexport interface MusicalBand {\n    bandId: string\n    name: string\n    musicGenre?: string\n    dateFormed: Date\n    isComplete: boolean\n    members: UserProfile[]\n    hq?: BandHQ\n    //creatorUsername: string\n}\n\nexport interface BandFormData {\n    username: string\n    formData?: MusicalBand\n};\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MusicalBandsModule.html":{"url":"modules/MusicalBandsModule.html","title":"module - MusicalBandsModule","body":"\n                   \n\n\n\n\n    Modules\n    MusicalBandsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MusicalBandsModule\n\n\n\ncluster_MusicalBandsModule_imports\n\n\n\ncluster_MusicalBandsModule_declarations\n\n\n\n\nBandFormComponent\n\nBandFormComponent\n\n\n\nMusicalBandsModule\n\nMusicalBandsModule\n\nMusicalBandsModule -->\n\nBandFormComponent->MusicalBandsModule\n\n\n\n\n\nBandInfoComponent\n\nBandInfoComponent\n\nMusicalBandsModule -->\n\nBandInfoComponent->MusicalBandsModule\n\n\n\n\n\nBandMembersSurveyComponent\n\nBandMembersSurveyComponent\n\nMusicalBandsModule -->\n\nBandMembersSurveyComponent->MusicalBandsModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nMusicalBandsModule -->\n\nMaterialModule->MusicalBandsModule\n\n\n\n\n\nProfilesModule\n\nProfilesModule\n\nMusicalBandsModule -->\n\nProfilesModule->MusicalBandsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/musical-bands/musical-bands.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BandFormComponent\n                        \n                        \n                            BandInfoComponent\n                        \n                        \n                            BandMembersSurveyComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                        \n                            ProfilesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BandFormComponent } from './band-form/band-form.component';\nimport { MaterialModule } from '../material/material.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BandInfoComponent } from './band-info/band-info.component';\nimport { BandMembersSurveyComponent } from './band-members-survey/band-members-survey.component';\nimport { ProfilesModule } from '../users/profiles.module';\n//import { MusicalBandsRoutingModule } from './musical-bands-routing.module';\n\n@NgModule({\n  declarations: [ BandFormComponent, BandInfoComponent, BandMembersSurveyComponent ],\n  imports: [ CommonModule, MaterialModule, ReactiveFormsModule, ProfilesModule ]\n})\nexport class MusicalBandsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MusicalBandsService.html":{"url":"injectables/MusicalBandsService.html","title":"injectable - MusicalBandsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MusicalBandsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/bands-services/musical-bands.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createBand\n                            \n                            \n                                    Public\n                                deleteBandMatches\n                            \n                            \n                                    Public\n                                getBandById\n                            \n                            \n                                    Public\n                                getMatchedUserProfiles\n                            \n                            \n                                    Public\n                                saveBandUserMatches\n                            \n                            \n                                    Public\n                                updateBand\n                            \n                            \n                                    Public\n                                updateBandUserMatch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/bands-services/musical-bands.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createBand\n                        \n                    \n                \n            \n            \n                \n                    \n                    createBand(band: MusicalBand, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/bands-services/musical-bands.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    band\n                                    \n                                                MusicalBand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteBandMatches\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteBandMatches(bandId: string, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/bands-services/musical-bands.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bandId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getBandById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBandById(bandId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/bands-services/musical-bands.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bandId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getMatchedUserProfiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMatchedUserProfiles(bandId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/bands-services/musical-bands.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bandId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        saveBandUserMatches\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveBandUserMatches(matches: BandUserMatch[], username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/bands-services/musical-bands.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matches\n                                    \n                                            BandUserMatch[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateBand\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateBand(band: MusicalBand, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/bands-services/musical-bands.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    band\n                                    \n                                                MusicalBand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateBandUserMatch\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateBandUserMatch(match: BandUserMatch, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/bands-services/musical-bands.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    match\n                                    \n                                                BandUserMatch\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://localhost:7299/api/Bands'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/bands-services/musical-bands.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { SurveyResult } from 'src/app/interfaces/band-members-survey';\nimport { BandUserMatch } from 'src/app/interfaces/band-user-match';\nimport { MusicalBand } from 'src/app/interfaces/musical-band';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MusicalBandsService {\n\n  public url = 'https://localhost:7299/api/Bands';\n\n  constructor(private http: HttpClient) { }\n\n  public createBand(band: MusicalBand, username: string): Observable {\n    return this.http.post(`${this.url}/${username}`, band)\n  }\n\n  public getBandById(bandId: string): Observable {\n    return this.http.get(`${this.url}/${bandId}`);\n  }\n\n  public updateBand(band: MusicalBand, username: string): Observable {\n    return this.http.put(`${this.url}/${username}`, band);\n  }\n\n\n  public saveBandUserMatches(matches: BandUserMatch[], username: string) {\n    return this.http.post(`${this.url}/${username}/createBandMatches`, matches)\n  }\n\n  public getMatchedUserProfiles(bandId: string): Observable {\n    return this.http.get(`${this.url}/${bandId}/getMatchedUsers`);\n  }\n\n  public updateBandUserMatch(match: BandUserMatch, username: string) {\n    return this.http.put(`${this.url}/${username}/updateBandUserMatch`, match)\n  }\n\n  public deleteBandMatches(bandId: string, username: string) {\n    return this.http.delete(`${this.url}/${bandId}/deleteBandMatches/${username}`)\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfilesModule.html":{"url":"modules/ProfilesModule.html","title":"module - ProfilesModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfilesModule\n\n\n\ncluster_ProfilesModule_exports\n\n\n\ncluster_ProfilesModule_imports\n\n\n\ncluster_ProfilesModule_declarations\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\n\n\nProfilesModule\n\nProfilesModule\n\nProfilesModule -->\n\nUserProfileComponent->ProfilesModule\n\n\n\n\n\nUserProfileComponent \n\nUserProfileComponent \n\nUserProfileComponent  -->\n\nProfilesModule->UserProfileComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nProfilesModule -->\n\nMaterialModule->ProfilesModule\n\n\n\n\n\nUsersRoutingModule\n\nUsersRoutingModule\n\nProfilesModule -->\n\nUsersRoutingModule->ProfilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/users/profiles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UserProfileComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                        \n                            UsersRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserProfileComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UsersRoutingModule } from './users-routing.module';\nimport { MaterialModule } from '../material/material.module';\nimport { UserProfileComponent } from './user-profiles/user-profile.component';\n\n@NgModule({\n  declarations: [ UserProfileComponent ],\n  imports: [\n    CommonModule, \n    UsersRoutingModule, \n    MaterialModule, \n  ],\n  exports: [\n    UserProfileComponent,\n  ]\n})\nexport class ProfilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegisterUser.html":{"url":"interfaces/RegisterUser.html","title":"interface - RegisterUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RegisterUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/register_user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RegisterUser {\n    email: string\n    password: string\n    username: string\n    role: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SurveyFormData.html":{"url":"interfaces/SurveyFormData.html","title":"interface - SurveyFormData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SurveyFormData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/band-members-survey.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bandId\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bandId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bandId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserProfile } from \"./user-profile\"\n\nexport interface BandMembersSurvey {\n    country: string\n    city: string\n    street?: string\n\n    minAge: number\n    maxAge: number\n    occupation?: string\n\n    canSing: boolean\n    playedInstrument?: string\n    preferredMusicGenre?: string\n\n    trait1?: string\n    trait2?: string\n};\n\nexport interface SurveyResult {\n    matchedUserId: string\n    matchedUserProfile: UserProfile\n    matchType: string\n}\n\nexport interface SurveyFormData {\n    bandId: string\n    username: string\n};\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SurveyResult.html":{"url":"interfaces/SurveyResult.html","title":"interface - SurveyResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SurveyResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/band-members-survey.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            matchedUserId\n                                        \n                                \n                                \n                                        \n                                            matchedUserProfile\n                                        \n                                \n                                \n                                        \n                                            matchType\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        matchedUserId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        matchedUserId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        matchedUserProfile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        matchedUserProfile:         UserProfile\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserProfile\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        matchType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        matchType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserProfile } from \"./user-profile\"\n\nexport interface BandMembersSurvey {\n    country: string\n    city: string\n    street?: string\n\n    minAge: number\n    maxAge: number\n    occupation?: string\n\n    canSing: boolean\n    playedInstrument?: string\n    preferredMusicGenre?: string\n\n    trait1?: string\n    trait2?: string\n};\n\nexport interface SurveyResult {\n    matchedUserId: string\n    matchedUserProfile: UserProfile\n    matchType: string\n}\n\nexport interface SurveyFormData {\n    bandId: string\n    username: string\n};\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            profile\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                                \n                                        \n                                            userRoles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profile:         UserProfile\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserProfile\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userRoles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userRoles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserProfile } from \"./user-profile\"\n\nexport interface User {\n    userId: string\n    username: string\n    email: string\n    userRoles: string[]\n\n    profile?: UserProfile\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserAddress.html":{"url":"interfaces/UserAddress.html","title":"interface - UserAddress","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserAddress\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/user-address.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            city\n                                        \n                                \n                                \n                                        \n                                            country\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            street\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        street\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        street:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserAddress {\n    //userId: number\n    country: string\n    city: string\n    street?: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserProfile.html":{"url":"interfaces/UserProfile.html","title":"interface - UserProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/user-profile.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            age\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            bandId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            bandName\n                                        \n                                \n                                \n                                        \n                                            canBeEdited\n                                        \n                                \n                                \n                                        \n                                            canSing\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            occupation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phoneNumber\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            playedInstrument\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            preferredMusicGenre\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            trait1\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            trait2\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         UserAddress\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserAddress\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        age:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bandId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bandId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bandName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bandName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canBeEdited\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canBeEdited:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canSing\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canSing:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        occupation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        occupation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        playedInstrument\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        playedInstrument:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preferredMusicGenre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        preferredMusicGenre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trait1\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        trait1:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trait2\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        trait2:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BandUserMatch } from \"./band-user-match\"\nimport { UserAddress } from \"./user-address\"\n\nexport interface UserProfile {\n    //userId: string\n    username: string\n    email: string\n    phoneNumber?: string\n    address?: UserAddress\n\n    firstName: string\n    lastName: string\n    age: number\n    occupation?: string\n\n    canSing: boolean\n    playedInstrument?: string\n    preferredMusicGenre?: string\n    trait1?: string\n    trait2?: string\n\n    canBeEdited: boolean\n    bandId?: string\n    bandName?: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProfileComponent.html":{"url":"components/UserProfileComponent.html","title":"component - UserProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/users/user-profiles/user-profile.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-profile\n            \n\n\n\n            \n                styleUrls\n                ./user-profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createBand\n                            \n                            \n                                    Public\n                                editUserProfile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/users/user-profiles/user-profile.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {\n    userId: '',\n    username: '',\n    email: '',\n    userRoles: []\n  }\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/users/user-profiles/user-profile.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createBand\n                        \n                    \n                \n            \n            \n                \n                    \n                    createBand()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/user-profiles/user-profile.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        editUserProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    editUserProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/user-profiles/user-profile.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { MatDialogConfig, MatDialog } from '@angular/material/dialog';\nimport { User } from 'src/app/interfaces/user';\nimport { UserProfileFormComponent } from '../user-profile-form/user-profile-form.component';\nimport { UserProfile } from 'src/app/interfaces/user-profile';\nimport { BandFormComponent } from '../../musical-bands/band-form/band-form.component';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.scss']\n})\nexport class UserProfileComponent {\n  @Input() user: User = {\n    userId: '',\n    username: '',\n    email: '',\n    userRoles: []\n  };\n\n  constructor(private dialog: MatDialog) {}\n\n  public editUserProfile(): void {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.width = '85%';\n    dialogConfig.minWidth = '280px';\n    dialogConfig.maxWidth = '550px';\n    dialogConfig.height = '600px';\n    dialogConfig.disableClose = true; // nu se mai inchide dialogul daca dam clic in afara\n    dialogConfig.data = this.user;\n    const dialogRef = this.dialog.open(UserProfileFormComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((newValues: UserProfile) => {\n      //console.log(newValues);\n      if (newValues) this.user.profile = newValues;\n    });\n  }\n\n  public createBand(): void {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.width = '85%';\n    dialogConfig.minWidth = '280px';\n    dialogConfig.maxWidth = '550px';\n    dialogConfig.maxHeight = '600px';\n    dialogConfig.disableClose = true;\n\n    const bandFormData = { username: this.user.username };\n    dialogConfig.data = bandFormData;\n    const dialogRef = this.dialog.open(BandFormComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((response: [string, string] | undefined) => {\n      if (response) {\n        // const newBandId = response[0];\n        // const newBandName = response[1];\n        // if (this.user.profile) {\n        //   this.user.profile.bandId = newBandId;\n        //   this.user.profile.bandName = newBandName;\n        // }\n        window.location.reload(); // updates the invitations too\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    No Profile Created\n  \n  \n    You don't have a user profile yet.\n    Click here to create your profile:\n    Create Profile\n  \n\n\n\n  \n    \n    User Profile\n    Username: {{user.username}}\n  \n  \n    First Name: {{ user.profile.firstName }}\n    Last Name: {{ user.profile.lastName }}\n    Age: {{ user.profile.age }}\n    Occupation: {{ user.profile.occupation }}\n     Contact Info:\n      \n        Email: {{ user.email }}\n        Phone: {{ user.profile.phoneNumber }}\n      \n    \n    Traits: {{ user.profile.trait1 }}\n      , {{ user.profile.trait2 }}\n    \n    Can Sing: Yes\n    Can Sing: No\n    Played Instrument: {{user.profile.playedInstrument}}\n    Preferred Music Genre: {{user.profile.preferredMusicGenre}}\n     Address:\n      \n        Country: {{ user.profile.address?.country }}\n        City: {{ user.profile.address?.city }}\n        Street: {{ user.profile.address?.street }}\n      \n    \n    \n      Member in the band {{user.profile.bandName}}\n    \n    \n      Create band\n     \n  \n  \n    \n      Edit Profile edit  \n    \n  \n\n\n    \n\n    \n                \n                    ./user-profile.component.scss\n                \n                #no-profile {\n  background-color: azure;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  //text-align: center;\n\n  height: calc(100% - 10px);\n  box-sizing: border-box;\n  padding: 30px;\n  margin: 5px;\n\n  #title { font-size: 24px; }\n\n  #create-profile { display: flex;\n    flex-direction: column;\n    align-items: center;\n    font-size: 16px;\n    margin-top: 5px;\n\n    button { font-size: 18px;\n      margin-top: 10px;\n    }\n  }\n}\n\n\n#profile-card { padding: 30px;\n  background-color: azure;\n  margin: 5px;\n  min-width: 375px;\n  overflow-x: auto;\n\n  #profile-header, #profile-info {\n    max-width: 500px;\n  }\n\n  #card-title { font-size: 24px;\n    width: 125.33px;\n  }\n  #card-subtitle { font-size: 16px;\n    color: rgb(100, 100, 100);\n    margin-bottom: 10px;\n    display: flex;\n    span { margin-left: 3px; }\n  }\n\n  #profile-icon {\n    background-image: url('https://media.istockphoto.com/vectors/default-profile-picture-avatar-photo-placeholder-vector-illustration-vector-id1223671392?k=20&m=1223671392&s=612x612&w=0&h=lGpj2vWAI3WUT1JeJWm1PRoHT3V15_1pdcTn2szdwQ0=');\n    background-size: cover;\n    width: 51px; height: 51px;\n  }\n\n  #profile-info {\n    .details {\n      font-size: 16px;\n      text-align: justify;\n      margin: 20px 0px;\n    }\n    .bold { font-weight: 550; }\n\n    .details:last-child { margin-bottom: 0px; }\n\n    .list {\n      p, ul { margin: 0px; }\n      ul > li { margin-top: 5px; }\n    }\n\n    //a:link { color: royalblue; }\n    //a:visited { color: violet; }\n  }\n\n  #edit-profile { margin: 30px 0px 0px;\n    button { font-size: 16px;\n      padding: 2px 12px 0px 14px;\n      background-color: rgb(222, 242, 245);\n    }\n  }\n}\n\n\n@media screen and (max-width: 1100px) {\n  #profile-card {\n    min-width: fit-content;\n  }\n}\n\n\n@media screen and (max-width: 600px) {\n  #profile-card {\n    #profile-header, #profile-info {\n      max-width: 400px;\n    }\n  }\n}\n\n\n@media screen and (max-width: 505px) {\n  #profile-card {\n    #profile-header, #profile-info {\n      max-width: 350px;\n    }\n  }\n}\n\n\n@media screen and (max-width: 450px) {\n  #profile-card {\n    #profile-header, #profile-info {\n      max-width: 300px;\n    }\n  }\n}\n\n\n@media screen and (max-width: 405px) {\n  #profile-card {\n    #profile-header, #profile-info {\n      max-width: 270px;\n    }\n  }\n\n  #no-profile { padding: 15px;\n    height: fit-content;\n    box-sizing: content-box;\n  }\n}\n\n\n@media screen and (max-width: 360px) {\n  #profile-card, #no-profile { padding: 15px;\n    background-color: aliceblue;\n    box-shadow: none;\n    border: solid 2px lightblue;\n    border-radius: 5px;\n    margin: 0px;\n\n    #card-subtitle { margin-bottom: 0px; }\n  }\n}\n\n\n@media screen and (max-width: 350px) {\n  #profile-card {\n    #card-title { font-size: 20px; }\n    #card-subtitle { font-size: 14px; }\n    #profile-icon { width: 43px; height: 43px; }\n\n    #profile-info > .details {\n      font-size: 14px;\n      margin: 15px 0px;\n    }\n    #profile-header, #profile-info {\n      max-width: 245px;\n    }\n  }\n}\n\n\n@media screen and (max-width: 306px) {\n  #profile-card { padding: 10px;\n    #profile-header, #profile-info {\n      max-width: 235px;\n    }\n  }\n\n  #no-profile { padding: 12px;\n\n    #title { font-size: 20px;}\n\n    #create-profile { font-size: 14px;\n      button { font-size: 16px; }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      No Profile Created        You don\\'t have a user profile yet.    Click here to create your profile:    Create Profile            User Profile    Username: {{user.username}}        First Name: {{ user.profile.firstName }}    Last Name: {{ user.profile.lastName }}    Age: {{ user.profile.age }}    Occupation: {{ user.profile.occupation }}     Contact Info:              Email: {{ user.email }}        Phone: {{ user.profile.phoneNumber }}              Traits: {{ user.profile.trait1 }}      , {{ user.profile.trait2 }}        Can Sing: Yes    Can Sing: No    Played Instrument: {{user.profile.playedInstrument}}    Preferred Music Genre: {{user.profile.preferredMusicGenre}}     Address:              Country: {{ user.profile.address?.country }}        City: {{ user.profile.address?.city }}        Street: {{ user.profile.address?.street }}                    Member in the band {{user.profile.bandName}}              Create band                   Edit Profile edit        '\n    var COMPONENTS = [{'name': 'AccountInfoComponent', 'selector': 'app-account-info'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BandFormComponent', 'selector': 'app-band-form'},{'name': 'BandInfoComponent', 'selector': 'app-band-info'},{'name': 'BandMembersSurveyComponent', 'selector': 'app-band-members-survey'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'SignupComponent', 'selector': 'app-register'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProfileFormComponent', 'selector': 'app-user-profile-form'}];\n    var DIRECTIVES = [{'name': 'ChangeBorderOnClickDirective', 'selector': '[changeBorderOnClick]'},{'name': 'WaitCursorDirective', 'selector': '[appWaitCursor]'}];\n    var ACTUAL_COMPONENT = {'name': 'UserProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProfileFormComponent.html":{"url":"components/UserProfileFormComponent.html","title":"component - UserProfileFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserProfileFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/users/user-profile-form/user-profile-form.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-profile-form\n            \n\n\n\n            \n                styleUrls\n                ./user-profile-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-profile-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addressForm\n                            \n                            \n                                    Public\n                                formTitle\n                            \n                            \n                                    Public\n                                traits\n                            \n                            \n                                    Public\n                                userProfileForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeDialog\n                            \n                            \n                                    Public\n                                saveFormData\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    firstName\n                                \n                                \n                                    lastName\n                                \n                                \n                                    phoneNumber\n                                \n                                \n                                    age\n                                \n                                \n                                    occupation\n                                \n                                \n                                    canSing\n                                \n                                \n                                    playedInstrument\n                                \n                                \n                                    preferredMusicGenre\n                                \n                                \n                                    trait1\n                                \n                                \n                                    trait2\n                                \n                                \n                                    country\n                                \n                                \n                                    city\n                                \n                                \n                                    street\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userData: User, dialogRef: MatDialogRef, profilesService: UserProfilesService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/users/user-profile-form/user-profile-form.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userData\n                                                  \n                                                        \n                                                                        User\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profilesService\n                                                  \n                                                        \n                                                                        UserProfilesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        closeDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    closeDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/user-profile-form/user-profile-form.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        saveFormData\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveFormData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/user-profile-form/user-profile-form.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addressForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    country: new FormControl('', [Validators.required]),\n    city: new FormControl('', [Validators.required]),\n    street: new FormControl(),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/user-profile-form/user-profile-form.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        formTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/user-profile-form/user-profile-form.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        traits\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\"Analytical\", \"Charismatic\", \"Confident\", \"Creative\", \"Friendly\", \n    \"Hard-working\", \"Ingenious\", \"Level-headed\", \"Observant\", \"Organized\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/user-profile-form/user-profile-form.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userProfileForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    firstName: new FormControl('', [Validators.required]),\n    lastName: new FormControl('', [Validators.required]),\n    phoneNumber: new FormControl(null, [Validators.minLength(10), Validators.maxLength(20)]),\n    age: new FormControl(0),\n    occupation: new FormControl(),\n    canSing: new FormControl(false),\n    playedInstrument: new FormControl(),\n    preferredMusicGenre: new FormControl(),\n    trait1: new FormControl(),\n    trait2: new FormControl(),\n\n    username: new FormControl(''),\n    email: new FormControl('')\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/users/user-profile-form/user-profile-form.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        firstName\n                    \n                \n\n                \n                    \n                        getfirstName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/users/user-profile-form/user-profile-form.component.ts:55\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lastName\n                    \n                \n\n                \n                    \n                        getlastName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/users/user-profile-form/user-profile-form.component.ts:59\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        phoneNumber\n                    \n                \n\n                \n                    \n                        getphoneNumber()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/users/user-profile-form/user-profile-form.component.ts:63\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        age\n                    \n                \n\n                \n                    \n                        getage()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/users/user-profile-form/user-profile-form.component.ts:67\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        occupation\n                    \n                \n\n                \n                    \n                        getoccupation()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/users/user-profile-form/user-profile-form.component.ts:71\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        canSing\n                    \n                \n\n                \n                    \n                        getcanSing()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/users/user-profile-form/user-profile-form.component.ts:75\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        playedInstrument\n                    \n                \n\n                \n                    \n                        getplayedInstrument()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/users/user-profile-form/user-profile-form.component.ts:79\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        preferredMusicGenre\n                    \n                \n\n                \n                    \n                        getpreferredMusicGenre()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/users/user-profile-form/user-profile-form.component.ts:83\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        trait1\n                    \n                \n\n                \n                    \n                        gettrait1()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/users/user-profile-form/user-profile-form.component.ts:87\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        trait2\n                    \n                \n\n                \n                    \n                        gettrait2()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/users/user-profile-form/user-profile-form.component.ts:91\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        country\n                    \n                \n\n                \n                    \n                        getcountry()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/users/user-profile-form/user-profile-form.component.ts:95\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        city\n                    \n                \n\n                \n                    \n                        getcity()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/users/user-profile-form/user-profile-form.component.ts:99\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        street\n                    \n                \n\n                \n                    \n                        getstreet()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/users/user-profile-form/user-profile-form.component.ts:103\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { FormGroup, FormControl, AbstractControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { User } from 'src/app/interfaces/user';\nimport { UserProfile } from 'src/app/interfaces/user-profile';\nimport { UserProfilesService } from 'src/app/services/users-service/user-profiles.service';\n\n@Component({\n  selector: 'app-user-profile-form',\n  templateUrl: './user-profile-form.component.html',\n  styleUrls: ['./user-profile-form.component.scss']\n})\nexport class UserProfileFormComponent {\n  public formTitle: string;\n\n  public userProfileForm: FormGroup = new FormGroup({\n    firstName: new FormControl('', [Validators.required]),\n    lastName: new FormControl('', [Validators.required]),\n    phoneNumber: new FormControl(null, [Validators.minLength(10), Validators.maxLength(20)]),\n    age: new FormControl(0),\n    occupation: new FormControl(),\n    canSing: new FormControl(false),\n    playedInstrument: new FormControl(),\n    preferredMusicGenre: new FormControl(),\n    trait1: new FormControl(),\n    trait2: new FormControl(),\n\n    username: new FormControl(''),\n    email: new FormControl('')\n  });\n\n  public traits: string[] = [\"Analytical\", \"Charismatic\", \"Confident\", \"Creative\", \"Friendly\", \n    \"Hard-working\", \"Ingenious\", \"Level-headed\", \"Observant\", \"Organized\"];\n\n  public addressForm: FormGroup = new FormGroup({\n    country: new FormControl('', [Validators.required]),\n    city: new FormControl('', [Validators.required]),\n    street: new FormControl(),\n  });\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) private userData: User,\n    private dialogRef: MatDialogRef,\n    private profilesService: UserProfilesService\n  ) {\n    //console.log(userData)\n    if (userData.profile) {\n      this.formTitle = 'Edit Profile';\n      this.userProfileForm.patchValue(userData.profile);\n      this.addressForm.patchValue(userData.profile.address!);  \n    }\n    else this.formTitle = 'Create Profile';\n  }\n\n  get firstName(): AbstractControl {\n    return this.userProfileForm.get('firstName')!;\n  }\n\n  get lastName(): AbstractControl {\n    return this.userProfileForm.get('lastName')!;\n  }\n\n  get phoneNumber(): AbstractControl {\n    return this.userProfileForm.get('phoneNumber')!;\n  }\n\n  get age(): AbstractControl {\n    return this.userProfileForm.get('age')!;\n  }\n\n  get occupation(): AbstractControl {\n    return this.userProfileForm.get('occupation')!;\n  }\n\n  get canSing(): AbstractControl {\n    return this.userProfileForm.get('canSing')!;\n  }\n\n  get playedInstrument(): AbstractControl {\n    return this.userProfileForm.get('playedInstrument')!;\n  }\n\n  get preferredMusicGenre(): AbstractControl {\n    return this.userProfileForm.get('preferredMusicGenre')!;\n  }\n\n  get trait1(): AbstractControl {\n    return this.userProfileForm.get('trait1')!;\n  }\n\n  get trait2(): AbstractControl {\n    return this.userProfileForm.get('trait2')!;\n  }\n\n  get country(): AbstractControl {\n    return this.addressForm.get('country')!;\n  }\n\n  get city(): AbstractControl {\n    return this.addressForm.get('city')!;\n  }\n\n  get street(): AbstractControl {\n    return this.addressForm.get('street')!;\n  }\n\n  public closeDialog(): void { // cand apasam close inchidem fereastra\n    this.dialogRef.close();\n  }\n\n  public saveFormData(): void {\n    let userProfile: UserProfile = this.userProfileForm.value;\n    userProfile.canBeEdited = true;\n    userProfile.bandId = this.userData.profile?.bandId;\n    userProfile.bandName = this.userData.profile?.bandName;\n    userProfile.address = this.addressForm.value;\n    if (this.formTitle=='Edit Profile') {\n      this.profilesService.editUserProfile(userProfile).subscribe(() => {\n        this.dialogRef.close(userProfile);\n      });      \n    } \n    else {\n      userProfile.username = this.userData.username;\n      userProfile.email = this.userData.email;\n      this.profilesService.createUserProfile(userProfile).subscribe(() => {\n        this.dialogRef.close(userProfile);\n      });   \n    }\n  }\n\n}\n\n    \n\n    \n        \n  {{formTitle}}\n\n  \n    \n      First Name\n      \n      \n        First name is required!\n      \n    \n\n    \n      Last Name\n      \n      \n        Last name is required!\n      \n    \n\n    \n      Phone Number\n      \n      \n        Enter at least 10 characters.\n        Cannot enter more than 20 characters.\n      \n    \n\n    \n      Age\n      \n      \n        Minimum required number is 0!\n      \n      \n        Maximum number excedeed!\n      \n    \n\n    \n      Occupation\n      \n    \n\n    \n      Can you sing?\n      \n      Yes\n      \n      No\n    \n\n    \n      Instrument Played\n      \n    \n\n    \n      Preferred Music Genre\n      \n    \n\n    \n      Trait 1\n      \n        None\n        {{ trait }}\n      \n    \n\n    \n      Trait 2\n      \n        None\n        {{ trait }}\n      \n    \n  \n\n  \n    \n      Country\n      \n      \n        This field cannot be empty!\n      \n    \n\n    \n      City\n      \n      \n        This field cannot be empty!\n      \n    \n\n    \n      Street\n      \n    \n  \n\n  \n     Save\n    \n\n    Cancel\n  \n\n\n    \n\n    \n                \n                    ./user-profile-form.component.scss\n                \n                #container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n\n  #title {\n    margin-top: 10px;\n    margin-bottom: 35px;\n    font-size: 24px;\n  }\n\n  #edit-profile-form, #address-form {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 80%;\n\n    mat-form-field {\n      width: 100%;\n      margin: 5px;\n\n      .alert { color: red; }\n    }\n\n    #radio-buttons {\n      margin-bottom: 15px;\n      display: flex;\n\n      input {\n        margin: 0px 3px 0px 20px;\n      }\n    }\n  }\n\n  .actions > button {\n    margin: 10px;\n    font-size: 16px;\n    border-width: 2px;\n    border-color: rgb(191, 191, 192);\n  }\n}\n\n@media screen and (max-width: 525px) {\n  #container { //padding: 10px;\n    #edit-profile-form, #address-form {\n      width: 100%;\n    }\n  }\n}\n\n@media screen and (max-width: 400px) {\n  #container {\n    padding: 0px;\n\n    #edit-profile-form > #radio-buttons {\n      input {\n        margin-left: 15px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{formTitle}}            First Name                    First name is required!                    Last Name                    Last name is required!                    Phone Number                    Enter at least 10 characters.        Cannot enter more than 20 characters.                    Age                    Minimum required number is 0!                    Maximum number excedeed!                    Occupation                    Can you sing?            Yes            No              Instrument Played                    Preferred Music Genre                    Trait 1              None        {{ trait }}                    Trait 2              None        {{ trait }}                        Country                    This field cannot be empty!                    City                    This field cannot be empty!                    Street                   Save        Cancel  '\n    var COMPONENTS = [{'name': 'AccountInfoComponent', 'selector': 'app-account-info'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BandFormComponent', 'selector': 'app-band-form'},{'name': 'BandInfoComponent', 'selector': 'app-band-info'},{'name': 'BandMembersSurveyComponent', 'selector': 'app-band-members-survey'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'SignupComponent', 'selector': 'app-register'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserProfileFormComponent', 'selector': 'app-user-profile-form'}];\n    var DIRECTIVES = [{'name': 'ChangeBorderOnClickDirective', 'selector': '[changeBorderOnClick]'},{'name': 'WaitCursorDirective', 'selector': '[appWaitCursor]'}];\n    var ACTUAL_COMPONENT = {'name': 'UserProfileFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserProfilesService.html":{"url":"injectables/UserProfilesService.html","title":"injectable - UserProfilesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserProfilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/users-service/user-profiles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                acceptInvitationToJoinBand\n                            \n                            \n                                    Public\n                                createUserProfile\n                            \n                            \n                                    Public\n                                editUserProfile\n                            \n                            \n                                    Public\n                                getProfileByUsername\n                            \n                            \n                                    Public\n                                getSurveyMatches\n                            \n                            \n                                    Public\n                                getUserInvitations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/users-service/user-profiles.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        acceptInvitationToJoinBand\n                        \n                    \n                \n            \n            \n                \n                    \n                    acceptInvitationToJoinBand(invitation: BandUserMatch, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/users-service/user-profiles.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    invitation\n                                    \n                                                BandUserMatch\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createUserProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUserProfile(profile: UserProfile)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/users-service/user-profiles.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    profile\n                                    \n                                                UserProfile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        editUserProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    editUserProfile(profile: UserProfile)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/users-service/user-profiles.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    profile\n                                    \n                                                UserProfile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getProfileByUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfileByUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/users-service/user-profiles.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getSurveyMatches\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSurveyMatches(survey: BandMembersSurvey)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/users-service/user-profiles.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    survey\n                                    \n                                                BandMembersSurvey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getUserInvitations\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserInvitations(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/users-service/user-profiles.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://localhost:7299/api/Profiles'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/users-service/user-profiles.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { UserProfile } from 'src/app/interfaces/user-profile';\nimport { BandMembersSurvey, SurveyResult } from 'src/app/interfaces/band-members-survey';\nimport { Invitation } from 'src/app/interfaces/invitation';\nimport { BandUserMatch } from 'src/app/interfaces/band-user-match';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserProfilesService {\n\n  public url = 'https://localhost:7299/api/Profiles';\n\n  constructor(private http: HttpClient) { }\n\n  public createUserProfile(profile: UserProfile) {\n    return this.http.post(this.url, profile)\n  }\n\n  public getProfileByUsername(username: string): Observable {\n    return this.http.get(`${this.url}/getByUsername/${username}`);\n  }\n\n  public editUserProfile(profile: UserProfile) {\n    return this.http.put(this.url, profile);\n  }\n\n  // public getAllUserProfiles(): Observable {\n  //   return this.http.get(this.url)\n  // }\n\n  public getSurveyMatches(survey: BandMembersSurvey): Observable {\n    return this.http.post(this.url+'/surveyResults', survey)\n  }\n  \n  public getUserInvitations(userId: string): Observable {\n    return this.http.get(`${this.url}/${userId}/bandInvitations`);\n  }\n\n  public acceptInvitationToJoinBand(invitation: BandUserMatch, username: string){\n    return this.http.post(`${this.url}/${username}/acceptInvitation`, invitation);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_declarations\n\n\n\ncluster_UsersModule_imports\n\n\n\n\nAccountInfoComponent\n\nAccountInfoComponent\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nAccountInfoComponent->UsersModule\n\n\n\n\n\nUserProfileFormComponent\n\nUserProfileFormComponent\n\nUsersModule -->\n\nUserProfileFormComponent->UsersModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nUsersModule -->\n\nMaterialModule->UsersModule\n\n\n\n\n\nProfilesModule\n\nProfilesModule\n\nUsersModule -->\n\nProfilesModule->UsersModule\n\n\n\n\n\nUsersRoutingModule\n\nUsersRoutingModule\n\nUsersModule -->\n\nUsersRoutingModule->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccountInfoComponent\n                        \n                        \n                            UserProfileFormComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                        \n                            ProfilesModule\n                        \n                        \n                            UsersRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UsersRoutingModule } from './users-routing.module';\nimport { AccountInfoComponent } from './account-info/account-info.component';\nimport { MaterialModule } from '../material/material.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { UserProfileFormComponent } from './user-profile-form/user-profile-form.component';\nimport { ProfilesModule } from './profiles.module';\n\n@NgModule({\n  declarations: [ AccountInfoComponent, UserProfileFormComponent ],\n  imports: [\n    CommonModule, \n    UsersRoutingModule, \n    MaterialModule, \n    ReactiveFormsModule,\n    ProfilesModule,\n  ]\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersRoutingModule.html":{"url":"modules/UsersRoutingModule.html","title":"module - UsersRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/users/users-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AccountInfoComponent } from './account-info/account-info.component';\nimport { BandInfoComponent } from '../musical-bands/band-info/band-info.component';\n\nconst routes: Routes = [\n  {\n    path: '', // http://localhost:4200/users\n    pathMatch: 'full',\n    redirectTo: '/' // http://localhost:4200\n  },\n\n  {\n    path: 'account/:username',\n    component: AccountInfoComponent\n  },\n\n  {\n    path: 'account/band/:bandId',\n    component: BandInfoComponent\n  },\n\n  {\n    path: 'account',\n    redirectTo: '/auth/login'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UsersRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/users-service/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAllUsers\n                            \n                            \n                                    Public\n                                getUserByName\n                            \n                            \n                                    Public\n                                updateEmail\n                            \n                            \n                                    Public\n                                updatePassword\n                            \n                            \n                                    Public\n                                updateUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/users-service/users.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/users-service/users.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getUserByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserByName(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/users-service/users.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateEmail(username: string, newEmail: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/users-service/users.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newEmail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePassword(model: ChangePassword)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/users-service/users.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                ChangePassword\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUsername(oldUsername: string, newUsername: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/users-service/users.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    oldUsername\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newUsername\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://localhost:7299/api/users'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/users-service/users.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { ChangePassword } from 'src/app/interfaces/change_password';\nimport { User } from 'src/app/interfaces/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n  private url = 'https://localhost:7299/api/users';\n\n  constructor(private http: HttpClient) {}\n\n  public getAllUsers(): Observable {\n    return this.http.get(this.url);\n  }\n\n  public getUserByName(username: string): Observable {\n    return this.http.get(`${this.url}/getByUsername/${username}`);\n  }\n\n  public updateUsername(oldUsername: string, newUsername: string) {\n    const headers = new HttpHeaders().set('content-type', 'text/json');\n    return this.http.put(`${this.url}/changeUsername/${oldUsername}`, `\\\"${newUsername}\\\"`, { headers });\n  }\n\n  public updateEmail(username: string, newEmail: string) {\n    const headers = new HttpHeaders().set('content-type', 'text/json');\n    return this.http.put(`${this.url}/changeEmail/${username}`, `\\\"${newEmail}\\\"`, { headers });\n  }\n\n  public updatePassword(model: ChangePassword) {\n    return this.http.put(this.url+'/changePassword', model, { responseType: 'text' });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/WaitCursorDirective.html":{"url":"directives/WaitCursorDirective.html","title":"directive - WaitCursorDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  WaitCursorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/wait-cursor.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnDestroy\n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appWaitCursor]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buttonElement\n                            \n                            \n                                    Private\n                                observer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                changeCursor\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/wait-cursor.directive.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n\n\n            \n                \n                    Defined in src/app/wait-cursor.directive.ts:10\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        changeCursor\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeCursor()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('click')\n                \n            \n\n            \n                \n                    Defined in src/app/wait-cursor.directive.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wait-cursor.directive.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/wait-cursor.directive.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buttonElement\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.elementRef.nativeElement\n                    \n                \n                    \n                        \n                                Defined in src/app/wait-cursor.directive.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        observer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new MutationObserver(mutations => {\n    mutations.forEach(mutation => {\n      const target = mutation.target as HTMLElement;\n      if(mutation.attributeName == 'disabled') {\n        if (this.buttonElement.disabled)\n          this.buttonElement.style.cursor = 'not-allowed';\n        else\n          this.buttonElement.style.cursor = 'pointer';\n      }\n      else if (mutation.oldValue == 'cursor: wait;')\n        this.buttonElement.style.cursor = 'pointer';\n    });\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/wait-cursor.directive.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, HostListener, OnDestroy, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[appWaitCursor]'\n})\nexport class WaitCursorDirective implements OnDestroy, OnInit {\n  constructor(private elementRef: ElementRef) {}\n  private buttonElement = this.elementRef.nativeElement;\n\n  @HostListener('click') changeCursor(): void {\n    this.buttonElement.style.cursor = 'wait';\n    document.body.style.cursor = 'wait';\n  }\n\n  private observer = new MutationObserver(mutations => {\n    mutations.forEach(mutation => {\n      const target = mutation.target as HTMLElement;\n      if(mutation.attributeName == 'disabled') {\n        if (this.buttonElement.disabled)\n          this.buttonElement.style.cursor = 'not-allowed';\n        else\n          this.buttonElement.style.cursor = 'pointer';\n      }\n      else if (mutation.oldValue == 'cursor: wait;')\n        this.buttonElement.style.cursor = 'pointer';\n    });\n  });\n\n  ngOnInit(): void {\n    this.observer.observe(this.buttonElement, { attributeFilter: ['disabled'] });\n    this.observer.observe(document.body, { attributeFilter: ['style'], attributeOldValue: true });\n  }\n\n  ngOnDestroy(): void { this.observer.disconnect();\n    document.body.style.cursor = 'auto';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/can-deactivate.guard.ts\n            \n            interface\n            CanDeactivateComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/can-deactivate.guard.ts\n            \n            guard\n            CanDeactivateGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/change-border-on-click.directive.ts\n            \n            directive\n            ChangeBorderOnClickDirective\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/interfaces/band-members-survey.ts\n            \n            interface\n            BandMembersSurvey\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/interfaces/band-members-survey.ts\n            \n            interface\n            SurveyFormData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/band-members-survey.ts\n            \n            interface\n            SurveyResult\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/band-user-match.ts\n            \n            interface\n            BandUserMatch\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/bandHQ.ts\n            \n            interface\n            BandHQ\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/interfaces/change_password.ts\n            \n            interface\n            ChangePassword\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/invitation.ts\n            \n            interface\n            Invitation\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/musical-band.ts\n            \n            interface\n            BandFormData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/musical-band.ts\n            \n            interface\n            MusicalBand\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/interfaces/register_user.ts\n            \n            interface\n            RegisterUser\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/interfaces/user-address.ts\n            \n            interface\n            UserAddress\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/user-profile.ts\n            \n            interface\n            UserProfile\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/interfaces/user.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/modules/auth/custom-validators.ts\n            \n            class\n            CustomValidators\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/modules/auth/signup/signup.component.ts\n            \n            component\n            SignupComponent\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/app/modules/main-page/main-page/main-page.component.ts\n            \n            component\n            MainPageComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/material/confirmation-dialog/confirmation-dialog.component.ts\n            \n            component\n            ConfirmationDialogComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/modules/material/confirmation-dialog/confirmation-dialog.component.ts\n            \n            class\n            ConfirmationDialogModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/modules/musical-bands/band-form/band-form.component.ts\n            \n            component\n            BandFormComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/modules/musical-bands/band-info/band-info.component.ts\n            \n            component\n            BandInfoComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/modules/musical-bands/band-members-survey/band-members-survey.component.ts\n            \n            component\n            BandMembersSurveyComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/modules/users/account-info/account-info.component.ts\n            \n            component\n            AccountInfoComponent\n            \n                0 %\n                (0/38)\n            \n        \n        \n            \n                \n                src/app/modules/users/user-profile-form/user-profile-form.component.ts\n            \n            component\n            UserProfileFormComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/modules/users/user-profiles/user-profile.component.ts\n            \n            component\n            UserProfileComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/auth-service/auth-interceptor.service.ts\n            \n            interceptor\n            AuthInterceptorService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/auth-service/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/services/bands-services/musical-bands.service.ts\n            \n            injectable\n            MusicalBandsService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/services/users-service/user-profiles.service.ts\n            \n            injectable\n            UserProfilesService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/users-service/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/wait-cursor.directive.ts\n            \n            directive\n            WaitCursorDirective\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^14.0.0\n        \n            @angular/cdk : ~14.0.4\n        \n            @angular/common : ^14.0.0\n        \n            @angular/compiler : ^14.0.0\n        \n            @angular/core : ^14.0.0\n        \n            @angular/forms : ^14.0.0\n        \n            @angular/material : ~14.0.4\n        \n            @angular/platform-browser : ^14.0.0\n        \n            @angular/platform-browser-dynamic : ^14.0.0\n        \n            @angular/router : ^14.0.0\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFrontend\nThis project was generated with Angular CLI version 14.0.5.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MainPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MainPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MusicalBandsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_MainPageModule\n\n\n\ncluster_MainPageModule_declarations\n\n\n\ncluster_MainPageModule_imports\n\n\n\ncluster_MaterialModule\n\n\n\ncluster_MaterialModule_declarations\n\n\n\ncluster_MaterialModule_exports\n\n\n\ncluster_MusicalBandsModule\n\n\n\ncluster_MusicalBandsModule_declarations\n\n\n\ncluster_MusicalBandsModule_imports\n\n\n\ncluster_ProfilesModule\n\n\n\ncluster_ProfilesModule_declarations\n\n\n\ncluster_ProfilesModule_imports\n\n\n\ncluster_ProfilesModule_exports\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthInterceptorService\n\nAuthInterceptorService\n\nAppModule -->\n\nAuthInterceptorService->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAuthModule -->\n\nMaterialModule->AuthModule\n\n\n\n\n\nChangeBorderOnClickDirective \n\nChangeBorderOnClickDirective \n\nChangeBorderOnClickDirective  -->\n\nMaterialModule->ChangeBorderOnClickDirective \n\n\n\n\n\nWaitCursorDirective \n\nWaitCursorDirective \n\nWaitCursorDirective  -->\n\nMaterialModule->WaitCursorDirective \n\n\n\n\n\nMusicalBandsModule\n\nMusicalBandsModule\n\nMusicalBandsModule -->\n\nMaterialModule->MusicalBandsModule\n\n\n\n\n\nProfilesModule\n\nProfilesModule\n\nProfilesModule -->\n\nMaterialModule->ProfilesModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nMaterialModule->UsersModule\n\n\n\n\n\nMainPageComponent\n\nMainPageComponent\n\n\n\nMainPageModule\n\nMainPageModule\n\nMainPageModule -->\n\nMainPageComponent->MainPageModule\n\n\n\n\n\nMainPageRoutingModule\n\nMainPageRoutingModule\n\nMainPageModule -->\n\nMainPageRoutingModule->MainPageModule\n\n\n\n\n\nChangeBorderOnClickDirective\n\nChangeBorderOnClickDirective\n\nMaterialModule -->\n\nChangeBorderOnClickDirective->MaterialModule\n\n\n\n\n\nConfirmationDialogComponent\n\nConfirmationDialogComponent\n\nMaterialModule -->\n\nConfirmationDialogComponent->MaterialModule\n\n\n\n\n\nWaitCursorDirective\n\nWaitCursorDirective\n\nMaterialModule -->\n\nWaitCursorDirective->MaterialModule\n\n\n\n\n\nBandFormComponent\n\nBandFormComponent\n\nMusicalBandsModule -->\n\nBandFormComponent->MusicalBandsModule\n\n\n\n\n\nBandInfoComponent\n\nBandInfoComponent\n\nMusicalBandsModule -->\n\nBandInfoComponent->MusicalBandsModule\n\n\n\n\n\nBandMembersSurveyComponent\n\nBandMembersSurveyComponent\n\nMusicalBandsModule -->\n\nBandMembersSurveyComponent->MusicalBandsModule\n\n\n\nMusicalBandsModule -->\n\nProfilesModule->MusicalBandsModule\n\n\n\n\n\nUserProfileComponent \n\nUserProfileComponent \n\nUserProfileComponent  -->\n\nProfilesModule->UserProfileComponent \n\n\n\nUsersModule -->\n\nProfilesModule->UsersModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nProfilesModule -->\n\nUserProfileComponent->ProfilesModule\n\n\n\n\n\nUsersRoutingModule\n\nUsersRoutingModule\n\nProfilesModule -->\n\nUsersRoutingModule->ProfilesModule\n\n\n\nUsersModule -->\n\nUsersRoutingModule->UsersModule\n\n\n\n\n\nAccountInfoComponent\n\nAccountInfoComponent\n\nUsersModule -->\n\nAccountInfoComponent->UsersModule\n\n\n\n\n\nUserProfileFormComponent\n\nUserProfileFormComponent\n\nUsersModule -->\n\nUserProfileFormComponent->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    14 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        21 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
